{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientWidgetApi = void 0;\nvar _events = require(\"events\");\nvar _PostmessageTransport = require(\"./transport/PostmessageTransport\");\nvar _WidgetApiDirection = require(\"./interfaces/WidgetApiDirection\");\nvar _WidgetApiAction = require(\"./interfaces/WidgetApiAction\");\nvar _Capabilities = require(\"./interfaces/Capabilities\");\nvar _ApiVersion = require(\"./interfaces/ApiVersion\");\nvar _WidgetEventCapability = require(\"./models/WidgetEventCapability\");\nvar _GetOpenIDAction = require(\"./interfaces/GetOpenIDAction\");\nvar _SimpleObservable = require(\"./util/SimpleObservable\");\nvar _Symbols = require(\"./Symbols\");\nvar _UpdateDelayedEventAction = require(\"./interfaces/UpdateDelayedEventAction\");\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n} /*\n   * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *         http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n/**\n * API handler for the client side of widgets. This raises events\n * for each action received as `action:${action}` (eg: \"action:screenshot\").\n * Default handling can be prevented by using preventDefault() on the\n * raised event. The default handling varies for each action: ones\n * which the SDK can handle safely are acknowledged appropriately and\n * ones which are unhandled (custom or require the client to do something)\n * are rejected with an error.\n *\n * Events which are preventDefault()ed must reply using the transport.\n * The events raised will have a default of an IWidgetApiRequest\n * interface.\n *\n * When the ClientWidgetApi is ready to start sending requests, it will\n * raise a \"ready\" CustomEvent. After the ready event fires, actions can\n * be sent and the transport will be ready.\n *\n * When the widget has indicated it has loaded, this class raises a\n * \"preparing\" CustomEvent. The preparing event does not indicate that\n * the widget is ready to receive communications - that is signified by\n * the ready event exclusively.\n *\n * This class only handles one widget at a time.\n */\nvar ClientWidgetApi = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(ClientWidgetApi, _EventEmitter);\n  var _super = _createSuper(ClientWidgetApi);\n  /**\n   * Creates a new client widget API. This will instantiate the transport\n   * and start everything. When the iframe is loaded under the widget's\n   * conditions, a \"ready\" event will be raised.\n   * @param {Widget} widget The widget to communicate with.\n   * @param {HTMLIFrameElement} iframe The iframe the widget is in.\n   * @param {WidgetDriver} driver The driver for this widget/client.\n   */\n  function ClientWidgetApi(widget, iframe, driver) {\n    var _this;\n    _classCallCheck(this, ClientWidgetApi);\n    _this = _super.call(this);\n    _this.widget = widget;\n    _this.iframe = iframe;\n    _this.driver = driver;\n    _defineProperty(_assertThisInitialized(_this), \"transport\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cachedWidgetVersions\", null);\n    // contentLoadedActionSent is used to check that only one ContentLoaded request is send.\n    _defineProperty(_assertThisInitialized(_this), \"contentLoadedActionSent\", false);\n    _defineProperty(_assertThisInitialized(_this), \"allowedCapabilities\", new Set());\n    _defineProperty(_assertThisInitialized(_this), \"allowedEvents\", []);\n    _defineProperty(_assertThisInitialized(_this), \"isStopped\", false);\n    _defineProperty(_assertThisInitialized(_this), \"turnServers\", null);\n    _defineProperty(_assertThisInitialized(_this), \"contentLoadedWaitTimer\", void 0);\n    // Stores pending requests to push a room's state to the widget\n    _defineProperty(_assertThisInitialized(_this), \"pushRoomStateTasks\", new Set());\n    // Room ID → event type → state key → events to be pushed\n    _defineProperty(_assertThisInitialized(_this), \"pushRoomStateResult\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"flushRoomStateTask\", null);\n    _defineProperty(_assertThisInitialized(_this), \"viewedRoomId\", null);\n    if (!(iframe !== null && iframe !== void 0 && iframe.contentWindow)) {\n      throw new Error(\"No iframe supplied\");\n    }\n    if (!widget) {\n      throw new Error(\"Invalid widget\");\n    }\n    if (!driver) {\n      throw new Error(\"Invalid driver\");\n    }\n    _this.transport = new _PostmessageTransport.PostmessageTransport(_WidgetApiDirection.WidgetApiDirection.ToWidget, widget.id, iframe.contentWindow, window);\n    _this.transport.targetOrigin = widget.origin;\n    _this.transport.on(\"message\", _this.handleMessage.bind(_assertThisInitialized(_this)));\n    iframe.addEventListener(\"load\", _this.onIframeLoad.bind(_assertThisInitialized(_this)));\n    _this.transport.start();\n    return _this;\n  }\n  _createClass(ClientWidgetApi, [{\n    key: \"hasCapability\",\n    value: function hasCapability(capability) {\n      return this.allowedCapabilities.has(capability);\n    }\n  }, {\n    key: \"canUseRoomTimeline\",\n    value: function canUseRoomTimeline(roomId) {\n      return this.hasCapability(\"org.matrix.msc2762.timeline:\".concat(_Symbols.Symbols.AnyRoom)) || this.hasCapability(\"org.matrix.msc2762.timeline:\".concat(roomId));\n    }\n  }, {\n    key: \"canSendRoomEvent\",\n    value: function canSendRoomEvent(eventType) {\n      var msgtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsRoomEvent(_WidgetEventCapability.EventDirection.Send, eventType, msgtype);\n      });\n    }\n  }, {\n    key: \"canSendStateEvent\",\n    value: function canSendStateEvent(eventType, stateKey) {\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsStateEvent(_WidgetEventCapability.EventDirection.Send, eventType, stateKey);\n      });\n    }\n  }, {\n    key: \"canSendToDeviceEvent\",\n    value: function canSendToDeviceEvent(eventType) {\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsToDeviceEvent(_WidgetEventCapability.EventDirection.Send, eventType);\n      });\n    }\n  }, {\n    key: \"canReceiveRoomEvent\",\n    value: function canReceiveRoomEvent(eventType) {\n      var msgtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsRoomEvent(_WidgetEventCapability.EventDirection.Receive, eventType, msgtype);\n      });\n    }\n  }, {\n    key: \"canReceiveStateEvent\",\n    value: function canReceiveStateEvent(eventType, stateKey) {\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsStateEvent(_WidgetEventCapability.EventDirection.Receive, eventType, stateKey);\n      });\n    }\n  }, {\n    key: \"canReceiveToDeviceEvent\",\n    value: function canReceiveToDeviceEvent(eventType) {\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsToDeviceEvent(_WidgetEventCapability.EventDirection.Receive, eventType);\n      });\n    }\n  }, {\n    key: \"canReceiveRoomAccountData\",\n    value: function canReceiveRoomAccountData(eventType) {\n      return this.allowedEvents.some(function (e) {\n        return e.matchesAsRoomAccountData(_WidgetEventCapability.EventDirection.Receive, eventType);\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isStopped = true;\n      this.transport.stop();\n    }\n  }, {\n    key: \"getWidgetVersions\",\n    value: function () {\n      var _getWidgetVersions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var r;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!Array.isArray(this.cachedWidgetVersions)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.resolve(this.cachedWidgetVersions));\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.SupportedApiVersions, {});\n            case 5:\n              r = _context.sent;\n              this.cachedWidgetVersions = r.supported_versions;\n              return _context.abrupt(\"return\", r.supported_versions);\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.warn(\"non-fatal error getting supported widget versions: \", _context.t0);\n              return _context.abrupt(\"return\", []);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n      function getWidgetVersions() {\n        return _getWidgetVersions.apply(this, arguments);\n      }\n      return getWidgetVersions;\n    }()\n  }, {\n    key: \"beginCapabilities\",\n    value: function beginCapabilities() {\n      var _this2 = this;\n      // widget has loaded - tell all the listeners that\n      this.emit(\"preparing\");\n      var requestedCaps;\n      this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.Capabilities, {}).then(function (caps) {\n        requestedCaps = caps.capabilities;\n        return _this2.driver.validateCapabilities(new Set(caps.capabilities));\n      }).then(function (allowedCaps) {\n        _this2.allowCapabilities(_toConsumableArray(allowedCaps), requestedCaps);\n        _this2.emit(\"ready\");\n      })[\"catch\"](function (e) {\n        _this2.emit(\"error:preparing\", e);\n      });\n    }\n  }, {\n    key: \"allowCapabilities\",\n    value: function allowCapabilities(allowed, requested) {\n      var _this$allowedEvents,\n        _this3 = this;\n      console.log(\"Widget \".concat(this.widget.id, \" is allowed capabilities:\"), allowed);\n      var _iterator2 = _createForOfIteratorHelper(allowed),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var c = _step2.value;\n          this.allowedCapabilities.add(c);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var allowedEvents = _WidgetEventCapability.WidgetEventCapability.findEventCapabilities(allowed);\n      (_this$allowedEvents = this.allowedEvents).push.apply(_this$allowedEvents, _toConsumableArray(allowedEvents));\n      this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.NotifyCapabilities, {\n        requested: requested,\n        approved: Array.from(this.allowedCapabilities)\n      })[\"catch\"](function (e) {\n        console.warn(\"non-fatal error notifying widget of approved capabilities:\", e);\n      }).then(function () {\n        _this3.emit(\"capabilitiesNotified\");\n      });\n\n      // Push the initial room state for all rooms with a timeline capability\n      var _iterator3 = _createForOfIteratorHelper(allowed),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _c = _step3.value;\n          if ((0, _Capabilities.isTimelineCapability)(_c)) {\n            var roomId = (0, _Capabilities.getTimelineRoomIDFromCapability)(_c);\n            if (roomId === _Symbols.Symbols.AnyRoom) {\n              var _iterator4 = _createForOfIteratorHelper(this.driver.getKnownRooms()),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var _roomId = _step4.value;\n                  this.pushRoomState(_roomId);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            } else {\n              this.pushRoomState(roomId);\n            }\n          }\n        }\n        // If new events are allowed and the currently viewed room isn't covered\n        // by a timeline capability, then we know that there could be some state\n        // in the viewed room that the widget hasn't learned about yet- push it.\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      if (allowedEvents.length > 0 && this.viewedRoomId !== null && !this.canUseRoomTimeline(this.viewedRoomId)) {\n        this.pushRoomState(this.viewedRoomId);\n      }\n    }\n  }, {\n    key: \"onIframeLoad\",\n    value: function onIframeLoad(ev) {\n      if (this.widget.waitForIframeLoad) {\n        // If the widget is set to waitForIframeLoad the capabilities immediately get setup after load.\n        // The client does not wait for the ContentLoaded action.\n        this.beginCapabilities();\n      } else {\n        // Reaching this means, that the Iframe got reloaded/loaded and\n        // the clientApi is awaiting the FIRST ContentLoaded action.\n        console.log(\"waitForIframeLoad is false: waiting for widget to send contentLoaded\");\n        this.contentLoadedWaitTimer = setTimeout(function () {\n          console.error(\"Widget specified waitForIframeLoad=false but timed out waiting for contentLoaded event!\");\n        }, 10000);\n        this.contentLoadedActionSent = false;\n      }\n    }\n  }, {\n    key: \"handleContentLoadedAction\",\n    value: function handleContentLoadedAction(action) {\n      if (this.contentLoadedWaitTimer !== undefined) {\n        clearTimeout(this.contentLoadedWaitTimer);\n        this.contentLoadedWaitTimer = undefined;\n      }\n      if (this.contentLoadedActionSent) {\n        throw new Error(\"Improper sequence: ContentLoaded Action can only be sent once after the widget loaded \" + \"and should only be used if waitForIframeLoad is false (default=true)\");\n      }\n      if (this.widget.waitForIframeLoad) {\n        this.transport.reply(action, {\n          error: {\n            message: \"Improper sequence: not expecting ContentLoaded event if \" + \"waitForIframeLoad is true (default=true)\"\n          }\n        });\n      } else {\n        this.transport.reply(action, {});\n        this.beginCapabilities();\n      }\n      this.contentLoadedActionSent = true;\n    }\n  }, {\n    key: \"replyVersions\",\n    value: function replyVersions(request) {\n      this.transport.reply(request, {\n        supported_versions: _ApiVersion.CurrentApiVersions\n      });\n    }\n  }, {\n    key: \"supportsUpdateState\",\n    value: function () {\n      var _supportsUpdateState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getWidgetVersions();\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent.includes(_ApiVersion.UnstableApiVersion.MSC2762_UPDATE_STATE));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function supportsUpdateState() {\n        return _supportsUpdateState.apply(this, arguments);\n      }\n      return supportsUpdateState;\n    }()\n  }, {\n    key: \"handleCapabilitiesRenegotiate\",\n    value: function handleCapabilitiesRenegotiate(request) {\n      var _request$data,\n        _this4 = this;\n      // acknowledge first\n      this.transport.reply(request, {});\n      var requested = ((_request$data = request.data) === null || _request$data === void 0 ? void 0 : _request$data.capabilities) || [];\n      var newlyRequested = new Set(requested.filter(function (r) {\n        return !_this4.hasCapability(r);\n      }));\n      if (newlyRequested.size === 0) {\n        // Nothing to do - skip validation\n        this.allowCapabilities([], []);\n      }\n      this.driver.validateCapabilities(newlyRequested).then(function (allowed) {\n        return _this4.allowCapabilities(_toConsumableArray(allowed), _toConsumableArray(newlyRequested));\n      });\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(request) {\n      var _request$data2,\n        _request$data3,\n        _this5 = this;\n      if (!this.hasCapability(_Capabilities.MatrixCapabilities.MSC2931Navigate)) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Missing capability\"\n          }\n        });\n      }\n      if (!((_request$data2 = request.data) !== null && _request$data2 !== void 0 && _request$data2.uri) || !((_request$data3 = request.data) !== null && _request$data3 !== void 0 && _request$data3.uri.toString().startsWith(\"https://matrix.to/#\"))) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Invalid matrix.to URI\"\n          }\n        });\n      }\n      var onErr = function onErr(e) {\n        console.error(\"[ClientWidgetApi] Failed to handle navigation: \", e);\n        _this5.handleDriverError(e, request, \"Error handling navigation\");\n      };\n      try {\n        this.driver.navigate(request.data.uri.toString())[\"catch\"](function (e) {\n          return onErr(e);\n        }).then(function () {\n          return _this5.transport.reply(request, {});\n        });\n      } catch (e) {\n        return onErr(e);\n      }\n    }\n  }, {\n    key: \"handleOIDC\",\n    value: function handleOIDC(request) {\n      var _this6 = this;\n      var phase = 1; // 1 = initial request, 2 = after user manual confirmation\n\n      var replyState = function replyState(state, credential) {\n        credential = credential || {};\n        if (phase > 1) {\n          return _this6.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.OpenIDCredentials, _objectSpread({\n            state: state,\n            original_request_id: request.requestId\n          }, credential));\n        } else {\n          return _this6.transport.reply(request, _objectSpread({\n            state: state\n          }, credential));\n        }\n      };\n      var replyError = function replyError(msg) {\n        console.error(\"[ClientWidgetApi] Failed to handle OIDC: \", msg);\n        if (phase > 1) {\n          // We don't have a way to indicate that a random error happened in this flow, so\n          // just block the attempt.\n          return replyState(_GetOpenIDAction.OpenIDRequestState.Blocked);\n        } else {\n          return _this6.transport.reply(request, {\n            error: {\n              message: msg\n            }\n          });\n        }\n      };\n      var observer = new _SimpleObservable.SimpleObservable(function (update) {\n        if (update.state === _GetOpenIDAction.OpenIDRequestState.PendingUserConfirmation && phase > 1) {\n          observer.close();\n          return replyError(\"client provided out-of-phase response to OIDC flow\");\n        }\n        if (update.state === _GetOpenIDAction.OpenIDRequestState.PendingUserConfirmation) {\n          replyState(update.state);\n          phase++;\n          return;\n        }\n        if (update.state === _GetOpenIDAction.OpenIDRequestState.Allowed && !update.token) {\n          return replyError(\"client provided invalid OIDC token for an allowed request\");\n        }\n        if (update.state === _GetOpenIDAction.OpenIDRequestState.Blocked) {\n          update.token = undefined; // just in case the client did something weird\n        }\n        observer.close();\n        return replyState(update.state, update.token);\n      });\n      this.driver.askOpenID(observer);\n    }\n  }, {\n    key: \"handleReadRoomAccountData\",\n    value: function handleReadRoomAccountData(request) {\n      var _this7 = this;\n      var events = Promise.resolve([]);\n      events = this.driver.readRoomAccountData(request.data.type);\n      if (!this.canReceiveRoomAccountData(request.data.type)) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Cannot read room account data of this type\"\n          }\n        });\n      }\n      return events.then(function (evs) {\n        _this7.transport.reply(request, {\n          events: evs\n        });\n      });\n    }\n  }, {\n    key: \"handleReadEvents\",\n    value: function () {\n      var _handleReadEvents = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _this8 = this;\n        var askRoomIds, _iterator5, _step5, roomId, limit, since, stateKey, msgtype, _stateKey, events;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (request.data.type) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing event type\"\n                }\n              }));\n            case 2:\n              if (!(request.data.limit !== undefined && (!request.data.limit || request.data.limit < 0))) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - limit out of range\"\n                }\n              }));\n            case 4:\n              if (!(request.data.room_ids === undefined)) {\n                _context3.next = 8;\n                break;\n              }\n              askRoomIds = this.viewedRoomId === null ? [] : [this.viewedRoomId];\n              _context3.next = 30;\n              break;\n            case 8:\n              if (!(request.data.room_ids === _Symbols.Symbols.AnyRoom)) {\n                _context3.next = 12;\n                break;\n              }\n              askRoomIds = this.driver.getKnownRooms().filter(function (roomId) {\n                return _this8.canUseRoomTimeline(roomId);\n              });\n              _context3.next = 30;\n              break;\n            case 12:\n              askRoomIds = request.data.room_ids;\n              _iterator5 = _createForOfIteratorHelper(askRoomIds);\n              _context3.prev = 14;\n              _iterator5.s();\n            case 16:\n              if ((_step5 = _iterator5.n()).done) {\n                _context3.next = 22;\n                break;\n              }\n              roomId = _step5.value;\n              if (this.canUseRoomTimeline(roomId)) {\n                _context3.next = 20;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Unable to access room timeline: \".concat(roomId)\n                }\n              }));\n            case 20:\n              _context3.next = 16;\n              break;\n            case 22:\n              _context3.next = 27;\n              break;\n            case 24:\n              _context3.prev = 24;\n              _context3.t0 = _context3[\"catch\"](14);\n              _iterator5.e(_context3.t0);\n            case 27:\n              _context3.prev = 27;\n              _iterator5.f();\n              return _context3.finish(27);\n            case 30:\n              limit = request.data.limit || 0;\n              since = request.data.since;\n              stateKey = undefined;\n              msgtype = undefined;\n              if (!(request.data.state_key !== undefined)) {\n                _context3.next = 40;\n                break;\n              }\n              stateKey = request.data.state_key === true ? undefined : request.data.state_key.toString();\n              if (this.canReceiveStateEvent(request.data.type, (_stateKey = stateKey) !== null && _stateKey !== void 0 ? _stateKey : null)) {\n                _context3.next = 38;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Cannot read state events of this type\"\n                }\n              }));\n            case 38:\n              _context3.next = 43;\n              break;\n            case 40:\n              msgtype = request.data.msgtype;\n              if (this.canReceiveRoomEvent(request.data.type, msgtype)) {\n                _context3.next = 43;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Cannot read room events of this type\"\n                }\n              }));\n            case 43:\n              if (!(request.data.room_ids === undefined && askRoomIds.length === 0)) {\n                _context3.next = 50;\n                break;\n              }\n              // For backwards compatibility we still call the deprecated\n              // readRoomEvents and readStateEvents methods in case the client isn't\n              // letting us know the currently viewed room via setViewedRoomId\n              //\n              // This can be considered as a deprecated implementation.\n              // A driver should call `setViewedRoomId` on the widget messaging and implement the new readRoomState and readRoomTimeline\n              // Methods.\n              // This block makes sure that it is also possible to not use setViewedRoomId.\n              // readRoomTimeline and readRoomState are required however! Otherwise widget requests that include\n              // `room_ids` will fail.\n              console.warn(\"The widgetDriver uses deprecated behaviour:\\n It does not set the viewedRoomId using `setViewedRoomId`\");\n              _context3.next = 47;\n              return (\n                // This returns [] with the current driver of Element Web.\n                // Add default implementations of the `readRoomEvents` and `readStateEvents`\n                // methods to use `readRoomTimeline` and `readRoomState` if they are not overwritten.\n                request.data.state_key === undefined ? this.driver.readRoomEvents(request.data.type, msgtype, limit, null, since) : this.driver.readStateEvents(request.data.type, stateKey, limit, null)\n              );\n            case 47:\n              events = _context3.sent;\n              _context3.next = 68;\n              break;\n            case 50:\n              _context3.next = 52;\n              return this.supportsUpdateState();\n            case 52:\n              if (!_context3.sent) {\n                _context3.next = 58;\n                break;\n              }\n              _context3.next = 55;\n              return Promise.all(askRoomIds.map(function (roomId) {\n                return _this8.driver.readRoomTimeline(roomId, request.data.type, msgtype, stateKey, limit, since);\n              }));\n            case 55:\n              events = _context3.sent.flat(1);\n              _context3.next = 68;\n              break;\n            case 58:\n              if (!(request.data.state_key === undefined)) {\n                _context3.next = 64;\n                break;\n              }\n              _context3.next = 61;\n              return Promise.all(askRoomIds.map(function (roomId) {\n                return _this8.driver.readRoomTimeline(roomId, request.data.type, msgtype, stateKey, limit, since);\n              }));\n            case 61:\n              _context3.t1 = _context3.sent;\n              _context3.next = 67;\n              break;\n            case 64:\n              _context3.next = 66;\n              return Promise.all(askRoomIds.map(function (roomId) {\n                return _this8.driver.readRoomState(roomId, request.data.type, stateKey);\n              }));\n            case 66:\n              _context3.t1 = _context3.sent;\n            case 67:\n              events = _context3.t1.flat(1);\n            case 68:\n              this.transport.reply(request, {\n                events: events\n              });\n            case 69:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[14, 24, 27, 30]]);\n      }));\n      function handleReadEvents(_x) {\n        return _handleReadEvents.apply(this, arguments);\n      }\n      return handleReadEvents;\n    }()\n  }, {\n    key: \"handleSendEvent\",\n    value: function handleSendEvent(request) {\n      var _this9 = this;\n      if (!request.data.type) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Invalid request - missing event type\"\n          }\n        });\n      }\n      if (!!request.data.room_id && !this.canUseRoomTimeline(request.data.room_id)) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Unable to access room timeline: \".concat(request.data.room_id)\n          }\n        });\n      }\n      var isDelayedEvent = request.data.delay !== undefined || request.data.parent_delay_id !== undefined;\n      if (isDelayedEvent && !this.hasCapability(_Capabilities.MatrixCapabilities.MSC4157SendDelayedEvent)) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Missing capability\"\n          }\n        });\n      }\n      var sendEventPromise;\n      if (request.data.state_key !== undefined) {\n        if (!this.canSendStateEvent(request.data.type, request.data.state_key)) {\n          return this.transport.reply(request, {\n            error: {\n              message: \"Cannot send state events of this type\"\n            }\n          });\n        }\n        if (!isDelayedEvent) {\n          sendEventPromise = this.driver.sendEvent(request.data.type, request.data.content || {}, request.data.state_key, request.data.room_id);\n        } else {\n          var _request$data$delay, _request$data$parent_;\n          sendEventPromise = this.driver.sendDelayedEvent((_request$data$delay = request.data.delay) !== null && _request$data$delay !== void 0 ? _request$data$delay : null, (_request$data$parent_ = request.data.parent_delay_id) !== null && _request$data$parent_ !== void 0 ? _request$data$parent_ : null, request.data.type, request.data.content || {}, request.data.state_key, request.data.room_id);\n        }\n      } else {\n        var content = request.data.content || {};\n        var msgtype = content[\"msgtype\"];\n        if (!this.canSendRoomEvent(request.data.type, msgtype)) {\n          return this.transport.reply(request, {\n            error: {\n              message: \"Cannot send room events of this type\"\n            }\n          });\n        }\n        if (!isDelayedEvent) {\n          sendEventPromise = this.driver.sendEvent(request.data.type, content, null,\n          // not sending a state event\n          request.data.room_id);\n        } else {\n          var _request$data$delay2, _request$data$parent_2;\n          sendEventPromise = this.driver.sendDelayedEvent((_request$data$delay2 = request.data.delay) !== null && _request$data$delay2 !== void 0 ? _request$data$delay2 : null, (_request$data$parent_2 = request.data.parent_delay_id) !== null && _request$data$parent_2 !== void 0 ? _request$data$parent_2 : null, request.data.type, content, null,\n          // not sending a state event\n          request.data.room_id);\n        }\n      }\n      sendEventPromise.then(function (sentEvent) {\n        return _this9.transport.reply(request, _objectSpread({\n          room_id: sentEvent.roomId\n        }, \"eventId\" in sentEvent ? {\n          event_id: sentEvent.eventId\n        } : {\n          delay_id: sentEvent.delayId\n        }));\n      })[\"catch\"](function (e) {\n        console.error(\"error sending event: \", e);\n        _this9.handleDriverError(e, request, \"Error sending event\");\n      });\n    }\n  }, {\n    key: \"handleUpdateDelayedEvent\",\n    value: function handleUpdateDelayedEvent(request) {\n      var _this10 = this;\n      if (!request.data.delay_id) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Invalid request - missing delay_id\"\n          }\n        });\n      }\n      if (!this.hasCapability(_Capabilities.MatrixCapabilities.MSC4157UpdateDelayedEvent)) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Missing capability\"\n          }\n        });\n      }\n      switch (request.data.action) {\n        case _UpdateDelayedEventAction.UpdateDelayedEventAction.Cancel:\n        case _UpdateDelayedEventAction.UpdateDelayedEventAction.Restart:\n        case _UpdateDelayedEventAction.UpdateDelayedEventAction.Send:\n          this.driver.updateDelayedEvent(request.data.delay_id, request.data.action).then(function () {\n            return _this10.transport.reply(request, {});\n          })[\"catch\"](function (e) {\n            console.error(\"error updating delayed event: \", e);\n            _this10.handleDriverError(e, request, \"Error updating delayed event\");\n          });\n          break;\n        default:\n          return this.transport.reply(request, {\n            error: {\n              message: \"Invalid request - unsupported action\"\n            }\n          });\n      }\n    }\n  }, {\n    key: \"handleSendToDevice\",\n    value: function () {\n      var _handleSendToDevice = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (request.data.type) {\n                _context4.next = 5;\n                break;\n              }\n              _context4.next = 3;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing event type\"\n                }\n              });\n            case 3:\n              _context4.next = 31;\n              break;\n            case 5:\n              if (request.data.messages) {\n                _context4.next = 10;\n                break;\n              }\n              _context4.next = 8;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing event contents\"\n                }\n              });\n            case 8:\n              _context4.next = 31;\n              break;\n            case 10:\n              if (!(typeof request.data.encrypted !== \"boolean\")) {\n                _context4.next = 15;\n                break;\n              }\n              _context4.next = 13;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing encryption flag\"\n                }\n              });\n            case 13:\n              _context4.next = 31;\n              break;\n            case 15:\n              if (this.canSendToDeviceEvent(request.data.type)) {\n                _context4.next = 20;\n                break;\n              }\n              _context4.next = 18;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Cannot send to-device events of this type\"\n                }\n              });\n            case 18:\n              _context4.next = 31;\n              break;\n            case 20:\n              _context4.prev = 20;\n              _context4.next = 23;\n              return this.driver.sendToDevice(request.data.type, request.data.encrypted, request.data.messages);\n            case 23:\n              _context4.next = 25;\n              return this.transport.reply(request, {});\n            case 25:\n              _context4.next = 31;\n              break;\n            case 27:\n              _context4.prev = 27;\n              _context4.t0 = _context4[\"catch\"](20);\n              console.error(\"error sending to-device event\", _context4.t0);\n              this.handleDriverError(_context4.t0, request, \"Error sending event\");\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[20, 27]]);\n      }));\n      function handleSendToDevice(_x2) {\n        return _handleSendToDevice.apply(this, arguments);\n      }\n      return handleSendToDevice;\n    }()\n  }, {\n    key: \"pollTurnServers\",\n    value: function () {\n      var _pollTurnServers = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(turnServers, initialServer) {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, server;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.UpdateTurnServers, initialServer // it's compatible, but missing the index signature\n              );\n            case 3:\n              // Pick the generator up where we left off\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context5.prev = 5;\n              _iterator = _asyncIterator(turnServers);\n            case 7:\n              _context5.next = 9;\n              return _iterator.next();\n            case 9:\n              if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n                _context5.next = 16;\n                break;\n              }\n              server = _step.value;\n              _context5.next = 13;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.UpdateTurnServers, server // it's compatible, but missing the index signature\n              );\n            case 13:\n              _iteratorAbruptCompletion = false;\n              _context5.next = 7;\n              break;\n            case 16:\n              _context5.next = 22;\n              break;\n            case 18:\n              _context5.prev = 18;\n              _context5.t0 = _context5[\"catch\"](5);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n            case 22:\n              _context5.prev = 22;\n              _context5.prev = 23;\n              if (!(_iteratorAbruptCompletion && _iterator[\"return\"] != null)) {\n                _context5.next = 27;\n                break;\n              }\n              _context5.next = 27;\n              return _iterator[\"return\"]();\n            case 27:\n              _context5.prev = 27;\n              if (!_didIteratorError) {\n                _context5.next = 30;\n                break;\n              }\n              throw _iteratorError;\n            case 30:\n              return _context5.finish(27);\n            case 31:\n              return _context5.finish(22);\n            case 32:\n              _context5.next = 37;\n              break;\n            case 34:\n              _context5.prev = 34;\n              _context5.t1 = _context5[\"catch\"](0);\n              console.error(\"error polling for TURN servers\", _context5.t1);\n            case 37:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 34], [5, 18, 22, 32], [23,, 27, 31]]);\n      }));\n      function pollTurnServers(_x3, _x4) {\n        return _pollTurnServers.apply(this, arguments);\n      }\n      return pollTurnServers;\n    }()\n  }, {\n    key: \"handleWatchTurnServers\",\n    value: function () {\n      var _handleWatchTurnServers = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request) {\n        var turnServers, _yield$turnServers$ne, done, value;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC3846TurnServers)) {\n                _context6.next = 5;\n                break;\n              }\n              _context6.next = 3;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              });\n            case 3:\n              _context6.next = 30;\n              break;\n            case 5:\n              if (!this.turnServers) {\n                _context6.next = 10;\n                break;\n              }\n              _context6.next = 8;\n              return this.transport.reply(request, {});\n            case 8:\n              _context6.next = 30;\n              break;\n            case 10:\n              _context6.prev = 10;\n              turnServers = this.driver.getTurnServers(); // Peek at the first result, so we can at least verify that the\n              // client isn't banned from getting TURN servers entirely\n              _context6.next = 14;\n              return turnServers.next();\n            case 14:\n              _yield$turnServers$ne = _context6.sent;\n              done = _yield$turnServers$ne.done;\n              value = _yield$turnServers$ne.value;\n              if (!done) {\n                _context6.next = 19;\n                break;\n              }\n              throw new Error(\"Client refuses to provide any TURN servers\");\n            case 19:\n              _context6.next = 21;\n              return this.transport.reply(request, {});\n            case 21:\n              // Start the poll loop, sending the widget the initial result\n              this.pollTurnServers(turnServers, value);\n              this.turnServers = turnServers;\n              _context6.next = 30;\n              break;\n            case 25:\n              _context6.prev = 25;\n              _context6.t0 = _context6[\"catch\"](10);\n              console.error(\"error getting first TURN server results\", _context6.t0);\n              _context6.next = 30;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"TURN servers not available\"\n                }\n              });\n            case 30:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[10, 25]]);\n      }));\n      function handleWatchTurnServers(_x5) {\n        return _handleWatchTurnServers.apply(this, arguments);\n      }\n      return handleWatchTurnServers;\n    }()\n  }, {\n    key: \"handleUnwatchTurnServers\",\n    value: function () {\n      var _handleUnwatchTurnServers = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC3846TurnServers)) {\n                _context7.next = 5;\n                break;\n              }\n              _context7.next = 3;\n              return this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              });\n            case 3:\n              _context7.next = 15;\n              break;\n            case 5:\n              if (this.turnServers) {\n                _context7.next = 10;\n                break;\n              }\n              _context7.next = 8;\n              return this.transport.reply(request, {});\n            case 8:\n              _context7.next = 15;\n              break;\n            case 10:\n              _context7.next = 12;\n              return this.turnServers[\"return\"](undefined);\n            case 12:\n              this.turnServers = null;\n              _context7.next = 15;\n              return this.transport.reply(request, {});\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function handleUnwatchTurnServers(_x6) {\n        return _handleUnwatchTurnServers.apply(this, arguments);\n      }\n      return handleUnwatchTurnServers;\n    }()\n  }, {\n    key: \"handleReadRelations\",\n    value: function () {\n      var _handleReadRelations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request) {\n        var _this11 = this;\n        var result, chunk;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (request.data.event_id) {\n                _context8.next = 2;\n                break;\n              }\n              return _context8.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing event ID\"\n                }\n              }));\n            case 2:\n              if (!(request.data.limit !== undefined && request.data.limit < 0)) {\n                _context8.next = 4;\n                break;\n              }\n              return _context8.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - limit out of range\"\n                }\n              }));\n            case 4:\n              if (!(request.data.room_id !== undefined && !this.canUseRoomTimeline(request.data.room_id))) {\n                _context8.next = 6;\n                break;\n              }\n              return _context8.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Unable to access room timeline: \".concat(request.data.room_id)\n                }\n              }));\n            case 6:\n              _context8.prev = 6;\n              _context8.next = 9;\n              return this.driver.readEventRelations(request.data.event_id, request.data.room_id, request.data.rel_type, request.data.event_type, request.data.from, request.data.to, request.data.limit, request.data.direction);\n            case 9:\n              result = _context8.sent;\n              // only return events that the user has the permission to receive\n              chunk = result.chunk.filter(function (e) {\n                if (e.state_key !== undefined) {\n                  return _this11.canReceiveStateEvent(e.type, e.state_key);\n                } else {\n                  return _this11.canReceiveRoomEvent(e.type, e.content[\"msgtype\"]);\n                }\n              });\n              return _context8.abrupt(\"return\", this.transport.reply(request, {\n                chunk: chunk,\n                prev_batch: result.prevBatch,\n                next_batch: result.nextBatch\n              }));\n            case 14:\n              _context8.prev = 14;\n              _context8.t0 = _context8[\"catch\"](6);\n              console.error(\"error getting the relations\", _context8.t0);\n              this.handleDriverError(_context8.t0, request, \"Unexpected error while reading relations\");\n            case 18:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[6, 14]]);\n      }));\n      function handleReadRelations(_x7) {\n        return _handleReadRelations.apply(this, arguments);\n      }\n      return handleReadRelations;\n    }()\n  }, {\n    key: \"handleUserDirectorySearch\",\n    value: function () {\n      var _handleUserDirectorySearch = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC3973UserDirectorySearch)) {\n                _context9.next = 2;\n                break;\n              }\n              return _context9.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              }));\n            case 2:\n              if (!(typeof request.data.search_term !== \"string\")) {\n                _context9.next = 4;\n                break;\n              }\n              return _context9.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - missing search term\"\n                }\n              }));\n            case 4:\n              if (!(request.data.limit !== undefined && request.data.limit < 0)) {\n                _context9.next = 6;\n                break;\n              }\n              return _context9.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Invalid request - limit out of range\"\n                }\n              }));\n            case 6:\n              _context9.prev = 6;\n              _context9.next = 9;\n              return this.driver.searchUserDirectory(request.data.search_term, request.data.limit);\n            case 9:\n              result = _context9.sent;\n              return _context9.abrupt(\"return\", this.transport.reply(request, {\n                limited: result.limited,\n                results: result.results.map(function (r) {\n                  return {\n                    user_id: r.userId,\n                    display_name: r.displayName,\n                    avatar_url: r.avatarUrl\n                  };\n                })\n              }));\n            case 13:\n              _context9.prev = 13;\n              _context9.t0 = _context9[\"catch\"](6);\n              console.error(\"error searching in the user directory\", _context9.t0);\n              this.handleDriverError(_context9.t0, request, \"Unexpected error while searching in the user directory\");\n            case 17:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[6, 13]]);\n      }));\n      function handleUserDirectorySearch(_x8) {\n        return _handleUserDirectorySearch.apply(this, arguments);\n      }\n      return handleUserDirectorySearch;\n    }()\n  }, {\n    key: \"handleGetMediaConfig\",\n    value: function () {\n      var _handleGetMediaConfig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC4039UploadFile)) {\n                _context10.next = 2;\n                break;\n              }\n              return _context10.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              }));\n            case 2:\n              _context10.prev = 2;\n              _context10.next = 5;\n              return this.driver.getMediaConfig();\n            case 5:\n              result = _context10.sent;\n              return _context10.abrupt(\"return\", this.transport.reply(request, result));\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](2);\n              console.error(\"error while getting the media configuration\", _context10.t0);\n              this.handleDriverError(_context10.t0, request, \"Unexpected error while getting the media configuration\");\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[2, 9]]);\n      }));\n      function handleGetMediaConfig(_x9) {\n        return _handleGetMediaConfig.apply(this, arguments);\n      }\n      return handleGetMediaConfig;\n    }()\n  }, {\n    key: \"handleUploadFile\",\n    value: function () {\n      var _handleUploadFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC4039UploadFile)) {\n                _context11.next = 2;\n                break;\n              }\n              return _context11.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              }));\n            case 2:\n              _context11.prev = 2;\n              _context11.next = 5;\n              return this.driver.uploadFile(request.data.file);\n            case 5:\n              result = _context11.sent;\n              return _context11.abrupt(\"return\", this.transport.reply(request, {\n                content_uri: result.contentUri\n              }));\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](2);\n              console.error(\"error while uploading a file\", _context11.t0);\n              this.handleDriverError(_context11.t0, request, \"Unexpected error while uploading a file\");\n            case 13:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this, [[2, 9]]);\n      }));\n      function handleUploadFile(_x10) {\n        return _handleUploadFile.apply(this, arguments);\n      }\n      return handleUploadFile;\n    }()\n  }, {\n    key: \"handleDownloadFile\",\n    value: function () {\n      var _handleDownloadFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (this.hasCapability(_Capabilities.MatrixCapabilities.MSC4039DownloadFile)) {\n                _context12.next = 2;\n                break;\n              }\n              return _context12.abrupt(\"return\", this.transport.reply(request, {\n                error: {\n                  message: \"Missing capability\"\n                }\n              }));\n            case 2:\n              _context12.prev = 2;\n              _context12.next = 5;\n              return this.driver.downloadFile(request.data.content_uri);\n            case 5:\n              result = _context12.sent;\n              return _context12.abrupt(\"return\", this.transport.reply(request, {\n                file: result.file\n              }));\n            case 9:\n              _context12.prev = 9;\n              _context12.t0 = _context12[\"catch\"](2);\n              console.error(\"error while downloading a file\", _context12.t0);\n              this.handleDriverError(_context12.t0, request, \"Unexpected error while downloading a file\");\n            case 13:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[2, 9]]);\n      }));\n      function handleDownloadFile(_x11) {\n        return _handleDownloadFile.apply(this, arguments);\n      }\n      return handleDownloadFile;\n    }()\n  }, {\n    key: \"handleDriverError\",\n    value: function handleDriverError(e, request, message) {\n      var data = this.driver.processError(e);\n      this.transport.reply(request, {\n        error: _objectSpread({\n          message: message\n        }, data)\n      });\n    }\n  }, {\n    key: \"handleMessage\",\n    value: function handleMessage(ev) {\n      if (this.isStopped) return;\n      var actionEv = new CustomEvent(\"action:\".concat(ev.detail.action), {\n        detail: ev.detail,\n        cancelable: true\n      });\n      this.emit(\"action:\".concat(ev.detail.action), actionEv);\n      if (!actionEv.defaultPrevented) {\n        switch (ev.detail.action) {\n          case _WidgetApiAction.WidgetApiFromWidgetAction.ContentLoaded:\n            return this.handleContentLoadedAction(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.SupportedApiVersions:\n            return this.replyVersions(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.SendEvent:\n            return this.handleSendEvent(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.SendToDevice:\n            return this.handleSendToDevice(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.GetOpenIDCredentials:\n            return this.handleOIDC(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC2931Navigate:\n            return this.handleNavigate(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC2974RenegotiateCapabilities:\n            return this.handleCapabilitiesRenegotiate(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC2876ReadEvents:\n            return this.handleReadEvents(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.WatchTurnServers:\n            return this.handleWatchTurnServers(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.UnwatchTurnServers:\n            return this.handleUnwatchTurnServers(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC3869ReadRelations:\n            return this.handleReadRelations(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC3973UserDirectorySearch:\n            return this.handleUserDirectorySearch(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.BeeperReadRoomAccountData:\n            return this.handleReadRoomAccountData(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC4039GetMediaConfigAction:\n            return this.handleGetMediaConfig(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC4039UploadFileAction:\n            return this.handleUploadFile(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC4039DownloadFileAction:\n            return this.handleDownloadFile(ev.detail);\n          case _WidgetApiAction.WidgetApiFromWidgetAction.MSC4157UpdateDelayedEvent:\n            return this.handleUpdateDelayedEvent(ev.detail);\n          default:\n            return this.transport.reply(ev.detail, {\n              error: {\n                message: \"Unknown or unsupported action: \" + ev.detail.action\n              }\n            });\n        }\n      }\n    }\n\n    /**\n     * Informs the widget that the client's theme has changed.\n     * @param theme The theme data, as an object with arbitrary contents.\n     */\n  }, {\n    key: \"updateTheme\",\n    value: function updateTheme(theme) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.ThemeChange, theme);\n    }\n\n    /**\n     * Informs the widget that the client's language has changed.\n     * @param lang The BCP 47 identifier representing the client's current language.\n     */\n  }, {\n    key: \"updateLanguage\",\n    value: function updateLanguage(lang) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.LanguageChange, {\n        lang: lang\n      });\n    }\n\n    /**\n     * Takes a screenshot of the widget.\n     * @returns Resolves to the widget's screenshot.\n     * @throws Throws if there is a problem.\n     */\n  }, {\n    key: \"takeScreenshot\",\n    value: function takeScreenshot() {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.TakeScreenshot, {});\n    }\n\n    /**\n     * Alerts the widget to whether or not it is currently visible.\n     * @param {boolean} isVisible Whether the widget is visible or not.\n     * @returns {Promise<IWidgetApiResponseData>} Resolves when the widget acknowledges the update.\n     */\n  }, {\n    key: \"updateVisibility\",\n    value: function updateVisibility(isVisible) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.UpdateVisibility, {\n        visible: isVisible\n      });\n    }\n  }, {\n    key: \"sendWidgetConfig\",\n    value: function sendWidgetConfig(data) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.WidgetConfig, data).then();\n    }\n  }, {\n    key: \"notifyModalWidgetButtonClicked\",\n    value: function notifyModalWidgetButtonClicked(id) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.ButtonClicked, {\n        id: id\n      }).then();\n    }\n  }, {\n    key: \"notifyModalWidgetClose\",\n    value: function notifyModalWidgetClose(data) {\n      return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.CloseModalWidget, data).then();\n    }\n\n    /**\n     * Feeds an event to the widget. As a client you are expected to call this\n     * for every new event in every room to which you are joined or invited.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {string} currentViewedRoomId The room ID the user is currently\n     *   interacting with. Not the room ID of the event.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to read the event due to permissions, rejects if the widget failed\n     *   to handle the event.\n     * @deprecated It is recommended to communicate the viewed room ID by calling\n     *   {@link ClientWidgetApi.setViewedRoomId} rather than passing it to this\n     *   method.\n     */\n  }, {\n    key: \"feedEvent\",\n    value: function () {\n      var _feedEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(rawEvent, currentViewedRoomId) {\n        var _rawEvent$content;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (currentViewedRoomId !== undefined) this.setViewedRoomId(currentViewedRoomId);\n              if (!(rawEvent.room_id !== this.viewedRoomId && !this.canUseRoomTimeline(rawEvent.room_id))) {\n                _context13.next = 3;\n                break;\n              }\n              return _context13.abrupt(\"return\");\n            case 3:\n              if (!(rawEvent.state_key !== undefined && rawEvent.state_key !== null)) {\n                _context13.next = 8;\n                break;\n              }\n              if (this.canReceiveStateEvent(rawEvent.type, rawEvent.state_key)) {\n                _context13.next = 6;\n                break;\n              }\n              return _context13.abrupt(\"return\");\n            case 6:\n              _context13.next = 10;\n              break;\n            case 8:\n              if (this.canReceiveRoomEvent(rawEvent.type, (_rawEvent$content = rawEvent.content) === null || _rawEvent$content === void 0 ? void 0 : _rawEvent$content[\"msgtype\"])) {\n                _context13.next = 10;\n                break;\n              }\n              return _context13.abrupt(\"return\");\n            case 10:\n              _context13.next = 12;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.SendEvent,\n              // it's compatible, but missing the index signature\n              rawEvent);\n            case 12:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function feedEvent(_x12, _x13) {\n        return _feedEvent.apply(this, arguments);\n      }\n      return feedEvent;\n    }()\n    /**\n     * Feeds a to-device event to the widget. As a client you are expected to\n     * call this for every to-device event you receive.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {boolean} encrypted Whether the event contents were encrypted.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to receive the event due to permissions, rejects if the widget\n     *   failed to handle the event.\n     */\n  }, {\n    key: \"feedToDevice\",\n    value: function () {\n      var _feedToDevice = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(rawEvent, encrypted) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              if (!this.canReceiveToDeviceEvent(rawEvent.type)) {\n                _context14.next = 3;\n                break;\n              }\n              _context14.next = 3;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.SendToDevice,\n              // it's compatible, but missing the index signature\n              _objectSpread(_objectSpread({}, rawEvent), {}, {\n                encrypted: encrypted\n              }));\n            case 3:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function feedToDevice(_x14, _x15) {\n        return _feedToDevice.apply(this, arguments);\n      }\n      return feedToDevice;\n    }()\n  }, {\n    key: \"setViewedRoomId\",\n    value:\n    /**\n     * Indicate that a room is being viewed (making it possible for the widget\n     * to interact with it).\n     */\n    function setViewedRoomId(roomId) {\n      this.viewedRoomId = roomId;\n      // If the widget doesn't have timeline permissions for the room then\n      // this is its opportunity to learn the room state. We push the entire\n      // room state, which could be redundant if this room had been viewed\n      // once before, but it's easier than selectively pushing just the bits\n      // of state that changed while the room was in the background.\n      if (roomId !== null && !this.canUseRoomTimeline(roomId)) this.pushRoomState(roomId);\n    }\n  }, {\n    key: \"flushRoomState\",\n    value: function () {\n      var _flushRoomState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var events, _iterator6, _step6, eventTypeMap, _iterator7, _step7, stateKeyMap;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n            case 1:\n              _context15.next = 3;\n              return Promise.all(_toConsumableArray(this.pushRoomStateTasks));\n            case 3:\n              if (this.pushRoomStateTasks.size > 0) {\n                _context15.next = 1;\n                break;\n              }\n            case 4:\n              events = [];\n              _iterator6 = _createForOfIteratorHelper(this.pushRoomStateResult.values());\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  eventTypeMap = _step6.value;\n                  _iterator7 = _createForOfIteratorHelper(eventTypeMap.values());\n                  try {\n                    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                      stateKeyMap = _step7.value;\n                      events.push.apply(events, _toConsumableArray(stateKeyMap.values()));\n                    }\n                  } catch (err) {\n                    _iterator7.e(err);\n                  } finally {\n                    _iterator7.f();\n                  }\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n              _context15.next = 9;\n              return this.getWidgetVersions();\n            case 9:\n              if (!_context15.sent.includes(_ApiVersion.UnstableApiVersion.MSC2762_UPDATE_STATE)) {\n                _context15.next = 12;\n                break;\n              }\n              _context15.next = 12;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.UpdateState, {\n                state: events\n              });\n            case 12:\n              _context15.prev = 12;\n              this.flushRoomStateTask = null;\n              return _context15.finish(12);\n            case 15:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[0,, 12, 15]]);\n      }));\n      function flushRoomState() {\n        return _flushRoomState.apply(this, arguments);\n      }\n      return flushRoomState;\n    }()\n    /**\n     * Read the room's state and push all entries that the widget is allowed to\n     * read through to the widget.\n     */\n  }, {\n    key: \"pushRoomState\",\n    value: function pushRoomState(roomId) {\n      var _this12 = this;\n      var _iterator8 = _createForOfIteratorHelper(this.allowedEvents),\n        _step8;\n      try {\n        var _loop = function _loop() {\n          var cap = _step8.value;\n          if (cap.kind === _WidgetEventCapability.EventKind.State && cap.direction === _WidgetEventCapability.EventDirection.Receive) {\n            var _cap$keyStr, _this12$flushRoomStat;\n            // Initiate the task\n            var events = _this12.driver.readRoomState(roomId, cap.eventType, (_cap$keyStr = cap.keyStr) !== null && _cap$keyStr !== void 0 ? _cap$keyStr : undefined);\n            var task = events.then(function (events) {\n              // When complete, queue the resulting events to be\n              // pushed to the widget\n              var _iterator9 = _createForOfIteratorHelper(events),\n                _step9;\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var event = _step9.value;\n                  var eventTypeMap = _this12.pushRoomStateResult.get(roomId);\n                  if (eventTypeMap === undefined) {\n                    eventTypeMap = new Map();\n                    _this12.pushRoomStateResult.set(roomId, eventTypeMap);\n                  }\n                  var stateKeyMap = eventTypeMap.get(cap.eventType);\n                  if (stateKeyMap === undefined) {\n                    stateKeyMap = new Map();\n                    eventTypeMap.set(cap.eventType, stateKeyMap);\n                  }\n                  if (!stateKeyMap.has(event.state_key)) stateKeyMap.set(event.state_key, event);\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }, function (e) {\n              return console.error(\"Failed to read room state for \".concat(roomId, \" (\").concat(cap.eventType, \", \").concat(cap.keyStr, \")\"), e);\n            }).then(function () {\n              // Mark request as no longer pending\n              _this12.pushRoomStateTasks[\"delete\"](task);\n            });\n\n            // Mark task as pending\n            _this12.pushRoomStateTasks.add(task);\n            // Assuming no other tasks are already happening concurrently,\n            // schedule the widget action that actually pushes the events\n            (_this12$flushRoomStat = _this12.flushRoomStateTask) !== null && _this12$flushRoomStat !== void 0 ? _this12$flushRoomStat : _this12.flushRoomStateTask = _this12.flushRoomState();\n            _this12.flushRoomStateTask[\"catch\"](function (e) {\n              return console.error(\"Failed to push room state\", e);\n            });\n          }\n        };\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    /**\n     * Feeds a room state update to the widget. As a client you are expected to\n     * call this for every state update in every room to which you are joined or\n     * invited.\n     * @param {IRoomEvent} rawEvent The state event corresponding to the updated\n     *   room state entry.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to receive the room state due to permissions, rejects if the\n     *   widget failed to handle the update.\n     */\n  }, {\n    key: \"feedStateUpdate\",\n    value: function () {\n      var _feedStateUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(rawEvent) {\n        var eventTypeMap, stateKeyMap;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              if (!(rawEvent.state_key === undefined)) {\n                _context16.next = 2;\n                break;\n              }\n              throw new Error(\"Not a state event\");\n            case 2:\n              if (!((rawEvent.room_id === this.viewedRoomId || this.canUseRoomTimeline(rawEvent.room_id)) && this.canReceiveStateEvent(rawEvent.type, rawEvent.state_key))) {\n                _context16.next = 21;\n                break;\n              }\n              if (!(this.pushRoomStateTasks.size === 0)) {\n                _context16.next = 11;\n                break;\n              }\n              _context16.next = 6;\n              return this.getWidgetVersions();\n            case 6:\n              if (!_context16.sent.includes(_ApiVersion.UnstableApiVersion.MSC2762_UPDATE_STATE)) {\n                _context16.next = 9;\n                break;\n              }\n              _context16.next = 9;\n              return this.transport.send(_WidgetApiAction.WidgetApiToWidgetAction.UpdateState, {\n                state: [rawEvent]\n              });\n            case 9:\n              _context16.next = 21;\n              break;\n            case 11:\n              // Lump the update in with whatever data will be sent in the\n              // initial push later. Even if we set it to an \"outdated\" entry\n              // here, we can count on any newer entries being passed to this\n              // same method eventually; this won't cause stuck state.\n              eventTypeMap = this.pushRoomStateResult.get(rawEvent.room_id);\n              if (eventTypeMap === undefined) {\n                eventTypeMap = new Map();\n                this.pushRoomStateResult.set(rawEvent.room_id, eventTypeMap);\n              }\n              stateKeyMap = eventTypeMap.get(rawEvent.type);\n              if (stateKeyMap === undefined) {\n                stateKeyMap = new Map();\n                eventTypeMap.set(rawEvent.type, stateKeyMap);\n              }\n              if (!stateKeyMap.has(rawEvent.type)) stateKeyMap.set(rawEvent.state_key, rawEvent);\n            case 16:\n              _context16.next = 18;\n              return Promise.all(_toConsumableArray(this.pushRoomStateTasks));\n            case 18:\n              if (this.pushRoomStateTasks.size > 0) {\n                _context16.next = 16;\n                break;\n              }\n            case 19:\n              _context16.next = 21;\n              return this.flushRoomStateTask;\n            case 21:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function feedStateUpdate(_x16) {\n        return _feedStateUpdate.apply(this, arguments);\n      }\n      return feedStateUpdate;\n    }()\n  }]);\n  return ClientWidgetApi;\n}(_events.EventEmitter);\nexports.ClientWidgetApi = ClientWidgetApi;","map":{"version":3,"names":["_events","require","_PostmessageTransport","_WidgetApiDirection","_WidgetApiAction","_Capabilities","_ApiVersion","_WidgetEventCapability","_GetOpenIDAction","_SimpleObservable","_Symbols","_UpdateDelayedEventAction","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","from","test","iter","len","arr2","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","_return","ret","thr","ClientWidgetApi","_EventEmitter","_super","widget","iframe","driver","_this","Set","Map","contentWindow","transport","PostmessageTransport","WidgetApiDirection","ToWidget","id","window","targetOrigin","origin","on","handleMessage","addEventListener","onIframeLoad","start","hasCapability","capability","allowedCapabilities","has","canUseRoomTimeline","roomId","concat","Symbols","AnyRoom","canSendRoomEvent","eventType","msgtype","allowedEvents","some","matchesAsRoomEvent","EventDirection","Send","canSendStateEvent","stateKey","matchesAsStateEvent","canSendToDeviceEvent","matchesAsToDeviceEvent","canReceiveRoomEvent","Receive","canReceiveStateEvent","canReceiveToDeviceEvent","canReceiveRoomAccountData","matchesAsRoomAccountData","isStopped","_getWidgetVersions","_callee","_callee$","_context","cachedWidgetVersions","send","WidgetApiToWidgetAction","SupportedApiVersions","supported_versions","t0","console","warn","getWidgetVersions","beginCapabilities","_this2","emit","requestedCaps","Capabilities","caps","capabilities","validateCapabilities","allowedCaps","allowCapabilities","allowed","requested","_this$allowedEvents","_this3","log","_iterator2","_step2","c","add","WidgetEventCapability","findEventCapabilities","NotifyCapabilities","approved","_iterator3","_step3","_c","isTimelineCapability","getTimelineRoomIDFromCapability","_iterator4","getKnownRooms","_step4","_roomId","pushRoomState","viewedRoomId","ev","waitForIframeLoad","contentLoadedWaitTimer","setTimeout","contentLoadedActionSent","handleContentLoadedAction","action","clearTimeout","reply","message","replyVersions","request","CurrentApiVersions","_supportsUpdateState","_callee2","_callee2$","_context2","includes","UnstableApiVersion","MSC2762_UPDATE_STATE","supportsUpdateState","handleCapabilitiesRenegotiate","_request$data","_this4","data","newlyRequested","size","handleNavigate","_request$data2","_request$data3","_this5","MatrixCapabilities","MSC2931Navigate","uri","startsWith","onErr","handleDriverError","navigate","handleOIDC","_this6","phase","replyState","credential","OpenIDCredentials","original_request_id","requestId","replyError","msg","OpenIDRequestState","Blocked","observer","SimpleObservable","update","PendingUserConfirmation","close","Allowed","token","askOpenID","handleReadRoomAccountData","_this7","events","readRoomAccountData","evs","_handleReadEvents","_callee3","_this8","askRoomIds","_iterator5","_step5","limit","since","_stateKey","_callee3$","_context3","room_ids","state_key","readRoomEvents","readStateEvents","all","map","readRoomTimeline","flat","t1","readRoomState","handleReadEvents","_x","handleSendEvent","_this9","room_id","isDelayedEvent","delay","parent_delay_id","MSC4157SendDelayedEvent","sendEventPromise","sendEvent","content","_request$data$delay","_request$data$parent_","sendDelayedEvent","_request$data$delay2","_request$data$parent_2","sentEvent","event_id","eventId","delay_id","delayId","handleUpdateDelayedEvent","_this10","MSC4157UpdateDelayedEvent","UpdateDelayedEventAction","Cancel","Restart","updateDelayedEvent","_handleSendToDevice","_callee4","_callee4$","_context4","messages","encrypted","sendToDevice","handleSendToDevice","_x2","_pollTurnServers","_callee5","turnServers","initialServer","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","server","_callee5$","_context5","UpdateTurnServers","pollTurnServers","_x3","_x4","_handleWatchTurnServers","_callee6","_yield$turnServers$ne","_callee6$","_context6","MSC3846TurnServers","getTurnServers","handleWatchTurnServers","_x5","_handleUnwatchTurnServers","_callee7","_callee7$","_context7","handleUnwatchTurnServers","_x6","_handleReadRelations","_callee8","_this11","chunk","_callee8$","_context8","readEventRelations","rel_type","event_type","to","direction","prev_batch","prevBatch","next_batch","nextBatch","handleReadRelations","_x7","_handleUserDirectorySearch","_callee9","_callee9$","_context9","MSC3973UserDirectorySearch","search_term","searchUserDirectory","limited","results","user_id","userId","display_name","avatar_url","avatarUrl","handleUserDirectorySearch","_x8","_handleGetMediaConfig","_callee10","_callee10$","_context10","MSC4039UploadFile","getMediaConfig","handleGetMediaConfig","_x9","_handleUploadFile","_callee11","_callee11$","_context11","uploadFile","file","content_uri","contentUri","handleUploadFile","_x10","_handleDownloadFile","_callee12","_callee12$","_context12","MSC4039DownloadFile","downloadFile","handleDownloadFile","_x11","processError","actionEv","CustomEvent","detail","cancelable","defaultPrevented","WidgetApiFromWidgetAction","ContentLoaded","SendEvent","SendToDevice","GetOpenIDCredentials","MSC2974RenegotiateCapabilities","MSC2876ReadEvents","WatchTurnServers","UnwatchTurnServers","MSC3869ReadRelations","BeeperReadRoomAccountData","MSC4039GetMediaConfigAction","MSC4039UploadFileAction","MSC4039DownloadFileAction","updateTheme","theme","ThemeChange","updateLanguage","lang","LanguageChange","takeScreenshot","TakeScreenshot","updateVisibility","isVisible","UpdateVisibility","visible","sendWidgetConfig","WidgetConfig","notifyModalWidgetButtonClicked","ButtonClicked","notifyModalWidgetClose","CloseModalWidget","_feedEvent","_callee13","rawEvent","currentViewedRoomId","_rawEvent$content","_callee13$","_context13","setViewedRoomId","feedEvent","_x12","_x13","_feedToDevice","_callee14","_callee14$","_context14","feedToDevice","_x14","_x15","_flushRoomState","_callee15","_iterator6","_step6","eventTypeMap","_iterator7","_step7","stateKeyMap","_callee15$","_context15","pushRoomStateTasks","pushRoomStateResult","UpdateState","flushRoomStateTask","flushRoomState","_this12","_iterator8","_step8","_loop","cap","kind","EventKind","State","_cap$keyStr","_this12$flushRoomStat","keyStr","task","_iterator9","_step9","event","get","set","_feedStateUpdate","_callee16","_callee16$","_context16","feedStateUpdate","_x16","EventEmitter"],"sources":["C:\\Users\\pilat\\Documents\\Knwlab\\matrix-bot-widget\\node_modules\\matrix-widget-api\\src\\ClientWidgetApi.ts"],"sourcesContent":["/*\n * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from \"events\";\n\nimport { ITransport } from \"./transport/ITransport\";\nimport { Widget } from \"./models/Widget\";\nimport { PostmessageTransport } from \"./transport/PostmessageTransport\";\nimport { WidgetApiDirection } from \"./interfaces/WidgetApiDirection\";\nimport { IWidgetApiRequest, IWidgetApiRequestEmptyData } from \"./interfaces/IWidgetApiRequest\";\nimport { IContentLoadedActionRequest } from \"./interfaces/ContentLoadedAction\";\nimport { WidgetApiFromWidgetAction, WidgetApiToWidgetAction } from \"./interfaces/WidgetApiAction\";\nimport { IWidgetApiErrorResponseData } from \"./interfaces/IWidgetApiErrorResponse\";\nimport {\n    Capability,\n    MatrixCapabilities,\n    getTimelineRoomIDFromCapability,\n    isTimelineCapability,\n} from \"./interfaces/Capabilities\";\nimport { IOpenIDUpdate, ISendEventDetails, ISendDelayedEventDetails, WidgetDriver } from \"./driver/WidgetDriver\";\nimport {\n    ICapabilitiesActionResponseData,\n    INotifyCapabilitiesActionRequestData,\n    IRenegotiateCapabilitiesActionRequest,\n} from \"./interfaces/CapabilitiesAction\";\nimport {\n    ISupportedVersionsActionRequest,\n    ISupportedVersionsActionResponseData,\n} from \"./interfaces/SupportedVersionsAction\";\nimport { ApiVersion, CurrentApiVersions, UnstableApiVersion } from \"./interfaces/ApiVersion\";\nimport { IScreenshotActionResponseData } from \"./interfaces/ScreenshotAction\";\nimport { IVisibilityActionRequestData } from \"./interfaces/VisibilityAction\";\nimport { IWidgetApiAcknowledgeResponseData, IWidgetApiResponseData } from \"./interfaces/IWidgetApiResponse\";\nimport {\n    IModalWidgetButtonClickedRequestData,\n    IModalWidgetOpenRequestData,\n    IModalWidgetOpenRequestDataButton,\n    IModalWidgetReturnData,\n} from \"./interfaces/ModalWidgetActions\";\nimport {\n    ISendEventFromWidgetActionRequest,\n    ISendEventFromWidgetResponseData,\n    ISendEventToWidgetRequestData,\n} from \"./interfaces/SendEventAction\";\nimport {\n    ISendToDeviceFromWidgetActionRequest,\n    ISendToDeviceFromWidgetResponseData,\n    ISendToDeviceToWidgetRequestData,\n} from \"./interfaces/SendToDeviceAction\";\nimport { EventDirection, EventKind, WidgetEventCapability } from \"./models/WidgetEventCapability\";\nimport { IRoomEvent } from \"./interfaces/IRoomEvent\";\nimport { IRoomAccountData } from \"./interfaces/IRoomAccountData\";\nimport {\n    IGetOpenIDActionRequest,\n    IGetOpenIDActionResponseData,\n    IOpenIDCredentials,\n    OpenIDRequestState,\n} from \"./interfaces/GetOpenIDAction\";\nimport { SimpleObservable } from \"./util/SimpleObservable\";\nimport { IOpenIDCredentialsActionRequestData } from \"./interfaces/OpenIDCredentialsAction\";\nimport { INavigateActionRequest } from \"./interfaces/NavigateAction\";\nimport { IReadEventFromWidgetActionRequest, IReadEventFromWidgetResponseData } from \"./interfaces/ReadEventAction\";\nimport {\n    ITurnServer,\n    IWatchTurnServersRequest,\n    IUnwatchTurnServersRequest,\n    IUpdateTurnServersRequestData,\n} from \"./interfaces/TurnServerActions\";\nimport { Symbols } from \"./Symbols\";\nimport {\n    IReadRelationsFromWidgetActionRequest,\n    IReadRelationsFromWidgetResponseData,\n} from \"./interfaces/ReadRelationsAction\";\nimport {\n    IUserDirectorySearchFromWidgetActionRequest,\n    IUserDirectorySearchFromWidgetResponseData,\n} from \"./interfaces/UserDirectorySearchAction\";\nimport {\n    IReadRoomAccountDataFromWidgetActionRequest,\n    IReadRoomAccountDataFromWidgetResponseData,\n} from \"./interfaces/ReadRoomAccountDataAction\";\nimport {\n    IGetMediaConfigActionFromWidgetActionRequest,\n    IGetMediaConfigActionFromWidgetResponseData,\n} from \"./interfaces/GetMediaConfigAction\";\nimport {\n    IUpdateDelayedEventFromWidgetActionRequest,\n    UpdateDelayedEventAction,\n} from \"./interfaces/UpdateDelayedEventAction\";\nimport {\n    IUploadFileActionFromWidgetActionRequest,\n    IUploadFileActionFromWidgetResponseData,\n} from \"./interfaces/UploadFileAction\";\nimport {\n    IDownloadFileActionFromWidgetActionRequest,\n    IDownloadFileActionFromWidgetResponseData,\n} from \"./interfaces/DownloadFileAction\";\nimport { IThemeChangeActionRequestData } from \"./interfaces/ThemeChangeAction\";\nimport { IUpdateStateToWidgetRequestData } from \"./interfaces/UpdateStateAction\";\n\n/**\n * API handler for the client side of widgets. This raises events\n * for each action received as `action:${action}` (eg: \"action:screenshot\").\n * Default handling can be prevented by using preventDefault() on the\n * raised event. The default handling varies for each action: ones\n * which the SDK can handle safely are acknowledged appropriately and\n * ones which are unhandled (custom or require the client to do something)\n * are rejected with an error.\n *\n * Events which are preventDefault()ed must reply using the transport.\n * The events raised will have a default of an IWidgetApiRequest\n * interface.\n *\n * When the ClientWidgetApi is ready to start sending requests, it will\n * raise a \"ready\" CustomEvent. After the ready event fires, actions can\n * be sent and the transport will be ready.\n *\n * When the widget has indicated it has loaded, this class raises a\n * \"preparing\" CustomEvent. The preparing event does not indicate that\n * the widget is ready to receive communications - that is signified by\n * the ready event exclusively.\n *\n * This class only handles one widget at a time.\n */\nexport class ClientWidgetApi extends EventEmitter {\n    public readonly transport: ITransport;\n\n    private cachedWidgetVersions: ApiVersion[] | null = null;\n    // contentLoadedActionSent is used to check that only one ContentLoaded request is send.\n    private contentLoadedActionSent = false;\n    private allowedCapabilities = new Set<Capability>();\n    private allowedEvents: WidgetEventCapability[] = [];\n    private isStopped = false;\n    private turnServers: AsyncGenerator<ITurnServer> | null = null;\n    private contentLoadedWaitTimer?: ReturnType<typeof setTimeout>;\n    // Stores pending requests to push a room's state to the widget\n    private pushRoomStateTasks = new Set<Promise<void>>();\n    // Room ID → event type → state key → events to be pushed\n    private pushRoomStateResult = new Map<string, Map<string, Map<string, IRoomEvent>>>();\n    private flushRoomStateTask: Promise<void> | null = null;\n\n    /**\n     * Creates a new client widget API. This will instantiate the transport\n     * and start everything. When the iframe is loaded under the widget's\n     * conditions, a \"ready\" event will be raised.\n     * @param {Widget} widget The widget to communicate with.\n     * @param {HTMLIFrameElement} iframe The iframe the widget is in.\n     * @param {WidgetDriver} driver The driver for this widget/client.\n     */\n    public constructor(\n        public readonly widget: Widget,\n        private iframe: HTMLIFrameElement,\n        private driver: WidgetDriver,\n    ) {\n        super();\n        if (!iframe?.contentWindow) {\n            throw new Error(\"No iframe supplied\");\n        }\n        if (!widget) {\n            throw new Error(\"Invalid widget\");\n        }\n        if (!driver) {\n            throw new Error(\"Invalid driver\");\n        }\n        this.transport = new PostmessageTransport(WidgetApiDirection.ToWidget, widget.id, iframe.contentWindow, window);\n        this.transport.targetOrigin = widget.origin;\n        this.transport.on(\"message\", this.handleMessage.bind(this));\n\n        iframe.addEventListener(\"load\", this.onIframeLoad.bind(this));\n\n        this.transport.start();\n    }\n\n    public hasCapability(capability: Capability): boolean {\n        return this.allowedCapabilities.has(capability);\n    }\n\n    public canUseRoomTimeline(roomId: string | Symbols.AnyRoom): boolean {\n        return (\n            this.hasCapability(`org.matrix.msc2762.timeline:${Symbols.AnyRoom}`) ||\n            this.hasCapability(`org.matrix.msc2762.timeline:${roomId}`)\n        );\n    }\n\n    public canSendRoomEvent(eventType: string, msgtype: string | null = null): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsRoomEvent(EventDirection.Send, eventType, msgtype));\n    }\n\n    public canSendStateEvent(eventType: string, stateKey: string): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsStateEvent(EventDirection.Send, eventType, stateKey));\n    }\n\n    public canSendToDeviceEvent(eventType: string): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsToDeviceEvent(EventDirection.Send, eventType));\n    }\n\n    public canReceiveRoomEvent(eventType: string, msgtype: string | null = null): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsRoomEvent(EventDirection.Receive, eventType, msgtype));\n    }\n\n    public canReceiveStateEvent(eventType: string, stateKey: string | null): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsStateEvent(EventDirection.Receive, eventType, stateKey));\n    }\n\n    public canReceiveToDeviceEvent(eventType: string): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsToDeviceEvent(EventDirection.Receive, eventType));\n    }\n\n    public canReceiveRoomAccountData(eventType: string): boolean {\n        return this.allowedEvents.some((e) => e.matchesAsRoomAccountData(EventDirection.Receive, eventType));\n    }\n\n    public stop(): void {\n        this.isStopped = true;\n        this.transport.stop();\n    }\n\n    public async getWidgetVersions(): Promise<ApiVersion[]> {\n        if (Array.isArray(this.cachedWidgetVersions)) {\n            return Promise.resolve(this.cachedWidgetVersions);\n        }\n\n        try {\n            const r = await this.transport.send<IWidgetApiRequestEmptyData, ISupportedVersionsActionResponseData>(\n                WidgetApiToWidgetAction.SupportedApiVersions,\n                {},\n            );\n            this.cachedWidgetVersions = r.supported_versions;\n            return r.supported_versions;\n        } catch (e) {\n            console.warn(\"non-fatal error getting supported widget versions: \", e);\n            return [];\n        }\n    }\n\n    private beginCapabilities(): void {\n        // widget has loaded - tell all the listeners that\n        this.emit(\"preparing\");\n\n        let requestedCaps: Capability[];\n        this.transport\n            .send<IWidgetApiRequestEmptyData, ICapabilitiesActionResponseData>(WidgetApiToWidgetAction.Capabilities, {})\n            .then((caps) => {\n                requestedCaps = caps.capabilities;\n                return this.driver.validateCapabilities(new Set(caps.capabilities));\n            })\n            .then((allowedCaps) => {\n                this.allowCapabilities([...allowedCaps], requestedCaps);\n                this.emit(\"ready\");\n            })\n            .catch((e) => {\n                this.emit(\"error:preparing\", e);\n            });\n    }\n\n    private allowCapabilities(allowed: string[], requested: string[]): void {\n        console.log(`Widget ${this.widget.id} is allowed capabilities:`, allowed);\n\n        for (const c of allowed) this.allowedCapabilities.add(c);\n        const allowedEvents = WidgetEventCapability.findEventCapabilities(allowed);\n        this.allowedEvents.push(...allowedEvents);\n\n        this.transport\n            .send(WidgetApiToWidgetAction.NotifyCapabilities, <INotifyCapabilitiesActionRequestData>{\n                requested,\n                approved: Array.from(this.allowedCapabilities),\n            })\n            .catch((e) => {\n                console.warn(\"non-fatal error notifying widget of approved capabilities:\", e);\n            })\n            .then(() => {\n                this.emit(\"capabilitiesNotified\");\n            });\n\n        // Push the initial room state for all rooms with a timeline capability\n        for (const c of allowed) {\n            if (isTimelineCapability(c)) {\n                const roomId = getTimelineRoomIDFromCapability(c);\n                if (roomId === Symbols.AnyRoom) {\n                    for (const roomId of this.driver.getKnownRooms()) this.pushRoomState(roomId);\n                } else {\n                    this.pushRoomState(roomId);\n                }\n            }\n        }\n        // If new events are allowed and the currently viewed room isn't covered\n        // by a timeline capability, then we know that there could be some state\n        // in the viewed room that the widget hasn't learned about yet- push it.\n        if (allowedEvents.length > 0 && this.viewedRoomId !== null && !this.canUseRoomTimeline(this.viewedRoomId)) {\n            this.pushRoomState(this.viewedRoomId);\n        }\n    }\n\n    private onIframeLoad(ev: Event): void {\n        if (this.widget.waitForIframeLoad) {\n            // If the widget is set to waitForIframeLoad the capabilities immediately get setup after load.\n            // The client does not wait for the ContentLoaded action.\n            this.beginCapabilities();\n        } else {\n            // Reaching this means, that the Iframe got reloaded/loaded and\n            // the clientApi is awaiting the FIRST ContentLoaded action.\n            console.log(\"waitForIframeLoad is false: waiting for widget to send contentLoaded\");\n            this.contentLoadedWaitTimer = setTimeout(() => {\n                console.error(\n                    \"Widget specified waitForIframeLoad=false but timed out waiting for contentLoaded event!\",\n                );\n            }, 10000);\n            this.contentLoadedActionSent = false;\n        }\n    }\n\n    private handleContentLoadedAction(action: IContentLoadedActionRequest): void {\n        if (this.contentLoadedWaitTimer !== undefined) {\n            clearTimeout(this.contentLoadedWaitTimer);\n            this.contentLoadedWaitTimer = undefined;\n        }\n        if (this.contentLoadedActionSent) {\n            throw new Error(\n                \"Improper sequence: ContentLoaded Action can only be sent once after the widget loaded \" +\n                    \"and should only be used if waitForIframeLoad is false (default=true)\",\n            );\n        }\n        if (this.widget.waitForIframeLoad) {\n            this.transport.reply(action, <IWidgetApiErrorResponseData>{\n                error: {\n                    message:\n                        \"Improper sequence: not expecting ContentLoaded event if \" +\n                        \"waitForIframeLoad is true (default=true)\",\n                },\n            });\n        } else {\n            this.transport.reply(action, <IWidgetApiRequestEmptyData>{});\n            this.beginCapabilities();\n        }\n        this.contentLoadedActionSent = true;\n    }\n\n    private replyVersions(request: ISupportedVersionsActionRequest): void {\n        this.transport.reply<ISupportedVersionsActionResponseData>(request, {\n            supported_versions: CurrentApiVersions,\n        });\n    }\n\n    private async supportsUpdateState(): Promise<boolean> {\n        return (await this.getWidgetVersions()).includes(UnstableApiVersion.MSC2762_UPDATE_STATE);\n    }\n\n    private handleCapabilitiesRenegotiate(request: IRenegotiateCapabilitiesActionRequest): void {\n        // acknowledge first\n        this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n\n        const requested = request.data?.capabilities || [];\n        const newlyRequested = new Set(requested.filter((r) => !this.hasCapability(r)));\n        if (newlyRequested.size === 0) {\n            // Nothing to do - skip validation\n            this.allowCapabilities([], []);\n        }\n\n        this.driver\n            .validateCapabilities(newlyRequested)\n            .then((allowed) => this.allowCapabilities([...allowed], [...newlyRequested]));\n    }\n\n    private handleNavigate(request: INavigateActionRequest): void {\n        if (!this.hasCapability(MatrixCapabilities.MSC2931Navigate)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        if (!request.data?.uri || !request.data?.uri.toString().startsWith(\"https://matrix.to/#\")) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid matrix.to URI\" },\n            });\n        }\n\n        const onErr = (e: unknown): void => {\n            console.error(\"[ClientWidgetApi] Failed to handle navigation: \", e);\n            this.handleDriverError(e, request, \"Error handling navigation\");\n        };\n\n        try {\n            this.driver\n                .navigate(request.data.uri.toString())\n                .catch((e: unknown) => onErr(e))\n                .then(() => {\n                    return this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n                });\n        } catch (e) {\n            return onErr(e);\n        }\n    }\n\n    private handleOIDC(request: IGetOpenIDActionRequest): void {\n        let phase = 1; // 1 = initial request, 2 = after user manual confirmation\n\n        const replyState = (\n            state: OpenIDRequestState,\n            credential?: IOpenIDCredentials,\n        ): void | Promise<IWidgetApiAcknowledgeResponseData> => {\n            credential = credential || {};\n            if (phase > 1) {\n                return this.transport.send<IOpenIDCredentialsActionRequestData>(\n                    WidgetApiToWidgetAction.OpenIDCredentials,\n                    {\n                        state: state,\n                        original_request_id: request.requestId,\n                        ...credential,\n                    },\n                );\n            } else {\n                return this.transport.reply<IGetOpenIDActionResponseData>(request, {\n                    state: state,\n                    ...credential,\n                });\n            }\n        };\n\n        const replyError = (msg: string): void | Promise<IWidgetApiAcknowledgeResponseData> => {\n            console.error(\"[ClientWidgetApi] Failed to handle OIDC: \", msg);\n            if (phase > 1) {\n                // We don't have a way to indicate that a random error happened in this flow, so\n                // just block the attempt.\n                return replyState(OpenIDRequestState.Blocked);\n            } else {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: msg },\n                });\n            }\n        };\n\n        const observer = new SimpleObservable<IOpenIDUpdate>((update) => {\n            if (update.state === OpenIDRequestState.PendingUserConfirmation && phase > 1) {\n                observer.close();\n                return replyError(\"client provided out-of-phase response to OIDC flow\");\n            }\n\n            if (update.state === OpenIDRequestState.PendingUserConfirmation) {\n                replyState(update.state);\n                phase++;\n                return;\n            }\n\n            if (update.state === OpenIDRequestState.Allowed && !update.token) {\n                return replyError(\"client provided invalid OIDC token for an allowed request\");\n            }\n            if (update.state === OpenIDRequestState.Blocked) {\n                update.token = undefined; // just in case the client did something weird\n            }\n\n            observer.close();\n            return replyState(update.state, update.token);\n        });\n\n        this.driver.askOpenID(observer);\n    }\n    private handleReadRoomAccountData(request: IReadRoomAccountDataFromWidgetActionRequest): void | Promise<void> {\n        let events: Promise<IRoomAccountData[]> = Promise.resolve([]);\n        events = this.driver.readRoomAccountData(request.data.type);\n\n        if (!this.canReceiveRoomAccountData(request.data.type)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Cannot read room account data of this type\" },\n            });\n        }\n\n        return events.then((evs) => {\n            this.transport.reply<IReadRoomAccountDataFromWidgetResponseData>(request, { events: evs });\n        });\n    }\n\n    private async handleReadEvents(request: IReadEventFromWidgetActionRequest): Promise<void> {\n        if (!request.data.type) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event type\" },\n            });\n        }\n        if (request.data.limit !== undefined && (!request.data.limit || request.data.limit < 0)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - limit out of range\" },\n            });\n        }\n\n        let askRoomIds: string[];\n        if (request.data.room_ids === undefined) {\n            askRoomIds = this.viewedRoomId === null ? [] : [this.viewedRoomId];\n        } else if (request.data.room_ids === Symbols.AnyRoom) {\n            askRoomIds = this.driver.getKnownRooms().filter((roomId) => this.canUseRoomTimeline(roomId));\n        } else {\n            askRoomIds = request.data.room_ids;\n            for (const roomId of askRoomIds) {\n                if (!this.canUseRoomTimeline(roomId)) {\n                    return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                        error: { message: `Unable to access room timeline: ${roomId}` },\n                    });\n                }\n            }\n        }\n\n        const limit = request.data.limit || 0;\n        const since = request.data.since;\n\n        let stateKey: string | undefined = undefined;\n        let msgtype: string | undefined = undefined;\n        if (request.data.state_key !== undefined) {\n            stateKey = request.data.state_key === true ? undefined : request.data.state_key.toString();\n            if (!this.canReceiveStateEvent(request.data.type, stateKey ?? null)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"Cannot read state events of this type\" },\n                });\n            }\n        } else {\n            msgtype = request.data.msgtype;\n            if (!this.canReceiveRoomEvent(request.data.type, msgtype)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"Cannot read room events of this type\" },\n                });\n            }\n        }\n\n        let events: IRoomEvent[];\n\n        if (request.data.room_ids === undefined && askRoomIds.length === 0) {\n            // For backwards compatibility we still call the deprecated\n            // readRoomEvents and readStateEvents methods in case the client isn't\n            // letting us know the currently viewed room via setViewedRoomId\n            //\n            // This can be considered as a deprecated implementation.\n            // A driver should call `setViewedRoomId` on the widget messaging and implement the new readRoomState and readRoomTimeline\n            // Methods.\n            // This block makes sure that it is also possible to not use setViewedRoomId.\n            // readRoomTimeline and readRoomState are required however! Otherwise widget requests that include\n            // `room_ids` will fail.\n            console.warn(\n                \"The widgetDriver uses deprecated behaviour:\\n It does not set the viewedRoomId using `setViewedRoomId`\",\n            );\n            events = await // This returns [] with the current driver of Element Web.\n            // Add default implementations of the `readRoomEvents` and `readStateEvents`\n            // methods to use `readRoomTimeline` and `readRoomState` if they are not overwritten.\n            (request.data.state_key === undefined\n                ? this.driver.readRoomEvents(request.data.type, msgtype, limit, null, since)\n                : this.driver.readStateEvents(request.data.type, stateKey, limit, null));\n        } else if (await this.supportsUpdateState()) {\n            // Calling read_events with a stateKey still reads from the rooms timeline (not the room state).\n            events = (\n                await Promise.all(\n                    askRoomIds.map((roomId) =>\n                        this.driver.readRoomTimeline(roomId, request.data.type, msgtype, stateKey, limit, since),\n                    ),\n                )\n            ).flat(1);\n        } else {\n            // TODO: remove this once `UnstableApiVersion.MSC2762_UPDATE_STATE` becomes stable.\n            // Before version `MSC2762_UPDATE_STATE` we used readRoomState for read_events actions.\n            events = (\n                request.data.state_key === undefined\n                    ? await Promise.all(\n                          askRoomIds.map((roomId) =>\n                              this.driver.readRoomTimeline(roomId, request.data.type, msgtype, stateKey, limit, since),\n                          ),\n                      )\n                    : await Promise.all(\n                          askRoomIds.map((roomId) => this.driver.readRoomState(roomId, request.data.type, stateKey)),\n                      )\n            ).flat(1);\n        }\n\n        this.transport.reply<IReadEventFromWidgetResponseData>(request, { events });\n    }\n\n    private handleSendEvent(request: ISendEventFromWidgetActionRequest): void {\n        if (!request.data.type) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event type\" },\n            });\n        }\n\n        if (!!request.data.room_id && !this.canUseRoomTimeline(request.data.room_id)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: `Unable to access room timeline: ${request.data.room_id}` },\n            });\n        }\n\n        const isDelayedEvent = request.data.delay !== undefined || request.data.parent_delay_id !== undefined;\n        if (isDelayedEvent && !this.hasCapability(MatrixCapabilities.MSC4157SendDelayedEvent)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        let sendEventPromise: Promise<ISendEventDetails | ISendDelayedEventDetails>;\n        if (request.data.state_key !== undefined) {\n            if (!this.canSendStateEvent(request.data.type, request.data.state_key)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"Cannot send state events of this type\" },\n                });\n            }\n\n            if (!isDelayedEvent) {\n                sendEventPromise = this.driver.sendEvent(\n                    request.data.type,\n                    request.data.content || {},\n                    request.data.state_key,\n                    request.data.room_id,\n                );\n            } else {\n                sendEventPromise = this.driver.sendDelayedEvent(\n                    request.data.delay ?? null,\n                    request.data.parent_delay_id ?? null,\n                    request.data.type,\n                    request.data.content || {},\n                    request.data.state_key,\n                    request.data.room_id,\n                );\n            }\n        } else {\n            const content = (request.data.content as { msgtype?: string }) || {};\n            const msgtype = content[\"msgtype\"];\n            if (!this.canSendRoomEvent(request.data.type, msgtype)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"Cannot send room events of this type\" },\n                });\n            }\n\n            if (!isDelayedEvent) {\n                sendEventPromise = this.driver.sendEvent(\n                    request.data.type,\n                    content,\n                    null, // not sending a state event\n                    request.data.room_id,\n                );\n            } else {\n                sendEventPromise = this.driver.sendDelayedEvent(\n                    request.data.delay ?? null,\n                    request.data.parent_delay_id ?? null,\n                    request.data.type,\n                    content,\n                    null, // not sending a state event\n                    request.data.room_id,\n                );\n            }\n        }\n\n        sendEventPromise\n            .then((sentEvent) => {\n                return this.transport.reply<ISendEventFromWidgetResponseData>(request, {\n                    room_id: sentEvent.roomId,\n                    ...(\"eventId\" in sentEvent\n                        ? {\n                              event_id: sentEvent.eventId,\n                          }\n                        : {\n                              delay_id: sentEvent.delayId,\n                          }),\n                });\n            })\n            .catch((e: unknown) => {\n                console.error(\"error sending event: \", e);\n                this.handleDriverError(e, request, \"Error sending event\");\n            });\n    }\n\n    private handleUpdateDelayedEvent(request: IUpdateDelayedEventFromWidgetActionRequest): void {\n        if (!request.data.delay_id) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing delay_id\" },\n            });\n        }\n\n        if (!this.hasCapability(MatrixCapabilities.MSC4157UpdateDelayedEvent)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        switch (request.data.action) {\n            case UpdateDelayedEventAction.Cancel:\n            case UpdateDelayedEventAction.Restart:\n            case UpdateDelayedEventAction.Send:\n                this.driver\n                    .updateDelayedEvent(request.data.delay_id, request.data.action)\n                    .then(() => {\n                        return this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n                    })\n                    .catch((e: unknown) => {\n                        console.error(\"error updating delayed event: \", e);\n                        this.handleDriverError(e, request, \"Error updating delayed event\");\n                    });\n                break;\n            default:\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"Invalid request - unsupported action\" },\n                });\n        }\n    }\n\n    private async handleSendToDevice(request: ISendToDeviceFromWidgetActionRequest): Promise<void> {\n        if (!request.data.type) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event type\" },\n            });\n        } else if (!request.data.messages) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event contents\" },\n            });\n        } else if (typeof request.data.encrypted !== \"boolean\") {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing encryption flag\" },\n            });\n        } else if (!this.canSendToDeviceEvent(request.data.type)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Cannot send to-device events of this type\" },\n            });\n        } else {\n            try {\n                await this.driver.sendToDevice(request.data.type, request.data.encrypted, request.data.messages);\n                await this.transport.reply<ISendToDeviceFromWidgetResponseData>(request, {});\n            } catch (e) {\n                console.error(\"error sending to-device event\", e);\n                this.handleDriverError(e, request, \"Error sending event\");\n            }\n        }\n    }\n\n    private async pollTurnServers(turnServers: AsyncGenerator<ITurnServer>, initialServer: ITurnServer): Promise<void> {\n        try {\n            await this.transport.send<IUpdateTurnServersRequestData>(\n                WidgetApiToWidgetAction.UpdateTurnServers,\n                initialServer as IUpdateTurnServersRequestData, // it's compatible, but missing the index signature\n            );\n\n            // Pick the generator up where we left off\n            for await (const server of turnServers) {\n                await this.transport.send<IUpdateTurnServersRequestData>(\n                    WidgetApiToWidgetAction.UpdateTurnServers,\n                    server as IUpdateTurnServersRequestData, // it's compatible, but missing the index signature\n                );\n            }\n        } catch (e) {\n            console.error(\"error polling for TURN servers\", e);\n        }\n    }\n\n    private async handleWatchTurnServers(request: IWatchTurnServersRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC3846TurnServers)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        } else if (this.turnServers) {\n            // We're already polling, so this is a no-op\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        } else {\n            try {\n                const turnServers = this.driver.getTurnServers();\n\n                // Peek at the first result, so we can at least verify that the\n                // client isn't banned from getting TURN servers entirely\n                const { done, value } = await turnServers.next();\n                if (done) throw new Error(\"Client refuses to provide any TURN servers\");\n                await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n\n                // Start the poll loop, sending the widget the initial result\n                this.pollTurnServers(turnServers, value);\n                this.turnServers = turnServers;\n            } catch (e) {\n                console.error(\"error getting first TURN server results\", e);\n                await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: { message: \"TURN servers not available\" },\n                });\n            }\n        }\n    }\n\n    private async handleUnwatchTurnServers(request: IUnwatchTurnServersRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC3846TurnServers)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        } else if (!this.turnServers) {\n            // We weren't polling anyways, so this is a no-op\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        } else {\n            // Stop the generator, allowing it to clean up\n            await this.turnServers.return(undefined);\n            this.turnServers = null;\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        }\n    }\n\n    private async handleReadRelations(request: IReadRelationsFromWidgetActionRequest): Promise<void> {\n        if (!request.data.event_id) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event ID\" },\n            });\n        }\n\n        if (request.data.limit !== undefined && request.data.limit < 0) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - limit out of range\" },\n            });\n        }\n\n        if (request.data.room_id !== undefined && !this.canUseRoomTimeline(request.data.room_id)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: `Unable to access room timeline: ${request.data.room_id}` },\n            });\n        }\n\n        try {\n            const result = await this.driver.readEventRelations(\n                request.data.event_id,\n                request.data.room_id,\n                request.data.rel_type,\n                request.data.event_type,\n                request.data.from,\n                request.data.to,\n                request.data.limit,\n                request.data.direction,\n            );\n\n            // only return events that the user has the permission to receive\n            const chunk = result.chunk.filter((e) => {\n                if (e.state_key !== undefined) {\n                    return this.canReceiveStateEvent(e.type, e.state_key);\n                } else {\n                    return this.canReceiveRoomEvent(e.type, (e.content as { msgtype?: string })[\"msgtype\"]);\n                }\n            });\n\n            return this.transport.reply<IReadRelationsFromWidgetResponseData>(request, {\n                chunk,\n                prev_batch: result.prevBatch,\n                next_batch: result.nextBatch,\n            });\n        } catch (e) {\n            console.error(\"error getting the relations\", e);\n            this.handleDriverError(e, request, \"Unexpected error while reading relations\");\n        }\n    }\n\n    private async handleUserDirectorySearch(request: IUserDirectorySearchFromWidgetActionRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC3973UserDirectorySearch)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        if (typeof request.data.search_term !== \"string\") {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing search term\" },\n            });\n        }\n\n        if (request.data.limit !== undefined && request.data.limit < 0) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - limit out of range\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.searchUserDirectory(request.data.search_term, request.data.limit);\n\n            return this.transport.reply<IUserDirectorySearchFromWidgetResponseData>(request, {\n                limited: result.limited,\n                results: result.results.map((r) => ({\n                    user_id: r.userId,\n                    display_name: r.displayName,\n                    avatar_url: r.avatarUrl,\n                })),\n            });\n        } catch (e) {\n            console.error(\"error searching in the user directory\", e);\n            this.handleDriverError(e, request, \"Unexpected error while searching in the user directory\");\n        }\n    }\n\n    private async handleGetMediaConfig(request: IGetMediaConfigActionFromWidgetActionRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039UploadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.getMediaConfig();\n\n            return this.transport.reply<IGetMediaConfigActionFromWidgetResponseData>(request, result);\n        } catch (e) {\n            console.error(\"error while getting the media configuration\", e);\n            this.handleDriverError(e, request, \"Unexpected error while getting the media configuration\");\n        }\n    }\n\n    private async handleUploadFile(request: IUploadFileActionFromWidgetActionRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039UploadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.uploadFile(request.data.file);\n\n            return this.transport.reply<IUploadFileActionFromWidgetResponseData>(request, {\n                content_uri: result.contentUri,\n            });\n        } catch (e) {\n            console.error(\"error while uploading a file\", e);\n            this.handleDriverError(e, request, \"Unexpected error while uploading a file\");\n        }\n    }\n\n    private async handleDownloadFile(request: IDownloadFileActionFromWidgetActionRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039DownloadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.downloadFile(request.data.content_uri);\n\n            return this.transport.reply<IDownloadFileActionFromWidgetResponseData>(request, { file: result.file });\n        } catch (e) {\n            console.error(\"error while downloading a file\", e);\n            this.handleDriverError(e, request, \"Unexpected error while downloading a file\");\n        }\n    }\n\n    private handleDriverError(e: unknown, request: IWidgetApiRequest, message: string): void {\n        const data = this.driver.processError(e);\n        this.transport.reply<IWidgetApiErrorResponseData>(request, {\n            error: {\n                message,\n                ...data,\n            },\n        });\n    }\n\n    private handleMessage(ev: CustomEvent<IWidgetApiRequest>): void | Promise<void> {\n        if (this.isStopped) return;\n        const actionEv = new CustomEvent(`action:${ev.detail.action}`, {\n            detail: ev.detail,\n            cancelable: true,\n        });\n        this.emit(`action:${ev.detail.action}`, actionEv);\n        if (!actionEv.defaultPrevented) {\n            switch (ev.detail.action) {\n                case WidgetApiFromWidgetAction.ContentLoaded:\n                    return this.handleContentLoadedAction(<IContentLoadedActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SupportedApiVersions:\n                    return this.replyVersions(<ISupportedVersionsActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SendEvent:\n                    return this.handleSendEvent(<ISendEventFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SendToDevice:\n                    return this.handleSendToDevice(<ISendToDeviceFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.GetOpenIDCredentials:\n                    return this.handleOIDC(<IGetOpenIDActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2931Navigate:\n                    return this.handleNavigate(<INavigateActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2974RenegotiateCapabilities:\n                    return this.handleCapabilitiesRenegotiate(<IRenegotiateCapabilitiesActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2876ReadEvents:\n                    return this.handleReadEvents(<IReadEventFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.WatchTurnServers:\n                    return this.handleWatchTurnServers(<IWatchTurnServersRequest>ev.detail);\n                case WidgetApiFromWidgetAction.UnwatchTurnServers:\n                    return this.handleUnwatchTurnServers(<IUnwatchTurnServersRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC3869ReadRelations:\n                    return this.handleReadRelations(<IReadRelationsFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC3973UserDirectorySearch:\n                    return this.handleUserDirectorySearch(<IUserDirectorySearchFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.BeeperReadRoomAccountData:\n                    return this.handleReadRoomAccountData(<IReadRoomAccountDataFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039GetMediaConfigAction:\n                    return this.handleGetMediaConfig(<IGetMediaConfigActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039UploadFileAction:\n                    return this.handleUploadFile(<IUploadFileActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039DownloadFileAction:\n                    return this.handleDownloadFile(<IDownloadFileActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4157UpdateDelayedEvent:\n                    return this.handleUpdateDelayedEvent(<IUpdateDelayedEventFromWidgetActionRequest>ev.detail);\n\n                default:\n                    return this.transport.reply(ev.detail, <IWidgetApiErrorResponseData>{\n                        error: {\n                            message: \"Unknown or unsupported action: \" + ev.detail.action,\n                        },\n                    });\n            }\n        }\n    }\n\n    /**\n     * Informs the widget that the client's theme has changed.\n     * @param theme The theme data, as an object with arbitrary contents.\n     */\n    public updateTheme(theme: IThemeChangeActionRequestData): Promise<IWidgetApiResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.ThemeChange, theme);\n    }\n\n    /**\n     * Informs the widget that the client's language has changed.\n     * @param lang The BCP 47 identifier representing the client's current language.\n     */\n    public updateLanguage(lang: string): Promise<IWidgetApiResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.LanguageChange, { lang });\n    }\n\n    /**\n     * Takes a screenshot of the widget.\n     * @returns Resolves to the widget's screenshot.\n     * @throws Throws if there is a problem.\n     */\n    public takeScreenshot(): Promise<IScreenshotActionResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.TakeScreenshot, <IWidgetApiRequestEmptyData>{});\n    }\n\n    /**\n     * Alerts the widget to whether or not it is currently visible.\n     * @param {boolean} isVisible Whether the widget is visible or not.\n     * @returns {Promise<IWidgetApiResponseData>} Resolves when the widget acknowledges the update.\n     */\n    public updateVisibility(isVisible: boolean): Promise<IWidgetApiResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.UpdateVisibility, <IVisibilityActionRequestData>{\n            visible: isVisible,\n        });\n    }\n\n    public sendWidgetConfig(data: IModalWidgetOpenRequestData): Promise<void> {\n        return this.transport.send<IModalWidgetOpenRequestData>(WidgetApiToWidgetAction.WidgetConfig, data).then();\n    }\n\n    public notifyModalWidgetButtonClicked(id: IModalWidgetOpenRequestDataButton[\"id\"]): Promise<void> {\n        return this.transport\n            .send<IModalWidgetButtonClickedRequestData>(WidgetApiToWidgetAction.ButtonClicked, { id })\n            .then();\n    }\n\n    public notifyModalWidgetClose(data: IModalWidgetReturnData): Promise<void> {\n        return this.transport.send<IModalWidgetReturnData>(WidgetApiToWidgetAction.CloseModalWidget, data).then();\n    }\n\n    /**\n     * Feeds an event to the widget. As a client you are expected to call this\n     * for every new event in every room to which you are joined or invited.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {string} currentViewedRoomId The room ID the user is currently\n     *   interacting with. Not the room ID of the event.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to read the event due to permissions, rejects if the widget failed\n     *   to handle the event.\n     * @deprecated It is recommended to communicate the viewed room ID by calling\n     *   {@link ClientWidgetApi.setViewedRoomId} rather than passing it to this\n     *   method.\n     */\n    public async feedEvent(rawEvent: IRoomEvent, currentViewedRoomId: string): Promise<void>;\n    /**\n     * Feeds an event to the widget. As a client you are expected to call this\n     * for every new event (including state events) in every room to which you are joined or invited.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to read the event due to permissions, rejects if the widget failed\n     *   to handle the event.\n     */\n    public async feedEvent(rawEvent: IRoomEvent): Promise<void>;\n    public async feedEvent(rawEvent: IRoomEvent, currentViewedRoomId?: string): Promise<void> {\n        if (currentViewedRoomId !== undefined) this.setViewedRoomId(currentViewedRoomId);\n        if (rawEvent.room_id !== this.viewedRoomId && !this.canUseRoomTimeline(rawEvent.room_id)) {\n            return; // no-op\n        }\n\n        if (rawEvent.state_key !== undefined && rawEvent.state_key !== null) {\n            // state event\n            if (!this.canReceiveStateEvent(rawEvent.type, rawEvent.state_key)) {\n                return; // no-op\n            }\n        } else {\n            // message event\n            if (!this.canReceiveRoomEvent(rawEvent.type, (rawEvent.content as { msgtype?: string })?.[\"msgtype\"])) {\n                return; // no-op\n            }\n        }\n\n        // Feed the event into the widget\n        await this.transport.send<ISendEventToWidgetRequestData>(\n            WidgetApiToWidgetAction.SendEvent,\n            // it's compatible, but missing the index signature\n            rawEvent as ISendEventToWidgetRequestData,\n        );\n    }\n\n    /**\n     * Feeds a to-device event to the widget. As a client you are expected to\n     * call this for every to-device event you receive.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {boolean} encrypted Whether the event contents were encrypted.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to receive the event due to permissions, rejects if the widget\n     *   failed to handle the event.\n     */\n    public async feedToDevice(rawEvent: IRoomEvent, encrypted: boolean): Promise<void> {\n        if (this.canReceiveToDeviceEvent(rawEvent.type)) {\n            await this.transport.send<ISendToDeviceToWidgetRequestData>(\n                WidgetApiToWidgetAction.SendToDevice,\n                // it's compatible, but missing the index signature\n                { ...rawEvent, encrypted } as ISendToDeviceToWidgetRequestData,\n            );\n        }\n    }\n\n    private viewedRoomId: string | null = null;\n\n    /**\n     * Indicate that a room is being viewed (making it possible for the widget\n     * to interact with it).\n     */\n    public setViewedRoomId(roomId: string | null): void {\n        this.viewedRoomId = roomId;\n        // If the widget doesn't have timeline permissions for the room then\n        // this is its opportunity to learn the room state. We push the entire\n        // room state, which could be redundant if this room had been viewed\n        // once before, but it's easier than selectively pushing just the bits\n        // of state that changed while the room was in the background.\n        if (roomId !== null && !this.canUseRoomTimeline(roomId)) this.pushRoomState(roomId);\n    }\n\n    private async flushRoomState(): Promise<void> {\n        try {\n            // Only send a single action once all concurrent tasks have completed\n            do await Promise.all([...this.pushRoomStateTasks]);\n            while (this.pushRoomStateTasks.size > 0);\n\n            const events: IRoomEvent[] = [];\n            for (const eventTypeMap of this.pushRoomStateResult.values()) {\n                for (const stateKeyMap of eventTypeMap.values()) {\n                    events.push(...stateKeyMap.values());\n                }\n            }\n            if ((await this.getWidgetVersions()).includes(UnstableApiVersion.MSC2762_UPDATE_STATE)) {\n                // Only send state updates when using UpdateState. Otherwise the SendEvent action will be responsible for state updates.\n                await this.transport.send<IUpdateStateToWidgetRequestData>(WidgetApiToWidgetAction.UpdateState, {\n                    state: events,\n                });\n            }\n        } finally {\n            this.flushRoomStateTask = null;\n        }\n    }\n\n    /**\n     * Read the room's state and push all entries that the widget is allowed to\n     * read through to the widget.\n     */\n    private pushRoomState(roomId: string): void {\n        for (const cap of this.allowedEvents) {\n            if (cap.kind === EventKind.State && cap.direction === EventDirection.Receive) {\n                // Initiate the task\n                const events = this.driver.readRoomState(roomId, cap.eventType, cap.keyStr ?? undefined);\n                const task = events\n                    .then(\n                        (events) => {\n                            // When complete, queue the resulting events to be\n                            // pushed to the widget\n                            for (const event of events) {\n                                let eventTypeMap = this.pushRoomStateResult.get(roomId);\n                                if (eventTypeMap === undefined) {\n                                    eventTypeMap = new Map();\n                                    this.pushRoomStateResult.set(roomId, eventTypeMap);\n                                }\n                                let stateKeyMap = eventTypeMap.get(cap.eventType);\n                                if (stateKeyMap === undefined) {\n                                    stateKeyMap = new Map();\n                                    eventTypeMap.set(cap.eventType, stateKeyMap);\n                                }\n                                if (!stateKeyMap.has(event.state_key!)) stateKeyMap.set(event.state_key!, event);\n                            }\n                        },\n                        (e) =>\n                            console.error(\n                                `Failed to read room state for ${roomId} (${cap.eventType}, ${cap.keyStr})`,\n                                e,\n                            ),\n                    )\n                    .then(() => {\n                        // Mark request as no longer pending\n                        this.pushRoomStateTasks.delete(task);\n                    });\n\n                // Mark task as pending\n                this.pushRoomStateTasks.add(task);\n                // Assuming no other tasks are already happening concurrently,\n                // schedule the widget action that actually pushes the events\n                this.flushRoomStateTask ??= this.flushRoomState();\n                this.flushRoomStateTask.catch((e) => console.error(\"Failed to push room state\", e));\n            }\n        }\n    }\n\n    /**\n     * Feeds a room state update to the widget. As a client you are expected to\n     * call this for every state update in every room to which you are joined or\n     * invited.\n     * @param {IRoomEvent} rawEvent The state event corresponding to the updated\n     *   room state entry.\n     * @returns {Promise<void>} Resolves when delivered or if the widget is not\n     *   able to receive the room state due to permissions, rejects if the\n     *   widget failed to handle the update.\n     */\n    public async feedStateUpdate(rawEvent: IRoomEvent): Promise<void> {\n        if (rawEvent.state_key === undefined) throw new Error(\"Not a state event\");\n        if (\n            (rawEvent.room_id === this.viewedRoomId || this.canUseRoomTimeline(rawEvent.room_id)) &&\n            this.canReceiveStateEvent(rawEvent.type, rawEvent.state_key)\n        ) {\n            // Updates could race with the initial push of the room's state\n            if (this.pushRoomStateTasks.size === 0) {\n                // No initial push tasks are pending; safe to send immediately\n                if ((await this.getWidgetVersions()).includes(UnstableApiVersion.MSC2762_UPDATE_STATE)) {\n                    // Only send state updates when using UpdateState. Otherwise the SendEvent action will be responsible for state updates.\n                    await this.transport.send<IUpdateStateToWidgetRequestData>(WidgetApiToWidgetAction.UpdateState, {\n                        state: [rawEvent],\n                    });\n                }\n            } else {\n                // Lump the update in with whatever data will be sent in the\n                // initial push later. Even if we set it to an \"outdated\" entry\n                // here, we can count on any newer entries being passed to this\n                // same method eventually; this won't cause stuck state.\n                let eventTypeMap = this.pushRoomStateResult.get(rawEvent.room_id);\n                if (eventTypeMap === undefined) {\n                    eventTypeMap = new Map();\n                    this.pushRoomStateResult.set(rawEvent.room_id, eventTypeMap);\n                }\n                let stateKeyMap = eventTypeMap.get(rawEvent.type);\n                if (stateKeyMap === undefined) {\n                    stateKeyMap = new Map();\n                    eventTypeMap.set(rawEvent.type, stateKeyMap);\n                }\n                if (!stateKeyMap.has(rawEvent.type)) stateKeyMap.set(rawEvent.state_key, rawEvent);\n                do await Promise.all([...this.pushRoomStateTasks]);\n                while (this.pushRoomStateTasks.size > 0);\n                await this.flushRoomStateTask;\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}