{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WidgetApiResponseError = exports.WidgetApi = void 0;\nvar _events = require(\"events\");\nvar _WidgetApiDirection = require(\"./interfaces/WidgetApiDirection\");\nvar _ApiVersion = require(\"./interfaces/ApiVersion\");\nvar _PostmessageTransport = require(\"./transport/PostmessageTransport\");\nvar _WidgetApiAction = require(\"./interfaces/WidgetApiAction\");\nvar _GetOpenIDAction = require(\"./interfaces/GetOpenIDAction\");\nvar _WidgetType = require(\"./interfaces/WidgetType\");\nvar _ModalWidgetActions = require(\"./interfaces/ModalWidgetActions\");\nvar _WidgetEventCapability = require(\"./models/WidgetEventCapability\");\nvar _Symbols = require(\"./Symbols\");\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _awaitAsyncGenerator(value) {\n  return new _OverloadYield(value, 0);\n}\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new _AsyncGenerator(fn.apply(this, arguments));\n  };\n}\nfunction _AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof _OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\n_AsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, _AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, _AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, _AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\nfunction _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n} /*\n   * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *         http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\nvar WidgetApiResponseError = /*#__PURE__*/function (_Error) {\n  _inherits(WidgetApiResponseError, _Error);\n  var _super = _createSuper(WidgetApiResponseError);\n  function WidgetApiResponseError(message, data) {\n    var _this2;\n    _classCallCheck(this, WidgetApiResponseError);\n    _this2 = _super.call(this, message);\n    _this2.data = data;\n    return _this2;\n  }\n  return _createClass(WidgetApiResponseError);\n}(/*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * API handler for widgets. This raises events for each action\n * received as `action:${action}` (eg: \"action:screenshot\").\n * Default handling can be prevented by using preventDefault()\n * on the raised event. The default handling varies for each\n * action: ones which the SDK can handle safely are acknowledged\n * appropriately and ones which are unhandled (custom or require\n * the widget to do something) are rejected with an error.\n *\n * Events which are preventDefault()ed must reply using the\n * transport. The events raised will have a detail of an\n * IWidgetApiRequest interface.\n *\n * When the WidgetApi is ready to start sending requests, it will\n * raise a \"ready\" CustomEvent. After the ready event fires, actions\n * can be sent and the transport will be ready.\n */\nexports.WidgetApiResponseError = WidgetApiResponseError;\nWidgetApiResponseError.prototype.name = WidgetApiResponseError.name;\nvar WidgetApi = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(WidgetApi, _EventEmitter);\n  var _super2 = _createSuper(WidgetApi);\n  /**\n   * Creates a new API handler for the given widget.\n   * @param {string} widgetId The widget ID to listen for. If not supplied then\n   * the API will use the widget ID from the first valid request it receives.\n   * @param {string} clientOrigin The origin of the client, or null if not known.\n   */\n  function WidgetApi() {\n    var _this3;\n    var widgetId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var clientOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, WidgetApi);\n    _this3 = _super2.call(this);\n    _this3.clientOrigin = clientOrigin;\n    _defineProperty(_assertThisInitialized(_this3), \"transport\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"capabilitiesFinished\", false);\n    _defineProperty(_assertThisInitialized(_this3), \"supportsMSC2974Renegotiate\", false);\n    _defineProperty(_assertThisInitialized(_this3), \"requestedCapabilities\", []);\n    _defineProperty(_assertThisInitialized(_this3), \"approvedCapabilities\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"cachedClientVersions\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"turnServerWatchers\", 0);\n    if (!window.parent) {\n      throw new Error(\"No parent window. This widget doesn't appear to be embedded properly.\");\n    }\n    _this3.transport = new _PostmessageTransport.PostmessageTransport(_WidgetApiDirection.WidgetApiDirection.FromWidget, widgetId, window.parent, window);\n    _this3.transport.targetOrigin = clientOrigin;\n    _this3.transport.on(\"message\", _this3.handleMessage.bind(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  /**\n   * Determines if the widget was granted a particular capability. Note that on\n   * clients where the capabilities are not fed back to the widget this function\n   * will rely on requested capabilities instead.\n   * @param {Capability} capability The capability to check for approval of.\n   * @returns {boolean} True if the widget has approval for the given capability.\n   */\n  _createClass(WidgetApi, [{\n    key: \"hasCapability\",\n    value: function hasCapability(capability) {\n      if (Array.isArray(this.approvedCapabilities)) {\n        return this.approvedCapabilities.includes(capability);\n      }\n      return this.requestedCapabilities.includes(capability);\n    }\n\n    /**\n     * Request a capability from the client. It is not guaranteed to be allowed,\n     * but will be asked for.\n     * @param {Capability} capability The capability to request.\n     * @throws Throws if the capabilities negotiation has already started and the\n     * widget is unable to request additional capabilities.\n     */\n  }, {\n    key: \"requestCapability\",\n    value: function requestCapability(capability) {\n      if (this.capabilitiesFinished && !this.supportsMSC2974Renegotiate) {\n        throw new Error(\"Capabilities have already been negotiated\");\n      }\n      this.requestedCapabilities.push(capability);\n    }\n\n    /**\n     * Request capabilities from the client. They are not guaranteed to be allowed,\n     * but will be asked for if the negotiation has not already happened.\n     * @param {Capability[]} capabilities The capabilities to request.\n     * @throws Throws if the capabilities negotiation has already started.\n     */\n  }, {\n    key: \"requestCapabilities\",\n    value: function requestCapabilities(capabilities) {\n      var _this4 = this;\n      capabilities.forEach(function (cap) {\n        return _this4.requestCapability(cap);\n      });\n    }\n\n    /**\n     * Requests the capability to interact with rooms other than the user's currently\n     * viewed room. Applies to event receiving and sending.\n     * @param {string | Symbols.AnyRoom} roomId The room ID, or `Symbols.AnyRoom` to\n     * denote all known rooms.\n     */\n  }, {\n    key: \"requestCapabilityForRoomTimeline\",\n    value: function requestCapabilityForRoomTimeline(roomId) {\n      this.requestCapability(\"org.matrix.msc2762.timeline:\".concat(roomId));\n    }\n\n    /**\n     * Requests the capability to send a given state event with optional explicit\n     * state key. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     * @param {string} stateKey If specified, the specific state key to request.\n     * Otherwise all state keys will be requested.\n     */\n  }, {\n    key: \"requestCapabilityToSendState\",\n    value: function requestCapabilityToSendState(eventType, stateKey) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forStateEvent(_WidgetEventCapability.EventDirection.Send, eventType, stateKey).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given state event with optional explicit\n     * state key. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     * @param {string} stateKey If specified, the specific state key to request.\n     * Otherwise all state keys will be requested.\n     */\n  }, {\n    key: \"requestCapabilityToReceiveState\",\n    value: function requestCapabilityToReceiveState(eventType, stateKey) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forStateEvent(_WidgetEventCapability.EventDirection.Receive, eventType, stateKey).raw);\n    }\n\n    /**\n     * Requests the capability to send a given to-device event. It is not\n     * guaranteed to be allowed, but will be asked for if the negotiation has\n     * not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n  }, {\n    key: \"requestCapabilityToSendToDevice\",\n    value: function requestCapabilityToSendToDevice(eventType) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forToDeviceEvent(_WidgetEventCapability.EventDirection.Send, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given to-device event. It is not\n     * guaranteed to be allowed, but will be asked for if the negotiation has\n     * not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n  }, {\n    key: \"requestCapabilityToReceiveToDevice\",\n    value: function requestCapabilityToReceiveToDevice(eventType) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forToDeviceEvent(_WidgetEventCapability.EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to send a given room event. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n  }, {\n    key: \"requestCapabilityToSendEvent\",\n    value: function requestCapabilityToSendEvent(eventType) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forRoomEvent(_WidgetEventCapability.EventDirection.Send, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given room event. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n  }, {\n    key: \"requestCapabilityToReceiveEvent\",\n    value: function requestCapabilityToReceiveEvent(eventType) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forRoomEvent(_WidgetEventCapability.EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to send a given message event with optional explicit\n     * `msgtype`. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} msgtype If specified, the specific msgtype to request.\n     * Otherwise all message types will be requested.\n     */\n  }, {\n    key: \"requestCapabilityToSendMessage\",\n    value: function requestCapabilityToSendMessage(msgtype) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forRoomMessageEvent(_WidgetEventCapability.EventDirection.Send, msgtype).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given message event with optional explicit\n     * `msgtype`. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} msgtype If specified, the specific msgtype to request.\n     * Otherwise all message types will be requested.\n     */\n  }, {\n    key: \"requestCapabilityToReceiveMessage\",\n    value: function requestCapabilityToReceiveMessage(msgtype) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forRoomMessageEvent(_WidgetEventCapability.EventDirection.Receive, msgtype).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given item in room account data. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     */\n  }, {\n    key: \"requestCapabilityToReceiveRoomAccountData\",\n    value: function requestCapabilityToReceiveRoomAccountData(eventType) {\n      this.requestCapability(_WidgetEventCapability.WidgetEventCapability.forRoomAccountData(_WidgetEventCapability.EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests an OpenID Connect token from the client for the currently logged in\n     * user. This token can be validated server-side with the federation API. Note\n     * that the widget is responsible for validating the token and caching any results\n     * it needs.\n     * @returns {Promise<IOpenIDCredentials>} Resolves to a token for verification.\n     * @throws Throws if the user rejected the request or the request failed.\n     */\n  }, {\n    key: \"requestOpenIDConnectToken\",\n    value: function requestOpenIDConnectToken() {\n      var _this5 = this;\n      return new Promise(function (resolve, reject) {\n        _this5.transport.sendComplete(_WidgetApiAction.WidgetApiFromWidgetAction.GetOpenIDCredentials, {}).then(function (response) {\n          var rdata = response.response;\n          if (rdata.state === _GetOpenIDAction.OpenIDRequestState.Allowed) {\n            resolve(rdata);\n          } else if (rdata.state === _GetOpenIDAction.OpenIDRequestState.Blocked) {\n            reject(new Error(\"User declined to verify their identity\"));\n          } else if (rdata.state === _GetOpenIDAction.OpenIDRequestState.PendingUserConfirmation) {\n            var handlerFn = function handlerFn(ev) {\n              ev.preventDefault();\n              var request = ev.detail;\n              if (request.data.original_request_id !== response.requestId) return;\n              if (request.data.state === _GetOpenIDAction.OpenIDRequestState.Allowed) {\n                resolve(request.data);\n                _this5.transport.reply(request, {}); // ack\n              } else if (request.data.state === _GetOpenIDAction.OpenIDRequestState.Blocked) {\n                reject(new Error(\"User declined to verify their identity\"));\n                _this5.transport.reply(request, {}); // ack\n              } else {\n                reject(new Error(\"Invalid state on reply: \" + rdata.state));\n                _this5.transport.reply(request, {\n                  error: {\n                    message: \"Invalid state\"\n                  }\n                });\n              }\n              _this5.off(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.OpenIDCredentials), handlerFn);\n            };\n            _this5.on(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.OpenIDCredentials), handlerFn);\n          } else {\n            reject(new Error(\"Invalid state: \" + rdata.state));\n          }\n        })[\"catch\"](reject);\n      });\n    }\n\n    /**\n     * Asks the client for additional capabilities. Capabilities can be queued for this\n     * request with the requestCapability() functions.\n     * @returns {Promise<void>} Resolves when complete. Note that the promise resolves when\n     * the capabilities request has gone through, not when the capabilities are approved/denied.\n     * Use the WidgetApiToWidgetAction.NotifyCapabilities action to detect changes.\n     */\n  }, {\n    key: \"updateRequestedCapabilities\",\n    value: function updateRequestedCapabilities() {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC2974RenegotiateCapabilities, {\n        capabilities: this.requestedCapabilities\n      }).then();\n    }\n\n    /**\n     * Tell the client that the content has been loaded.\n     * @returns {Promise} Resolves when the client acknowledges the request.\n     */\n  }, {\n    key: \"sendContentLoaded\",\n    value: function sendContentLoaded() {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.ContentLoaded, {}).then();\n    }\n\n    /**\n     * Sends a sticker to the client.\n     * @param {IStickerActionRequestData} sticker The sticker to send.\n     * @returns {Promise} Resolves when the client acknowledges the request.\n     */\n  }, {\n    key: \"sendSticker\",\n    value: function sendSticker(sticker) {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.SendSticker, sticker).then();\n    }\n\n    /**\n     * Asks the client to set the always-on-screen status for this widget.\n     * @param {boolean} value The new state to request.\n     * @returns {Promise<boolean>} Resolve with true if the client was able to fulfill\n     * the request, resolves to false otherwise. Rejects if an error occurred.\n     */\n  }, {\n    key: \"setAlwaysOnScreen\",\n    value: function setAlwaysOnScreen(value) {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.UpdateAlwaysOnScreen, {\n        value: value\n      }).then(function (res) {\n        return res.success;\n      });\n    }\n\n    /**\n     * Opens a modal widget.\n     * @param {string} url The URL to the modal widget.\n     * @param {string} name The name of the widget.\n     * @param {IModalWidgetOpenRequestDataButton[]} buttons The buttons to have on the widget.\n     * @param {IModalWidgetCreateData} data Data to supply to the modal widget.\n     * @param {WidgetType} type The type of modal widget.\n     * @returns {Promise<void>} Resolves when the modal widget has been opened.\n     */\n  }, {\n    key: \"openModalWidget\",\n    value: function openModalWidget(url, name) {\n      var buttons = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _WidgetType.MatrixWidgetType.Custom;\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.OpenModalWidget, {\n        type: type,\n        url: url,\n        name: name,\n        buttons: buttons,\n        data: data\n      }).then();\n    }\n\n    /**\n     * Closes the modal widget. The widget's session will be terminated shortly after.\n     * @param {IModalWidgetReturnData} data Optional data to close the modal widget with.\n     * @returns {Promise<void>} Resolves when complete.\n     */\n  }, {\n    key: \"closeModalWidget\",\n    value: function closeModalWidget() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.CloseModalWidget, data).then();\n    }\n  }, {\n    key: \"sendRoomEvent\",\n    value: function sendRoomEvent(eventType, content, roomId, delay, parentDelayId) {\n      return this.sendEvent(eventType, undefined, content, roomId, delay, parentDelayId);\n    }\n  }, {\n    key: \"sendStateEvent\",\n    value: function sendStateEvent(eventType, stateKey, content, roomId, delay, parentDelayId) {\n      return this.sendEvent(eventType, stateKey, content, roomId, delay, parentDelayId);\n    }\n  }, {\n    key: \"sendEvent\",\n    value: function sendEvent(eventType, stateKey, content, roomId, delay, parentDelayId) {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.SendEvent, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        type: eventType,\n        content: content\n      }, stateKey !== undefined && {\n        state_key: stateKey\n      }), roomId !== undefined && {\n        room_id: roomId\n      }), delay !== undefined && {\n        delay: delay\n      }), parentDelayId !== undefined && {\n        parent_delay_id: parentDelayId\n      }));\n    }\n\n    /**\n     * @deprecated This currently relies on an unstable MSC (MSC4157).\n     */\n  }, {\n    key: \"updateDelayedEvent\",\n    value: function updateDelayedEvent(delayId, action) {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC4157UpdateDelayedEvent, {\n        delay_id: delayId,\n        action: action\n      });\n    }\n\n    /**\n     * Sends a to-device event.\n     * @param {string} eventType The type of events being sent.\n     * @param {boolean} encrypted Whether to encrypt the message contents.\n     * @param {Object} contentMap A map from user IDs to device IDs to message contents.\n     * @returns {Promise<ISendToDeviceFromWidgetResponseData>} Resolves when complete.\n     */\n  }, {\n    key: \"sendToDevice\",\n    value: function sendToDevice(eventType, encrypted, contentMap) {\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.SendToDevice, {\n        type: eventType,\n        encrypted: encrypted,\n        messages: contentMap\n      });\n    }\n  }, {\n    key: \"readRoomAccountData\",\n    value: function readRoomAccountData(eventType, roomIds) {\n      var data = {\n        type: eventType\n      };\n      if (roomIds) {\n        if (roomIds.includes(_Symbols.Symbols.AnyRoom)) {\n          data.room_ids = _Symbols.Symbols.AnyRoom;\n        } else {\n          data.room_ids = roomIds;\n        }\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.BeeperReadRoomAccountData, data).then(function (r) {\n        return r.events;\n      });\n    }\n  }, {\n    key: \"readRoomEvents\",\n    value: function readRoomEvents(eventType, limit, msgtype, roomIds, since) {\n      var data = {\n        type: eventType,\n        msgtype: msgtype\n      };\n      if (limit !== undefined) {\n        data.limit = limit;\n      }\n      if (roomIds) {\n        if (roomIds.includes(_Symbols.Symbols.AnyRoom)) {\n          data.room_ids = _Symbols.Symbols.AnyRoom;\n        } else {\n          data.room_ids = roomIds;\n        }\n      }\n      if (since) {\n        data.since = since;\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC2876ReadEvents, data).then(function (r) {\n        return r.events;\n      });\n    }\n\n    /**\n     * Reads all related events given a known eventId.\n     * @param eventId The id of the parent event to be read.\n     * @param roomId The room to look within. When undefined, the user's currently\n     * viewed room.\n     * @param relationType The relationship type of child events to search for.\n     * When undefined, all relations are returned.\n     * @param eventType The event type of child events to search for. When undefined,\n     * all related events are returned.\n     * @param limit The maximum number of events to retrieve per room. If not\n     * supplied, the server will apply a default limit.\n     * @param from The pagination token to start returning results from, as\n     * received from a previous call. If not supplied, results start at the most\n     * recent topological event known to the server.\n     * @param to The pagination token to stop returning results at. If not\n     * supplied, results continue up to limit or until there are no more events.\n     * @param direction The direction to search for according to MSC3715.\n     * @returns Resolves to the room relations.\n     */\n  }, {\n    key: \"readEventRelations\",\n    value: function () {\n      var _readEventRelations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(eventId, roomId, relationType, eventType, limit, from, to, direction) {\n        var versions, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getClientVersions();\n            case 2:\n              versions = _context.sent;\n              if (versions.includes(_ApiVersion.UnstableApiVersion.MSC3869)) {\n                _context.next = 5;\n                break;\n              }\n              throw new Error(\"The read_relations action is not supported by the client.\");\n            case 5:\n              data = {\n                event_id: eventId,\n                rel_type: relationType,\n                event_type: eventType,\n                room_id: roomId,\n                to: to,\n                from: from,\n                limit: limit,\n                direction: direction\n              };\n              return _context.abrupt(\"return\", this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC3869ReadRelations, data));\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function readEventRelations(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n        return _readEventRelations.apply(this, arguments);\n      }\n      return readEventRelations;\n    }()\n  }, {\n    key: \"readStateEvents\",\n    value: function readStateEvents(eventType, limit, stateKey, roomIds) {\n      var data = {\n        type: eventType,\n        state_key: stateKey === undefined ? true : stateKey\n      };\n      if (limit !== undefined) {\n        data.limit = limit;\n      }\n      if (roomIds) {\n        if (roomIds.includes(_Symbols.Symbols.AnyRoom)) {\n          data.room_ids = _Symbols.Symbols.AnyRoom;\n        } else {\n          data.room_ids = roomIds;\n        }\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC2876ReadEvents, data).then(function (r) {\n        return r.events;\n      });\n    }\n\n    /**\n     * Sets a button as disabled or enabled on the modal widget. Buttons are enabled by default.\n     * @param {ModalButtonID} buttonId The button ID to enable/disable.\n     * @param {boolean} isEnabled Whether or not the button is enabled.\n     * @returns {Promise<void>} Resolves when complete.\n     * @throws Throws if the button cannot be disabled, or the client refuses to disable the button.\n     */\n  }, {\n    key: \"setModalButtonEnabled\",\n    value: function setModalButtonEnabled(buttonId, isEnabled) {\n      if (buttonId === _ModalWidgetActions.BuiltInModalButtonID.Close) {\n        throw new Error(\"The close button cannot be disabled\");\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.SetModalButtonEnabled, {\n        button: buttonId,\n        enabled: isEnabled\n      }).then();\n    }\n\n    /**\n     * Attempts to navigate the client to the given URI. This can only be called with Matrix URIs\n     * (currently only matrix.to, but in future a Matrix URI scheme will be defined).\n     * @param {string} uri The URI to navigate to.\n     * @returns {Promise<void>} Resolves when complete.\n     * @throws Throws if the URI is invalid or cannot be processed.\n     * @deprecated This currently relies on an unstable MSC (MSC2931).\n     */\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(uri) {\n      if (!uri || !uri.startsWith(\"https://matrix.to/#\")) {\n        throw new Error(\"Invalid matrix.to URI\");\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC2931Navigate, {\n        uri: uri\n      }).then();\n    }\n\n    /**\n     * Starts watching for TURN servers, yielding an initial set of credentials as soon as possible,\n     * and thereafter yielding new credentials whenever the previous ones expire.\n     * @yields {ITurnServer} The TURN server URIs and credentials currently available to the widget.\n     */\n  }, {\n    key: \"getTurnServers\",\n    value: function getTurnServers() {\n      var _this = this;\n      return _wrapAsyncGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var setTurnServer, onUpdateTurnServers;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              onUpdateTurnServers = /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        ev.preventDefault();\n                        setTurnServer(ev.detail.data);\n                        _context2.next = 4;\n                        return _this.transport.reply(ev.detail, {});\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2);\n                }));\n                return function onUpdateTurnServers(_x9) {\n                  return _ref.apply(this, arguments);\n                };\n              }(); // Start listening for updates before we even start watching, to catch\n              // TURN data that is sent immediately\n              _this.on(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.UpdateTurnServers), onUpdateTurnServers);\n\n              // Only send the 'watch' action if we aren't already watching\n              if (!(_this.turnServerWatchers === 0)) {\n                _context3.next = 12;\n                break;\n              }\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _awaitAsyncGenerator(_this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.WatchTurnServers, {}));\n            case 6:\n              _context3.next = 12;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](3);\n              _this.off(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.UpdateTurnServers), onUpdateTurnServers);\n              throw _context3.t0;\n            case 12:\n              _this.turnServerWatchers++;\n              _context3.prev = 13;\n            case 14:\n              if (!true) {\n                _context3.next = 21;\n                break;\n              }\n              _context3.next = 17;\n              return _awaitAsyncGenerator(new Promise(function (resolve) {\n                return setTurnServer = resolve;\n              }));\n            case 17:\n              _context3.next = 19;\n              return _context3.sent;\n            case 19:\n              _context3.next = 14;\n              break;\n            case 21:\n              _context3.prev = 21;\n              // The loop was broken by the caller - clean up\n              _this.off(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.UpdateTurnServers), onUpdateTurnServers);\n\n              // Since sending the 'unwatch' action will end updates for all other\n              // consumers, only send it if we're the only consumer remaining\n              _this.turnServerWatchers--;\n              if (!(_this.turnServerWatchers === 0)) {\n                _context3.next = 27;\n                break;\n              }\n              _context3.next = 27;\n              return _awaitAsyncGenerator(_this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.UnwatchTurnServers, {}));\n            case 27:\n              return _context3.finish(21);\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[3, 8], [13,, 21, 28]]);\n      }))();\n    }\n\n    /**\n     * Search for users in the user directory.\n     * @param searchTerm The term to search for.\n     * @param limit The maximum number of results to return. If not supplied, the\n     * @returns Resolves to the search results.\n     */\n  }, {\n    key: \"searchUserDirectory\",\n    value: function () {\n      var _searchUserDirectory = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(searchTerm, limit) {\n        var versions, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getClientVersions();\n            case 2:\n              versions = _context4.sent;\n              if (versions.includes(_ApiVersion.UnstableApiVersion.MSC3973)) {\n                _context4.next = 5;\n                break;\n              }\n              throw new Error(\"The user_directory_search action is not supported by the client.\");\n            case 5:\n              data = {\n                search_term: searchTerm,\n                limit: limit\n              };\n              return _context4.abrupt(\"return\", this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC3973UserDirectorySearch, data));\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function searchUserDirectory(_x10, _x11) {\n        return _searchUserDirectory.apply(this, arguments);\n      }\n      return searchUserDirectory;\n    }()\n    /**\n     * Get the config for the media repository.\n     * @returns Promise which resolves with an object containing the config.\n     */\n  }, {\n    key: \"getMediaConfig\",\n    value: function () {\n      var _getMediaConfig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var versions, data;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.getClientVersions();\n            case 2:\n              versions = _context5.sent;\n              if (versions.includes(_ApiVersion.UnstableApiVersion.MSC4039)) {\n                _context5.next = 5;\n                break;\n              }\n              throw new Error(\"The get_media_config action is not supported by the client.\");\n            case 5:\n              data = {};\n              return _context5.abrupt(\"return\", this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC4039GetMediaConfigAction, data));\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getMediaConfig() {\n        return _getMediaConfig.apply(this, arguments);\n      }\n      return getMediaConfig;\n    }()\n    /**\n     * Upload a file to the media repository on the homeserver.\n     * @param file - The object to upload. Something that can be sent to\n     *               XMLHttpRequest.send (typically a File).\n     * @returns Resolves to the location of the uploaded file.\n     */\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(file) {\n        var versions, data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.getClientVersions();\n            case 2:\n              versions = _context6.sent;\n              if (versions.includes(_ApiVersion.UnstableApiVersion.MSC4039)) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"The upload_file action is not supported by the client.\");\n            case 5:\n              data = {\n                file: file\n              };\n              return _context6.abrupt(\"return\", this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC4039UploadFileAction, data));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function uploadFile(_x12) {\n        return _uploadFile.apply(this, arguments);\n      }\n      return uploadFile;\n    }()\n    /**\n     * Download a file from the media repository on the homeserver.\n     * @param contentUri - MXC URI of the file to download.\n     * @returns Resolves to the contents of the file.\n     */\n  }, {\n    key: \"downloadFile\",\n    value: function () {\n      var _downloadFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(contentUri) {\n        var versions, data;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.getClientVersions();\n            case 2:\n              versions = _context7.sent;\n              if (versions.includes(_ApiVersion.UnstableApiVersion.MSC4039)) {\n                _context7.next = 5;\n                break;\n              }\n              throw new Error(\"The download_file action is not supported by the client.\");\n            case 5:\n              data = {\n                content_uri: contentUri\n              };\n              return _context7.abrupt(\"return\", this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.MSC4039DownloadFileAction, data));\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function downloadFile(_x13) {\n        return _downloadFile.apply(this, arguments);\n      }\n      return downloadFile;\n    }()\n    /**\n     * Starts the communication channel. This should be done early to ensure\n     * that messages are not missed. Communication can only be stopped by the client.\n     */\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this6 = this;\n      this.transport.start();\n      this.getClientVersions().then(function (v) {\n        if (v.includes(_ApiVersion.UnstableApiVersion.MSC2974)) {\n          _this6.supportsMSC2974Renegotiate = true;\n        }\n      });\n    }\n  }, {\n    key: \"handleMessage\",\n    value: function handleMessage(ev) {\n      var actionEv = new CustomEvent(\"action:\".concat(ev.detail.action), {\n        detail: ev.detail,\n        cancelable: true\n      });\n      this.emit(\"action:\".concat(ev.detail.action), actionEv);\n      if (!actionEv.defaultPrevented) {\n        switch (ev.detail.action) {\n          case _WidgetApiAction.WidgetApiToWidgetAction.SupportedApiVersions:\n            return this.replyVersions(ev.detail);\n          case _WidgetApiAction.WidgetApiToWidgetAction.Capabilities:\n            return this.handleCapabilities(ev.detail);\n          case _WidgetApiAction.WidgetApiToWidgetAction.UpdateVisibility:\n            return this.transport.reply(ev.detail, {});\n          // ack to avoid error spam\n          case _WidgetApiAction.WidgetApiToWidgetAction.NotifyCapabilities:\n            return this.transport.reply(ev.detail, {});\n          // ack to avoid error spam\n          default:\n            return this.transport.reply(ev.detail, {\n              error: {\n                message: \"Unknown or unsupported action: \" + ev.detail.action\n              }\n            });\n        }\n      }\n    }\n  }, {\n    key: \"replyVersions\",\n    value: function replyVersions(request) {\n      this.transport.reply(request, {\n        supported_versions: _ApiVersion.CurrentApiVersions\n      });\n    }\n  }, {\n    key: \"getClientVersions\",\n    value: function getClientVersions() {\n      var _this7 = this;\n      if (Array.isArray(this.cachedClientVersions)) {\n        return Promise.resolve(this.cachedClientVersions);\n      }\n      return this.transport.send(_WidgetApiAction.WidgetApiFromWidgetAction.SupportedApiVersions, {}).then(function (r) {\n        _this7.cachedClientVersions = r.supported_versions;\n        return r.supported_versions;\n      })[\"catch\"](function (e) {\n        console.warn(\"non-fatal error getting supported client versions: \", e);\n        return [];\n      });\n    }\n  }, {\n    key: \"handleCapabilities\",\n    value: function handleCapabilities(request) {\n      var _this8 = this;\n      if (this.capabilitiesFinished) {\n        return this.transport.reply(request, {\n          error: {\n            message: \"Capability negotiation already completed\"\n          }\n        });\n      }\n\n      // See if we can expect a capabilities notification or not\n      return this.getClientVersions().then(function (v) {\n        if (v.includes(_ApiVersion.UnstableApiVersion.MSC2871)) {\n          _this8.once(\"action:\".concat(_WidgetApiAction.WidgetApiToWidgetAction.NotifyCapabilities), function (ev) {\n            _this8.approvedCapabilities = ev.detail.data.approved;\n            _this8.emit(\"ready\");\n          });\n        } else {\n          // if we can't expect notification, we're as done as we can be\n          _this8.emit(\"ready\");\n        }\n\n        // in either case, reply to that capabilities request\n        _this8.capabilitiesFinished = true;\n        return _this8.transport.reply(request, {\n          capabilities: _this8.requestedCapabilities\n        });\n      });\n    }\n  }]);\n  return WidgetApi;\n}(_events.EventEmitter);\nexports.WidgetApi = WidgetApi;","map":{"version":3,"names":["_events","require","_WidgetApiDirection","_ApiVersion","_PostmessageTransport","_WidgetApiAction","_GetOpenIDAction","_WidgetType","_ModalWidgetActions","_WidgetEventCapability","_Symbols","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_classCallCheck","instance","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","_isNativeFunction","has","get","set","Wrapper","_construct","Parent","bind","a","Function","sham","Proxy","Boolean","valueOf","e","toString","indexOf","o","p","_awaitAsyncGenerator","_OverloadYield","_wrapAsyncGenerator","_AsyncGenerator","front","back","resume","overloaded","v","nextKey","k","settle","request","kind","WidgetApiResponseError","_Error","_super","message","data","_this2","WidgetApi","_EventEmitter","_super2","_this3","widgetId","clientOrigin","window","parent","transport","PostmessageTransport","WidgetApiDirection","FromWidget","targetOrigin","on","handleMessage","hasCapability","capability","Array","isArray","approvedCapabilities","includes","requestedCapabilities","requestCapability","capabilitiesFinished","supportsMSC2974Renegotiate","requestCapabilities","capabilities","_this4","cap","requestCapabilityForRoomTimeline","roomId","concat","requestCapabilityToSendState","eventType","stateKey","WidgetEventCapability","forStateEvent","EventDirection","Send","raw","requestCapabilityToReceiveState","Receive","requestCapabilityToSendToDevice","forToDeviceEvent","requestCapabilityToReceiveToDevice","requestCapabilityToSendEvent","forRoomEvent","requestCapabilityToReceiveEvent","requestCapabilityToSendMessage","msgtype","forRoomMessageEvent","requestCapabilityToReceiveMessage","requestCapabilityToReceiveRoomAccountData","forRoomAccountData","requestOpenIDConnectToken","_this5","sendComplete","WidgetApiFromWidgetAction","GetOpenIDCredentials","response","rdata","OpenIDRequestState","Allowed","Blocked","PendingUserConfirmation","handlerFn","ev","preventDefault","detail","original_request_id","requestId","reply","off","WidgetApiToWidgetAction","OpenIDCredentials","updateRequestedCapabilities","send","MSC2974RenegotiateCapabilities","sendContentLoaded","ContentLoaded","sendSticker","sticker","SendSticker","setAlwaysOnScreen","UpdateAlwaysOnScreen","success","openModalWidget","url","buttons","MatrixWidgetType","Custom","OpenModalWidget","closeModalWidget","CloseModalWidget","sendRoomEvent","content","delay","parentDelayId","sendEvent","sendStateEvent","SendEvent","state_key","room_id","parent_delay_id","updateDelayedEvent","delayId","action","MSC4157UpdateDelayedEvent","delay_id","sendToDevice","encrypted","contentMap","SendToDevice","messages","readRoomAccountData","roomIds","Symbols","AnyRoom","room_ids","BeeperReadRoomAccountData","r","events","readRoomEvents","limit","since","MSC2876ReadEvents","_readEventRelations","_callee","eventId","relationType","from","to","direction","versions","_callee$","_context","getClientVersions","UnstableApiVersion","MSC3869","event_id","rel_type","event_type","MSC3869ReadRelations","readEventRelations","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8","readStateEvents","setModalButtonEnabled","buttonId","isEnabled","BuiltInModalButtonID","Close","SetModalButtonEnabled","button","enabled","navigateTo","uri","startsWith","MSC2931Navigate","getTurnServers","_this","_callee3","setTurnServer","onUpdateTurnServers","_callee3$","_context3","_ref","_callee2","_callee2$","_context2","_x9","UpdateTurnServers","turnServerWatchers","WatchTurnServers","t0","UnwatchTurnServers","_searchUserDirectory","_callee4","searchTerm","_callee4$","_context4","MSC3973","search_term","MSC3973UserDirectorySearch","searchUserDirectory","_x10","_x11","_getMediaConfig","_callee5","_callee5$","_context5","MSC4039","MSC4039GetMediaConfigAction","getMediaConfig","_uploadFile","_callee6","file","_callee6$","_context6","MSC4039UploadFileAction","uploadFile","_x12","_downloadFile","_callee7","contentUri","_callee7$","_context7","content_uri","MSC4039DownloadFileAction","downloadFile","_x13","start","_this6","MSC2974","actionEv","CustomEvent","cancelable","emit","defaultPrevented","SupportedApiVersions","replyVersions","Capabilities","handleCapabilities","UpdateVisibility","NotifyCapabilities","supported_versions","CurrentApiVersions","_this7","cachedClientVersions","console","warn","_this8","MSC2871","once","approved","EventEmitter"],"sources":["C:\\Users\\pilat\\Documents\\Knwlab\\matrix-bot-widget\\node_modules\\matrix-widget-api\\src\\WidgetApi.ts"],"sourcesContent":["/*\n * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from \"events\";\n\nimport { Capability } from \"./interfaces/Capabilities\";\nimport { IWidgetApiRequest, IWidgetApiRequestEmptyData } from \"./interfaces/IWidgetApiRequest\";\nimport { IWidgetApiAcknowledgeResponseData } from \"./interfaces/IWidgetApiResponse\";\nimport { WidgetApiDirection } from \"./interfaces/WidgetApiDirection\";\nimport {\n    ISupportedVersionsActionRequest,\n    ISupportedVersionsActionResponseData,\n} from \"./interfaces/SupportedVersionsAction\";\nimport { ApiVersion, CurrentApiVersions, UnstableApiVersion } from \"./interfaces/ApiVersion\";\nimport {\n    ICapabilitiesActionRequest,\n    ICapabilitiesActionResponseData,\n    INotifyCapabilitiesActionRequest,\n    IRenegotiateCapabilitiesRequestData,\n} from \"./interfaces/CapabilitiesAction\";\nimport { ITransport } from \"./transport/ITransport\";\nimport { PostmessageTransport } from \"./transport/PostmessageTransport\";\nimport { WidgetApiFromWidgetAction, WidgetApiToWidgetAction } from \"./interfaces/WidgetApiAction\";\nimport { IWidgetApiErrorResponseData, IWidgetApiErrorResponseDataDetails } from \"./interfaces/IWidgetApiErrorResponse\";\nimport { IStickerActionRequestData } from \"./interfaces/StickerAction\";\nimport { IStickyActionRequestData, IStickyActionResponseData } from \"./interfaces/StickyAction\";\nimport {\n    IGetOpenIDActionRequestData,\n    IGetOpenIDActionResponse,\n    IOpenIDCredentials,\n    OpenIDRequestState,\n} from \"./interfaces/GetOpenIDAction\";\nimport { IOpenIDCredentialsActionRequest } from \"./interfaces/OpenIDCredentialsAction\";\nimport { MatrixWidgetType, WidgetType } from \"./interfaces/WidgetType\";\nimport {\n    BuiltInModalButtonID,\n    IModalWidgetCreateData,\n    IModalWidgetOpenRequestData,\n    IModalWidgetOpenRequestDataButton,\n    IModalWidgetReturnData,\n    ModalButtonID,\n} from \"./interfaces/ModalWidgetActions\";\nimport { ISetModalButtonEnabledActionRequestData } from \"./interfaces/SetModalButtonEnabledAction\";\nimport { ISendEventFromWidgetRequestData, ISendEventFromWidgetResponseData } from \"./interfaces/SendEventAction\";\nimport {\n    ISendToDeviceFromWidgetRequestData,\n    ISendToDeviceFromWidgetResponseData,\n} from \"./interfaces/SendToDeviceAction\";\nimport { EventDirection, WidgetEventCapability } from \"./models/WidgetEventCapability\";\nimport { INavigateActionRequestData } from \"./interfaces/NavigateAction\";\nimport { IReadEventFromWidgetRequestData, IReadEventFromWidgetResponseData } from \"./interfaces/ReadEventAction\";\nimport {\n    IReadRoomAccountDataFromWidgetRequestData,\n    IReadRoomAccountDataFromWidgetResponseData,\n} from \"./interfaces/ReadRoomAccountDataAction\";\nimport { IRoomEvent } from \"./interfaces/IRoomEvent\";\nimport { IRoomAccountData } from \"./interfaces/IRoomAccountData\";\nimport { ITurnServer, IUpdateTurnServersRequest } from \"./interfaces/TurnServerActions\";\nimport { Symbols } from \"./Symbols\";\nimport {\n    IReadRelationsFromWidgetRequestData,\n    IReadRelationsFromWidgetResponseData,\n} from \"./interfaces/ReadRelationsAction\";\nimport {\n    IUserDirectorySearchFromWidgetRequestData,\n    IUserDirectorySearchFromWidgetResponseData,\n} from \"./interfaces/UserDirectorySearchAction\";\nimport {\n    IGetMediaConfigActionFromWidgetRequestData,\n    IGetMediaConfigActionFromWidgetResponseData,\n} from \"./interfaces/GetMediaConfigAction\";\nimport {\n    IUploadFileActionFromWidgetRequestData,\n    IUploadFileActionFromWidgetResponseData,\n} from \"./interfaces/UploadFileAction\";\nimport {\n    IDownloadFileActionFromWidgetRequestData,\n    IDownloadFileActionFromWidgetResponseData,\n} from \"./interfaces/DownloadFileAction\";\nimport {\n    IUpdateDelayedEventFromWidgetRequestData,\n    IUpdateDelayedEventFromWidgetResponseData,\n    UpdateDelayedEventAction,\n} from \"./interfaces/UpdateDelayedEventAction\";\n\nexport class WidgetApiResponseError extends Error {\n    static {\n        this.prototype.name = this.name;\n    }\n\n    public constructor(\n        message: string,\n        public readonly data: IWidgetApiErrorResponseDataDetails,\n    ) {\n        super(message);\n    }\n}\n\n/**\n * API handler for widgets. This raises events for each action\n * received as `action:${action}` (eg: \"action:screenshot\").\n * Default handling can be prevented by using preventDefault()\n * on the raised event. The default handling varies for each\n * action: ones which the SDK can handle safely are acknowledged\n * appropriately and ones which are unhandled (custom or require\n * the widget to do something) are rejected with an error.\n *\n * Events which are preventDefault()ed must reply using the\n * transport. The events raised will have a detail of an\n * IWidgetApiRequest interface.\n *\n * When the WidgetApi is ready to start sending requests, it will\n * raise a \"ready\" CustomEvent. After the ready event fires, actions\n * can be sent and the transport will be ready.\n */\nexport class WidgetApi extends EventEmitter {\n    public readonly transport: ITransport;\n\n    private capabilitiesFinished = false;\n    private supportsMSC2974Renegotiate = false;\n    private requestedCapabilities: Capability[] = [];\n    private approvedCapabilities?: Capability[];\n    private cachedClientVersions?: ApiVersion[];\n    private turnServerWatchers = 0;\n\n    /**\n     * Creates a new API handler for the given widget.\n     * @param {string} widgetId The widget ID to listen for. If not supplied then\n     * the API will use the widget ID from the first valid request it receives.\n     * @param {string} clientOrigin The origin of the client, or null if not known.\n     */\n    public constructor(\n        widgetId: string | null = null,\n        private clientOrigin: string | null = null,\n    ) {\n        super();\n        if (!window.parent) {\n            throw new Error(\"No parent window. This widget doesn't appear to be embedded properly.\");\n        }\n        this.transport = new PostmessageTransport(WidgetApiDirection.FromWidget, widgetId, window.parent, window);\n        this.transport.targetOrigin = clientOrigin;\n        this.transport.on(\"message\", this.handleMessage.bind(this));\n    }\n\n    /**\n     * Determines if the widget was granted a particular capability. Note that on\n     * clients where the capabilities are not fed back to the widget this function\n     * will rely on requested capabilities instead.\n     * @param {Capability} capability The capability to check for approval of.\n     * @returns {boolean} True if the widget has approval for the given capability.\n     */\n    public hasCapability(capability: Capability): boolean {\n        if (Array.isArray(this.approvedCapabilities)) {\n            return this.approvedCapabilities.includes(capability);\n        }\n        return this.requestedCapabilities.includes(capability);\n    }\n\n    /**\n     * Request a capability from the client. It is not guaranteed to be allowed,\n     * but will be asked for.\n     * @param {Capability} capability The capability to request.\n     * @throws Throws if the capabilities negotiation has already started and the\n     * widget is unable to request additional capabilities.\n     */\n    public requestCapability(capability: Capability): void {\n        if (this.capabilitiesFinished && !this.supportsMSC2974Renegotiate) {\n            throw new Error(\"Capabilities have already been negotiated\");\n        }\n\n        this.requestedCapabilities.push(capability);\n    }\n\n    /**\n     * Request capabilities from the client. They are not guaranteed to be allowed,\n     * but will be asked for if the negotiation has not already happened.\n     * @param {Capability[]} capabilities The capabilities to request.\n     * @throws Throws if the capabilities negotiation has already started.\n     */\n    public requestCapabilities(capabilities: Capability[]): void {\n        capabilities.forEach((cap) => this.requestCapability(cap));\n    }\n\n    /**\n     * Requests the capability to interact with rooms other than the user's currently\n     * viewed room. Applies to event receiving and sending.\n     * @param {string | Symbols.AnyRoom} roomId The room ID, or `Symbols.AnyRoom` to\n     * denote all known rooms.\n     */\n    public requestCapabilityForRoomTimeline(roomId: string | Symbols.AnyRoom): void {\n        this.requestCapability(`org.matrix.msc2762.timeline:${roomId}`);\n    }\n\n    /**\n     * Requests the capability to send a given state event with optional explicit\n     * state key. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     * @param {string} stateKey If specified, the specific state key to request.\n     * Otherwise all state keys will be requested.\n     */\n    public requestCapabilityToSendState(eventType: string, stateKey?: string): void {\n        this.requestCapability(WidgetEventCapability.forStateEvent(EventDirection.Send, eventType, stateKey).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given state event with optional explicit\n     * state key. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     * @param {string} stateKey If specified, the specific state key to request.\n     * Otherwise all state keys will be requested.\n     */\n    public requestCapabilityToReceiveState(eventType: string, stateKey?: string): void {\n        this.requestCapability(WidgetEventCapability.forStateEvent(EventDirection.Receive, eventType, stateKey).raw);\n    }\n\n    /**\n     * Requests the capability to send a given to-device event. It is not\n     * guaranteed to be allowed, but will be asked for if the negotiation has\n     * not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n    public requestCapabilityToSendToDevice(eventType: string): void {\n        this.requestCapability(WidgetEventCapability.forToDeviceEvent(EventDirection.Send, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given to-device event. It is not\n     * guaranteed to be allowed, but will be asked for if the negotiation has\n     * not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n    public requestCapabilityToReceiveToDevice(eventType: string): void {\n        this.requestCapability(WidgetEventCapability.forToDeviceEvent(EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to send a given room event. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n    public requestCapabilityToSendEvent(eventType: string): void {\n        this.requestCapability(WidgetEventCapability.forRoomEvent(EventDirection.Send, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given room event. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The room event type to ask for.\n     */\n    public requestCapabilityToReceiveEvent(eventType: string): void {\n        this.requestCapability(WidgetEventCapability.forRoomEvent(EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests the capability to send a given message event with optional explicit\n     * `msgtype`. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} msgtype If specified, the specific msgtype to request.\n     * Otherwise all message types will be requested.\n     */\n    public requestCapabilityToSendMessage(msgtype?: string): void {\n        this.requestCapability(WidgetEventCapability.forRoomMessageEvent(EventDirection.Send, msgtype).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given message event with optional explicit\n     * `msgtype`. It is not guaranteed to be allowed, but will be asked for if the\n     * negotiation has not already happened.\n     * @param {string} msgtype If specified, the specific msgtype to request.\n     * Otherwise all message types will be requested.\n     */\n    public requestCapabilityToReceiveMessage(msgtype?: string): void {\n        this.requestCapability(WidgetEventCapability.forRoomMessageEvent(EventDirection.Receive, msgtype).raw);\n    }\n\n    /**\n     * Requests the capability to receive a given item in room account data. It is not guaranteed to be\n     * allowed, but will be asked for if the negotiation has not already happened.\n     * @param {string} eventType The state event type to ask for.\n     */\n    public requestCapabilityToReceiveRoomAccountData(eventType: string): void {\n        this.requestCapability(WidgetEventCapability.forRoomAccountData(EventDirection.Receive, eventType).raw);\n    }\n\n    /**\n     * Requests an OpenID Connect token from the client for the currently logged in\n     * user. This token can be validated server-side with the federation API. Note\n     * that the widget is responsible for validating the token and caching any results\n     * it needs.\n     * @returns {Promise<IOpenIDCredentials>} Resolves to a token for verification.\n     * @throws Throws if the user rejected the request or the request failed.\n     */\n    public requestOpenIDConnectToken(): Promise<IOpenIDCredentials> {\n        return new Promise<IOpenIDCredentials>((resolve, reject) => {\n            this.transport\n                .sendComplete<IGetOpenIDActionRequestData, IGetOpenIDActionResponse>(\n                    WidgetApiFromWidgetAction.GetOpenIDCredentials,\n                    {},\n                )\n                .then((response) => {\n                    const rdata = response.response;\n                    if (rdata.state === OpenIDRequestState.Allowed) {\n                        resolve(rdata);\n                    } else if (rdata.state === OpenIDRequestState.Blocked) {\n                        reject(new Error(\"User declined to verify their identity\"));\n                    } else if (rdata.state === OpenIDRequestState.PendingUserConfirmation) {\n                        const handlerFn = (ev: CustomEvent<IOpenIDCredentialsActionRequest>): void => {\n                            ev.preventDefault();\n                            const request = ev.detail;\n                            if (request.data.original_request_id !== response.requestId) return;\n                            if (request.data.state === OpenIDRequestState.Allowed) {\n                                resolve(request.data);\n                                this.transport.reply(request, <IWidgetApiRequestEmptyData>{}); // ack\n                            } else if (request.data.state === OpenIDRequestState.Blocked) {\n                                reject(new Error(\"User declined to verify their identity\"));\n                                this.transport.reply(request, <IWidgetApiRequestEmptyData>{}); // ack\n                            } else {\n                                reject(new Error(\"Invalid state on reply: \" + rdata.state));\n                                this.transport.reply(request, <IWidgetApiErrorResponseData>{\n                                    error: {\n                                        message: \"Invalid state\",\n                                    },\n                                });\n                            }\n                            this.off(`action:${WidgetApiToWidgetAction.OpenIDCredentials}`, handlerFn);\n                        };\n                        this.on(`action:${WidgetApiToWidgetAction.OpenIDCredentials}`, handlerFn);\n                    } else {\n                        reject(new Error(\"Invalid state: \" + rdata.state));\n                    }\n                })\n                .catch(reject);\n        });\n    }\n\n    /**\n     * Asks the client for additional capabilities. Capabilities can be queued for this\n     * request with the requestCapability() functions.\n     * @returns {Promise<void>} Resolves when complete. Note that the promise resolves when\n     * the capabilities request has gone through, not when the capabilities are approved/denied.\n     * Use the WidgetApiToWidgetAction.NotifyCapabilities action to detect changes.\n     */\n    public updateRequestedCapabilities(): Promise<void> {\n        return this.transport\n            .send(WidgetApiFromWidgetAction.MSC2974RenegotiateCapabilities, <IRenegotiateCapabilitiesRequestData>{\n                capabilities: this.requestedCapabilities,\n            })\n            .then();\n    }\n\n    /**\n     * Tell the client that the content has been loaded.\n     * @returns {Promise} Resolves when the client acknowledges the request.\n     */\n    public sendContentLoaded(): Promise<void> {\n        return this.transport.send(WidgetApiFromWidgetAction.ContentLoaded, <IWidgetApiRequestEmptyData>{}).then();\n    }\n\n    /**\n     * Sends a sticker to the client.\n     * @param {IStickerActionRequestData} sticker The sticker to send.\n     * @returns {Promise} Resolves when the client acknowledges the request.\n     */\n    public sendSticker(sticker: IStickerActionRequestData): Promise<void> {\n        return this.transport.send(WidgetApiFromWidgetAction.SendSticker, sticker).then();\n    }\n\n    /**\n     * Asks the client to set the always-on-screen status for this widget.\n     * @param {boolean} value The new state to request.\n     * @returns {Promise<boolean>} Resolve with true if the client was able to fulfill\n     * the request, resolves to false otherwise. Rejects if an error occurred.\n     */\n    public setAlwaysOnScreen(value: boolean): Promise<boolean> {\n        return this.transport\n            .send<\n                IStickyActionRequestData,\n                IStickyActionResponseData\n            >(WidgetApiFromWidgetAction.UpdateAlwaysOnScreen, { value })\n            .then((res) => res.success);\n    }\n\n    /**\n     * Opens a modal widget.\n     * @param {string} url The URL to the modal widget.\n     * @param {string} name The name of the widget.\n     * @param {IModalWidgetOpenRequestDataButton[]} buttons The buttons to have on the widget.\n     * @param {IModalWidgetCreateData} data Data to supply to the modal widget.\n     * @param {WidgetType} type The type of modal widget.\n     * @returns {Promise<void>} Resolves when the modal widget has been opened.\n     */\n    public openModalWidget(\n        url: string,\n        name: string,\n        buttons: IModalWidgetOpenRequestDataButton[] = [],\n        data: IModalWidgetCreateData = {},\n        type: WidgetType = MatrixWidgetType.Custom,\n    ): Promise<void> {\n        return this.transport\n            .send<IModalWidgetOpenRequestData>(WidgetApiFromWidgetAction.OpenModalWidget, {\n                type,\n                url,\n                name,\n                buttons,\n                data,\n            })\n            .then();\n    }\n\n    /**\n     * Closes the modal widget. The widget's session will be terminated shortly after.\n     * @param {IModalWidgetReturnData} data Optional data to close the modal widget with.\n     * @returns {Promise<void>} Resolves when complete.\n     */\n    public closeModalWidget(data: IModalWidgetReturnData = {}): Promise<void> {\n        return this.transport.send<IModalWidgetReturnData>(WidgetApiFromWidgetAction.CloseModalWidget, data).then();\n    }\n\n    public sendRoomEvent(\n        eventType: string,\n        content: unknown,\n        roomId?: string,\n        delay?: number,\n        parentDelayId?: string,\n    ): Promise<ISendEventFromWidgetResponseData> {\n        return this.sendEvent(eventType, undefined, content, roomId, delay, parentDelayId);\n    }\n\n    public sendStateEvent(\n        eventType: string,\n        stateKey: string,\n        content: unknown,\n        roomId?: string,\n        delay?: number,\n        parentDelayId?: string,\n    ): Promise<ISendEventFromWidgetResponseData> {\n        return this.sendEvent(eventType, stateKey, content, roomId, delay, parentDelayId);\n    }\n\n    private sendEvent(\n        eventType: string,\n        stateKey: string | undefined,\n        content: unknown,\n        roomId?: string,\n        delay?: number,\n        parentDelayId?: string,\n    ): Promise<ISendEventFromWidgetResponseData> {\n        return this.transport.send<ISendEventFromWidgetRequestData, ISendEventFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.SendEvent,\n            {\n                type: eventType,\n                content,\n                ...(stateKey !== undefined && { state_key: stateKey }),\n                ...(roomId !== undefined && { room_id: roomId }),\n                ...(delay !== undefined && { delay }),\n                ...(parentDelayId !== undefined && { parent_delay_id: parentDelayId }),\n            },\n        );\n    }\n\n    /**\n     * @deprecated This currently relies on an unstable MSC (MSC4157).\n     */\n    public updateDelayedEvent(\n        delayId: string,\n        action: UpdateDelayedEventAction,\n    ): Promise<IUpdateDelayedEventFromWidgetResponseData> {\n        return this.transport.send<IUpdateDelayedEventFromWidgetRequestData, IUpdateDelayedEventFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.MSC4157UpdateDelayedEvent,\n            {\n                delay_id: delayId,\n                action,\n            },\n        );\n    }\n\n    /**\n     * Sends a to-device event.\n     * @param {string} eventType The type of events being sent.\n     * @param {boolean} encrypted Whether to encrypt the message contents.\n     * @param {Object} contentMap A map from user IDs to device IDs to message contents.\n     * @returns {Promise<ISendToDeviceFromWidgetResponseData>} Resolves when complete.\n     */\n    public sendToDevice(\n        eventType: string,\n        encrypted: boolean,\n        contentMap: { [userId: string]: { [deviceId: string]: object } },\n    ): Promise<ISendToDeviceFromWidgetResponseData> {\n        return this.transport.send<ISendToDeviceFromWidgetRequestData, ISendToDeviceFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.SendToDevice,\n            { type: eventType, encrypted, messages: contentMap },\n        );\n    }\n\n    public readRoomAccountData(eventType: string, roomIds?: (string | Symbols.AnyRoom)[]): Promise<IRoomAccountData[]> {\n        const data: IReadEventFromWidgetRequestData = { type: eventType };\n\n        if (roomIds) {\n            if (roomIds.includes(Symbols.AnyRoom)) {\n                data.room_ids = Symbols.AnyRoom;\n            } else {\n                data.room_ids = roomIds;\n            }\n        }\n        return this.transport\n            .send<\n                IReadRoomAccountDataFromWidgetRequestData,\n                IReadRoomAccountDataFromWidgetResponseData\n            >(WidgetApiFromWidgetAction.BeeperReadRoomAccountData, data)\n            .then((r) => r.events);\n    }\n\n    public readRoomEvents(\n        eventType: string,\n        limit?: number,\n        msgtype?: string,\n        roomIds?: (string | Symbols.AnyRoom)[],\n        since?: string | undefined,\n    ): Promise<IRoomEvent[]> {\n        const data: IReadEventFromWidgetRequestData = { type: eventType, msgtype: msgtype };\n        if (limit !== undefined) {\n            data.limit = limit;\n        }\n        if (roomIds) {\n            if (roomIds.includes(Symbols.AnyRoom)) {\n                data.room_ids = Symbols.AnyRoom;\n            } else {\n                data.room_ids = roomIds;\n            }\n        }\n        if (since) {\n            data.since = since;\n        }\n        return this.transport\n            .send<\n                IReadEventFromWidgetRequestData,\n                IReadEventFromWidgetResponseData\n            >(WidgetApiFromWidgetAction.MSC2876ReadEvents, data)\n            .then((r) => r.events);\n    }\n\n    /**\n     * Reads all related events given a known eventId.\n     * @param eventId The id of the parent event to be read.\n     * @param roomId The room to look within. When undefined, the user's currently\n     * viewed room.\n     * @param relationType The relationship type of child events to search for.\n     * When undefined, all relations are returned.\n     * @param eventType The event type of child events to search for. When undefined,\n     * all related events are returned.\n     * @param limit The maximum number of events to retrieve per room. If not\n     * supplied, the server will apply a default limit.\n     * @param from The pagination token to start returning results from, as\n     * received from a previous call. If not supplied, results start at the most\n     * recent topological event known to the server.\n     * @param to The pagination token to stop returning results at. If not\n     * supplied, results continue up to limit or until there are no more events.\n     * @param direction The direction to search for according to MSC3715.\n     * @returns Resolves to the room relations.\n     */\n    public async readEventRelations(\n        eventId: string,\n        roomId?: string,\n        relationType?: string,\n        eventType?: string,\n        limit?: number,\n        from?: string,\n        to?: string,\n        direction?: \"f\" | \"b\",\n    ): Promise<IReadRelationsFromWidgetResponseData> {\n        const versions = await this.getClientVersions();\n        if (!versions.includes(UnstableApiVersion.MSC3869)) {\n            throw new Error(\"The read_relations action is not supported by the client.\");\n        }\n\n        const data: IReadRelationsFromWidgetRequestData = {\n            event_id: eventId,\n            rel_type: relationType,\n            event_type: eventType,\n            room_id: roomId,\n            to,\n            from,\n            limit,\n            direction,\n        };\n\n        return this.transport.send<IReadRelationsFromWidgetRequestData, IReadRelationsFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.MSC3869ReadRelations,\n            data,\n        );\n    }\n\n    public readStateEvents(\n        eventType: string,\n        limit?: number,\n        stateKey?: string,\n        roomIds?: (string | Symbols.AnyRoom)[],\n    ): Promise<IRoomEvent[]> {\n        const data: IReadEventFromWidgetRequestData = {\n            type: eventType,\n            state_key: stateKey === undefined ? true : stateKey,\n        };\n        if (limit !== undefined) {\n            data.limit = limit;\n        }\n        if (roomIds) {\n            if (roomIds.includes(Symbols.AnyRoom)) {\n                data.room_ids = Symbols.AnyRoom;\n            } else {\n                data.room_ids = roomIds;\n            }\n        }\n        return this.transport\n            .send<\n                IReadEventFromWidgetRequestData,\n                IReadEventFromWidgetResponseData\n            >(WidgetApiFromWidgetAction.MSC2876ReadEvents, data)\n            .then((r) => r.events);\n    }\n\n    /**\n     * Sets a button as disabled or enabled on the modal widget. Buttons are enabled by default.\n     * @param {ModalButtonID} buttonId The button ID to enable/disable.\n     * @param {boolean} isEnabled Whether or not the button is enabled.\n     * @returns {Promise<void>} Resolves when complete.\n     * @throws Throws if the button cannot be disabled, or the client refuses to disable the button.\n     */\n    public setModalButtonEnabled(buttonId: ModalButtonID, isEnabled: boolean): Promise<void> {\n        if (buttonId === BuiltInModalButtonID.Close) {\n            throw new Error(\"The close button cannot be disabled\");\n        }\n        return this.transport\n            .send<ISetModalButtonEnabledActionRequestData>(WidgetApiFromWidgetAction.SetModalButtonEnabled, {\n                button: buttonId,\n                enabled: isEnabled,\n            })\n            .then();\n    }\n\n    /**\n     * Attempts to navigate the client to the given URI. This can only be called with Matrix URIs\n     * (currently only matrix.to, but in future a Matrix URI scheme will be defined).\n     * @param {string} uri The URI to navigate to.\n     * @returns {Promise<void>} Resolves when complete.\n     * @throws Throws if the URI is invalid or cannot be processed.\n     * @deprecated This currently relies on an unstable MSC (MSC2931).\n     */\n    public navigateTo(uri: string): Promise<void> {\n        if (!uri || !uri.startsWith(\"https://matrix.to/#\")) {\n            throw new Error(\"Invalid matrix.to URI\");\n        }\n\n        return this.transport\n            .send<INavigateActionRequestData>(WidgetApiFromWidgetAction.MSC2931Navigate, { uri })\n            .then();\n    }\n\n    /**\n     * Starts watching for TURN servers, yielding an initial set of credentials as soon as possible,\n     * and thereafter yielding new credentials whenever the previous ones expire.\n     * @yields {ITurnServer} The TURN server URIs and credentials currently available to the widget.\n     */\n    public async *getTurnServers(): AsyncGenerator<ITurnServer> {\n        let setTurnServer: (server: ITurnServer) => void;\n\n        const onUpdateTurnServers = async (ev: CustomEvent<IUpdateTurnServersRequest>): Promise<void> => {\n            ev.preventDefault();\n            setTurnServer(ev.detail.data);\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(ev.detail, {});\n        };\n\n        // Start listening for updates before we even start watching, to catch\n        // TURN data that is sent immediately\n        this.on(`action:${WidgetApiToWidgetAction.UpdateTurnServers}`, onUpdateTurnServers);\n\n        // Only send the 'watch' action if we aren't already watching\n        if (this.turnServerWatchers === 0) {\n            try {\n                await this.transport.send<IWidgetApiRequestEmptyData>(WidgetApiFromWidgetAction.WatchTurnServers, {});\n            } catch (e) {\n                this.off(`action:${WidgetApiToWidgetAction.UpdateTurnServers}`, onUpdateTurnServers);\n                throw e;\n            }\n        }\n        this.turnServerWatchers++;\n\n        try {\n            // Watch for new data indefinitely (until this generator's return method is called)\n            while (true) {\n                yield await new Promise<ITurnServer>((resolve) => (setTurnServer = resolve));\n            }\n        } finally {\n            // The loop was broken by the caller - clean up\n            this.off(`action:${WidgetApiToWidgetAction.UpdateTurnServers}`, onUpdateTurnServers);\n\n            // Since sending the 'unwatch' action will end updates for all other\n            // consumers, only send it if we're the only consumer remaining\n            this.turnServerWatchers--;\n            if (this.turnServerWatchers === 0) {\n                await this.transport.send<IWidgetApiRequestEmptyData>(WidgetApiFromWidgetAction.UnwatchTurnServers, {});\n            }\n        }\n    }\n\n    /**\n     * Search for users in the user directory.\n     * @param searchTerm The term to search for.\n     * @param limit The maximum number of results to return. If not supplied, the\n     * @returns Resolves to the search results.\n     */\n    public async searchUserDirectory(\n        searchTerm: string,\n        limit?: number,\n    ): Promise<IUserDirectorySearchFromWidgetResponseData> {\n        const versions = await this.getClientVersions();\n        if (!versions.includes(UnstableApiVersion.MSC3973)) {\n            throw new Error(\"The user_directory_search action is not supported by the client.\");\n        }\n\n        const data: IUserDirectorySearchFromWidgetRequestData = {\n            search_term: searchTerm,\n            limit,\n        };\n\n        return this.transport.send<\n            IUserDirectorySearchFromWidgetRequestData,\n            IUserDirectorySearchFromWidgetResponseData\n        >(WidgetApiFromWidgetAction.MSC3973UserDirectorySearch, data);\n    }\n\n    /**\n     * Get the config for the media repository.\n     * @returns Promise which resolves with an object containing the config.\n     */\n    public async getMediaConfig(): Promise<IGetMediaConfigActionFromWidgetResponseData> {\n        const versions = await this.getClientVersions();\n        if (!versions.includes(UnstableApiVersion.MSC4039)) {\n            throw new Error(\"The get_media_config action is not supported by the client.\");\n        }\n\n        const data: IGetMediaConfigActionFromWidgetRequestData = {};\n\n        return this.transport.send<\n            IGetMediaConfigActionFromWidgetRequestData,\n            IGetMediaConfigActionFromWidgetResponseData\n        >(WidgetApiFromWidgetAction.MSC4039GetMediaConfigAction, data);\n    }\n\n    /**\n     * Upload a file to the media repository on the homeserver.\n     * @param file - The object to upload. Something that can be sent to\n     *               XMLHttpRequest.send (typically a File).\n     * @returns Resolves to the location of the uploaded file.\n     */\n    public async uploadFile(file: XMLHttpRequestBodyInit): Promise<IUploadFileActionFromWidgetResponseData> {\n        const versions = await this.getClientVersions();\n        if (!versions.includes(UnstableApiVersion.MSC4039)) {\n            throw new Error(\"The upload_file action is not supported by the client.\");\n        }\n\n        const data: IUploadFileActionFromWidgetRequestData = {\n            file,\n        };\n\n        return this.transport.send<IUploadFileActionFromWidgetRequestData, IUploadFileActionFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.MSC4039UploadFileAction,\n            data,\n        );\n    }\n\n    /**\n     * Download a file from the media repository on the homeserver.\n     * @param contentUri - MXC URI of the file to download.\n     * @returns Resolves to the contents of the file.\n     */\n    public async downloadFile(contentUri: string): Promise<IDownloadFileActionFromWidgetResponseData> {\n        const versions = await this.getClientVersions();\n        if (!versions.includes(UnstableApiVersion.MSC4039)) {\n            throw new Error(\"The download_file action is not supported by the client.\");\n        }\n\n        const data: IDownloadFileActionFromWidgetRequestData = {\n            content_uri: contentUri,\n        };\n\n        return this.transport.send<IDownloadFileActionFromWidgetRequestData, IDownloadFileActionFromWidgetResponseData>(\n            WidgetApiFromWidgetAction.MSC4039DownloadFileAction,\n            data,\n        );\n    }\n\n    /**\n     * Starts the communication channel. This should be done early to ensure\n     * that messages are not missed. Communication can only be stopped by the client.\n     */\n    public start(): void {\n        this.transport.start();\n        this.getClientVersions().then((v) => {\n            if (v.includes(UnstableApiVersion.MSC2974)) {\n                this.supportsMSC2974Renegotiate = true;\n            }\n        });\n    }\n\n    private handleMessage(ev: CustomEvent<IWidgetApiRequest>): void | Promise<void> {\n        const actionEv = new CustomEvent(`action:${ev.detail.action}`, {\n            detail: ev.detail,\n            cancelable: true,\n        });\n        this.emit(`action:${ev.detail.action}`, actionEv);\n        if (!actionEv.defaultPrevented) {\n            switch (ev.detail.action) {\n                case WidgetApiToWidgetAction.SupportedApiVersions:\n                    return this.replyVersions(<ISupportedVersionsActionRequest>ev.detail);\n                case WidgetApiToWidgetAction.Capabilities:\n                    return this.handleCapabilities(<ICapabilitiesActionRequest>ev.detail);\n                case WidgetApiToWidgetAction.UpdateVisibility:\n                    return this.transport.reply(ev.detail, <IWidgetApiRequestEmptyData>{}); // ack to avoid error spam\n                case WidgetApiToWidgetAction.NotifyCapabilities:\n                    return this.transport.reply(ev.detail, <IWidgetApiRequestEmptyData>{}); // ack to avoid error spam\n                default:\n                    return this.transport.reply(ev.detail, <IWidgetApiErrorResponseData>{\n                        error: {\n                            message: \"Unknown or unsupported action: \" + ev.detail.action,\n                        },\n                    });\n            }\n        }\n    }\n\n    private replyVersions(request: ISupportedVersionsActionRequest): void {\n        this.transport.reply<ISupportedVersionsActionResponseData>(request, {\n            supported_versions: CurrentApiVersions,\n        });\n    }\n\n    public getClientVersions(): Promise<ApiVersion[]> {\n        if (Array.isArray(this.cachedClientVersions)) {\n            return Promise.resolve(this.cachedClientVersions);\n        }\n\n        return this.transport\n            .send<IWidgetApiRequestEmptyData, ISupportedVersionsActionResponseData>(\n                WidgetApiFromWidgetAction.SupportedApiVersions,\n                {},\n            )\n            .then((r) => {\n                this.cachedClientVersions = r.supported_versions;\n                return r.supported_versions;\n            })\n            .catch((e) => {\n                console.warn(\"non-fatal error getting supported client versions: \", e);\n                return [];\n            });\n    }\n\n    private handleCapabilities(request: ICapabilitiesActionRequest): void | Promise<void> {\n        if (this.capabilitiesFinished) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {\n                    message: \"Capability negotiation already completed\",\n                },\n            });\n        }\n\n        // See if we can expect a capabilities notification or not\n        return this.getClientVersions().then((v) => {\n            if (v.includes(UnstableApiVersion.MSC2871)) {\n                this.once(\n                    `action:${WidgetApiToWidgetAction.NotifyCapabilities}`,\n                    (ev: CustomEvent<INotifyCapabilitiesActionRequest>) => {\n                        this.approvedCapabilities = ev.detail.data.approved;\n                        this.emit(\"ready\");\n                    },\n                );\n            } else {\n                // if we can't expect notification, we're as done as we can be\n                this.emit(\"ready\");\n            }\n\n            // in either case, reply to that capabilities request\n            this.capabilitiesFinished = true;\n            return this.transport.reply<ICapabilitiesActionResponseData>(request, {\n                capabilities: this.requestedCapabilities,\n            });\n        });\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAgBA,IAAAA,OAAA,GAAAC,OAAA;AAKA,IAAAC,mBAAA,GAAAD,OAAA;AAKA,IAAAE,WAAA,GAAAF,OAAA;AAQA,IAAAG,qBAAA,GAAAH,OAAA;AACA,IAAAI,gBAAA,GAAAJ,OAAA;AAIA,IAAAK,gBAAA,GAAAL,OAAA;AAOA,IAAAM,WAAA,GAAAN,OAAA;AACA,IAAAO,mBAAA,GAAAP,OAAA;AAcA,IAAAQ,sBAAA,GAAAR,OAAA;AAUA,IAAAS,QAAA,GAAAT,OAAA;AAAoC,SAAAU,oBAAA;EAAA;;EAtEpC;EAAAA,mBAAA,YAAAA,oBAAA;IAAA,OAAAC,OAAA;EAAA;EAAA,IAAAA,OAAA;IAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA;IAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA;IAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA;MAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA;IAAA;IAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA;IAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA;IAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA;IAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA;EAAA,SAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA;IAAA,OAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA;MAAAE,KAAA,EAAAA,KAAA;MAAAU,UAAA;MAAAC,YAAA;MAAAC,QAAA;IAAA,IAAAf,GAAA,CAAAC,GAAA;EAAA;EAAA;IAAAW,MAAA;EAAA,SAAAI,GAAA;IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA;MAAA,OAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA;IAAA;EAAA;EAAA,SAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA;IAAA,IAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA;MAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA;MAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA;IAAA,OAAAtB,cAAA,CAAAyB,SAAA;MAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA;IAAA,IAAAF,SAAA;EAAA;EAAA,SAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA;IAAA;MAAA;QAAAC,IAAA;QAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA;MAAA;IAAA,SAAAf,GAAA;MAAA;QAAAgB,IAAA;QAAAD,GAAA,EAAAf;MAAA;IAAA;EAAA;EAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA;EAAA,IAAAiB,gBAAA;EAAA,SAAAX,UAAA;EAAA,SAAAY,kBAAA;EAAA,SAAAC,2BAAA;EAAA,IAAAC,iBAAA;EAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA;IAAA;EAAA;EAAA,IAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA;IAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA;EAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA;EAAA,IAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA;EAAA,SAAAM,sBAAA/C,SAAA;IAAA,4BAAAgD,OAAA,WAAAC,MAAA;MAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA;QAAA,YAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA;MAAA;IAAA;EAAA;EAAA,SAAAgB,cAAAvB,SAAA,EAAAwB,WAAA;IAAA,SAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA;MAAA,IAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA;MAAA,gBAAAqB,MAAA,CAAApB,IAAA;QAAA,IAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA;UAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA;QAAA,OAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA;UAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA;QAAA,aAAAnC,GAAA;UAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA;QAAA,KAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA;UAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA;QAAA,aAAAK,KAAA;UAAA,OAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA;QAAA;MAAA;MAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA;IAAA;IAAA,IAAA4B,eAAA;IAAA5D,cAAA;MAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA;QAAA,SAAA6B,2BAAA;UAAA,WAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA;YAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA;UAAA;QAAA;QAAA,OAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA;MAAA;IAAA;EAAA;EAAA,SAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA;IAAA,IAAAmC,KAAA;IAAA,iBAAAhB,MAAA,EAAAd,GAAA;MAAA,oBAAA8B,KAAA,YAAAC,KAAA;MAAA,oBAAAD,KAAA;QAAA,gBAAAhB,MAAA,QAAAd,GAAA;QAAA,OAAAgC,UAAA;MAAA;MAAA,KAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA;QAAA,IAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA;QAAA,IAAAA,QAAA;UAAA,IAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA;UAAA,IAAAuC,cAAA;YAAA,IAAAA,cAAA,KAAA/B,gBAAA;YAAA,OAAA+B,cAAA;UAAA;QAAA;QAAA,eAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA;UAAA,yBAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA;UAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA;QAAA,oBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA;QAAA8B,KAAA;QAAA,IAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA;QAAA,iBAAA0B,MAAA,CAAApB,IAAA;UAAA,IAAA6B,KAAA,GAAAnC,OAAA,CAAA6C,IAAA,mCAAAnB,MAAA,CAAArB,GAAA,KAAAG,gBAAA;UAAA;YAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA;YAAAwC,IAAA,EAAA7C,OAAA,CAAA6C;UAAA;QAAA;QAAA,YAAAnB,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA;MAAA;IAAA;EAAA;EAAA,SAAAmC,oBAAAF,QAAA,EAAAtC,OAAA;IAAA,IAAA8C,UAAA,GAAA9C,OAAA,CAAAmB,MAAA;MAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAiE,UAAA;IAAA,IAAAC,SAAA,KAAA5B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAzD,QAAA,eAAAmB,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA2B,UAAA,KAAA9C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,uCAAAF,UAAA,iBAAAtC,gBAAA;IAAA,IAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA;IAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA;IAAA,IAAAyC,IAAA,GAAAvB,MAAA,CAAArB,GAAA;IAAA,OAAA4C,IAAA,GAAAA,IAAA,CAAAJ,IAAA,IAAA7C,OAAA,CAAAsC,QAAA,CAAAY,UAAA,IAAAD,IAAA,CAAAxE,KAAA,EAAAuB,OAAA,CAAAmD,IAAA,GAAAb,QAAA,CAAAc,OAAA,eAAApD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,GAAA/C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAAyC,IAAA,IAAAjD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,sCAAAhD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA;EAAA;EAAA,SAAA6C,aAAAC,IAAA;IAAA,IAAAC,KAAA;MAAAC,MAAA,EAAAF,IAAA;IAAA;IAAA,KAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA;EAAA;EAAA,SAAAO,cAAAP,KAAA;IAAA,IAAA7B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA;IAAArC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAkD,KAAA,CAAAQ,UAAA,GAAArC,MAAA;EAAA;EAAA,SAAAzB,QAAAN,WAAA;IAAA,KAAAiE,UAAA;MAAAJ,MAAA;IAAA,IAAA7D,WAAA,CAAAuB,OAAA,CAAAmC,YAAA,cAAAW,KAAA;EAAA;EAAA,SAAAjD,OAAAkD,QAAA;IAAA,IAAAA,QAAA;MAAA,IAAAC,cAAA,GAAAD,QAAA,CAAArF,cAAA;MAAA,IAAAsF,cAAA,SAAAA,cAAA,CAAA3D,IAAA,CAAA0D,QAAA;MAAA,yBAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA;MAAA,KAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA;QAAA,IAAAC,CAAA;UAAAlB,IAAA,YAAAA,KAAA;YAAA,SAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAjG,MAAA,CAAAoC,IAAA,CAAA0D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA1E,KAAA,GAAAwF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAN,IAAA,OAAAM,IAAA;YAAA,OAAAA,IAAA,CAAA1E,KAAA,GAAAsE,SAAA,EAAAI,IAAA,CAAAN,IAAA,OAAAM,IAAA;UAAA;QAAA,OAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA;MAAA;IAAA;IAAA;MAAAA,IAAA,EAAAd;IAAA;EAAA;EAAA,SAAAA,WAAA;IAAA;MAAA5D,KAAA,EAAAsE,SAAA;MAAAF,IAAA;IAAA;EAAA;EAAA,OAAApC,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA;IAAAvC,KAAA,EAAAiC,0BAAA;IAAAtB,YAAA;EAAA,IAAAf,cAAA,CAAAqC,0BAAA;IAAAjC,KAAA,EAAAgC,iBAAA;IAAArB,YAAA;EAAA,IAAAqB,iBAAA,CAAA6D,WAAA,GAAApF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAwG,mBAAA,aAAAC,MAAA;IAAA,IAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA;IAAA,SAAAD,IAAA,KAAAA,IAAA,KAAAhE,iBAAA,6BAAAgE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA;EAAA,GAAA5G,OAAA,CAAA6G,IAAA,aAAAJ,MAAA;IAAA,OAAAvG,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4G,cAAA,CAAAL,MAAA,EAAA9D,0BAAA,KAAA8D,MAAA,CAAAM,SAAA,GAAApE,0BAAA,EAAAxB,MAAA,CAAAsF,MAAA,EAAAxF,iBAAA,yBAAAwF,MAAA,CAAAtG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAwD,MAAA;EAAA,GAAAzG,OAAA,CAAAgH,KAAA,aAAA1E,GAAA;IAAA;MAAAwB,OAAA,EAAAxB;IAAA;EAAA,GAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA;IAAA;EAAA,IAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAiH,KAAA,aAAAxF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA;IAAA,WAAAA,WAAA,KAAAA,WAAA,GAAA2D,OAAA;IAAA,IAAAC,IAAA,OAAA7D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA;IAAA,OAAAvD,OAAA,CAAAwG,mBAAA,CAAA9E,OAAA,IAAAyF,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAArB,IAAA,WAAAH,MAAA;MAAA,OAAAA,MAAA,CAAAkB,IAAA,GAAAlB,MAAA,CAAAlD,KAAA,GAAAyG,IAAA,CAAA/B,IAAA;IAAA;EAAA,GAAAlC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA;IAAA;EAAA,IAAAM,MAAA,CAAA8B,EAAA;IAAA;EAAA,IAAAjD,OAAA,CAAAoH,IAAA,aAAAC,GAAA;IAAA,IAAAC,MAAA,GAAApH,MAAA,CAAAmH,GAAA;MAAAD,IAAA;IAAA,SAAA5G,GAAA,IAAA8G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAtF,GAAA;IAAA,OAAA4G,IAAA,CAAAG,OAAA,aAAAnC,KAAA;MAAA,OAAAgC,IAAA,CAAAf,MAAA;QAAA,IAAA7F,GAAA,GAAA4G,IAAA,CAAAI,GAAA;QAAA,IAAAhH,GAAA,IAAA8G,MAAA,SAAAlC,IAAA,CAAA1E,KAAA,GAAAF,GAAA,EAAA4E,IAAA,CAAAN,IAAA,OAAAM,IAAA;MAAA;MAAA,OAAAA,IAAA,CAAAN,IAAA,OAAAM,IAAA;IAAA;EAAA,GAAApF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA;IAAAwG,WAAA,EAAAzE,OAAA;IAAA+D,KAAA,WAAAA,MAAAwB,aAAA;MAAA,SAAAC,IAAA,WAAAtC,IAAA,WAAAV,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAA0C,SAAA,OAAAa,UAAA,CAAA1C,OAAA,CAAA4C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAvH,MAAA,CAAAoC,IAAA,OAAAoE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA5B,SAAA;IAAA;IAAA6C,IAAA,WAAAA,KAAA;MAAA,KAAA/C,IAAA;MAAA,IAAAgD,UAAA,QAAAjC,UAAA,IAAAG,UAAA;MAAA,gBAAA8B,UAAA,CAAAvF,IAAA,QAAAuF,UAAA,CAAAxF,GAAA;MAAA,YAAAyF,IAAA;IAAA;IAAAnD,iBAAA,WAAAA,kBAAAoD,SAAA;MAAA,SAAAlD,IAAA,QAAAkD,SAAA;MAAA,IAAA/F,OAAA;MAAA,SAAAgG,OAAAC,GAAA,EAAAC,MAAA;QAAA,OAAAxE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA0F,SAAA,EAAA/F,OAAA,CAAAmD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAlG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,KAAAmD,MAAA;MAAA;MAAA,SAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA;QAAA,IAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA;UAAA3C,MAAA,GAAA6B,KAAA,CAAAQ,UAAA;QAAA,eAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA;QAAA,IAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA;UAAA,IAAAU,QAAA,GAAAhI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA;YAAA6C,UAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA;UAAA,IAAA4C,QAAA,IAAAC,UAAA;YAAA,SAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA;YAAA,SAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA;UAAA,WAAAyC,QAAA;YAAA,SAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA;UAAA;YAAA,KAAA2C,UAAA,YAAAhE,KAAA;YAAA,SAAAqD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA;UAAA;QAAA;MAAA;IAAA;IAAAd,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA;MAAA,SAAAgE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA;QAAA,IAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA;QAAA,IAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAtH,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA;UAAA,IAAA2C,YAAA,GAAA9C,KAAA;UAAA;QAAA;MAAA;MAAA8C,YAAA,iBAAA/F,IAAA,mBAAAA,IAAA,KAAA+F,YAAA,CAAA7C,MAAA,IAAAnD,GAAA,IAAAA,GAAA,IAAAgG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA;MAAA,IAAA3E,MAAA,GAAA2E,YAAA,GAAAA,YAAA,CAAAtC,UAAA;MAAA,OAAArC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAgG,YAAA,SAAAlF,MAAA,gBAAAgC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAlD,gBAAA,SAAA8F,QAAA,CAAA5E,MAAA;IAAA;IAAA4E,QAAA,WAAAA,SAAA5E,MAAA,EAAAiC,QAAA;MAAA,gBAAAjC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA;MAAA,mBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA6C,IAAA,GAAAzB,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAwF,IAAA,QAAAzF,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAgC,IAAA,yBAAAzB,MAAA,CAAApB,IAAA,IAAAqD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAAnD,gBAAA;IAAA;IAAA+F,MAAA,WAAAA,OAAA7C,UAAA;MAAA,SAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA;QAAA,IAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA;QAAA,IAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAA/C,gBAAA;MAAA;IAAA;IAAA,kBAAAgG,OAAAhD,MAAA;MAAA,SAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA;QAAA,IAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA;QAAA,IAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA;UAAA,IAAA9B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA;UAAA,gBAAArC,MAAA,CAAApB,IAAA;YAAA,IAAAmG,MAAA,GAAA/E,MAAA,CAAArB,GAAA;YAAAyD,aAAA,CAAAP,KAAA;UAAA;UAAA,OAAAkD,MAAA;QAAA;MAAA;MAAA,UAAArE,KAAA;IAAA;IAAAsE,aAAA,WAAAA,cAAAzC,QAAA,EAAAf,UAAA,EAAAE,OAAA;MAAA,YAAAd,QAAA;QAAAzD,QAAA,EAAAkC,MAAA,CAAAkD,QAAA;QAAAf,UAAA,EAAAA,UAAA;QAAAE,OAAA,EAAAA;MAAA,mBAAAjC,MAAA,UAAAd,GAAA,GAAA0C,SAAA,GAAAvC,gBAAA;IAAA;EAAA,GAAAzC,OAAA;AAAA;AAAA,SAAA4I,mBAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,EAAAvI,GAAA,EAAA8B,GAAA;EAAA;IAAA,IAAA4C,IAAA,GAAA2D,GAAA,CAAArI,GAAA,EAAA8B,GAAA;IAAA,IAAA5B,KAAA,GAAAwE,IAAA,CAAAxE,KAAA;EAAA,SAAAuD,KAAA;IAAAP,MAAA,CAAAO,KAAA;IAAA;EAAA;EAAA,IAAAiB,IAAA,CAAAJ,IAAA;IAAArB,OAAA,CAAA/C,KAAA;EAAA;IAAAwG,OAAA,CAAAzD,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,CAAA+E,KAAA,EAAAC,MAAA;EAAA;AAAA;AAAA,SAAAC,kBAAA3G,EAAA;EAAA;IAAA,IAAAV,IAAA;MAAAsH,IAAA,GAAAC,SAAA;IAAA,WAAAhC,OAAA,WAAAzD,OAAA,EAAAC,MAAA;MAAA,IAAAmF,GAAA,GAAAxG,EAAA,CAAA8G,KAAA,CAAAxH,IAAA,EAAAsH,IAAA;MAAA,SAAAH,MAAApI,KAAA;QAAAkI,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,UAAArI,KAAA;MAAA;MAAA,SAAAqI,OAAAxH,GAAA;QAAAqH,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,WAAAxH,GAAA;MAAA;MAAAuH,KAAA,CAAA9D,SAAA;IAAA;EAAA;AAAA;AAAA,SAAAoE,QAAA9B,MAAA,EAAA+B,cAAA;EAAA,IAAAjC,IAAA,GAAAlH,MAAA,CAAAkH,IAAA,CAAAE,MAAA;EAAA,IAAApH,MAAA,CAAAoJ,qBAAA;IAAA,IAAAC,OAAA,GAAArJ,MAAA,CAAAoJ,qBAAA,CAAAhC,MAAA;IAAA+B,cAAA,KAAAE,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA;MAAA,OAAAvJ,MAAA,CAAAwJ,wBAAA,CAAApC,MAAA,EAAAmC,GAAA,EAAArI,UAAA;IAAA,KAAAgG,IAAA,CAAAtB,IAAA,CAAAqD,KAAA,CAAA/B,IAAA,EAAAmC,OAAA;EAAA;EAAA,OAAAnC,IAAA;AAAA;AAAA,SAAAuC,cAAAC,MAAA;EAAA,SAAAtD,CAAA,MAAAA,CAAA,GAAA4C,SAAA,CAAA7C,MAAA,EAAAC,CAAA;IAAA,IAAAuD,MAAA,WAAAX,SAAA,CAAA5C,CAAA,IAAA4C,SAAA,CAAA5C,CAAA;IAAAA,CAAA,OAAA8C,OAAA,CAAAlJ,MAAA,CAAA2J,MAAA,OAAA1G,OAAA,WAAA3C,GAAA;MAAAsJ,eAAA,CAAAF,MAAA,EAAApJ,GAAA,EAAAqJ,MAAA,CAAArJ,GAAA;IAAA,KAAAN,MAAA,CAAA6J,yBAAA,GAAA7J,MAAA,CAAA8J,gBAAA,CAAAJ,MAAA,EAAA1J,MAAA,CAAA6J,yBAAA,CAAAF,MAAA,KAAAT,OAAA,CAAAlJ,MAAA,CAAA2J,MAAA,GAAA1G,OAAA,WAAA3C,GAAA;MAAAN,MAAA,CAAAI,cAAA,CAAAsJ,MAAA,EAAApJ,GAAA,EAAAN,MAAA,CAAAwJ,wBAAA,CAAAG,MAAA,EAAArJ,GAAA;IAAA;EAAA;EAAA,OAAAoJ,MAAA;AAAA;AAAA,SAAAE,gBAAAvJ,GAAA,EAAAC,GAAA,EAAAE,KAAA;EAAAF,GAAA,GAAAyJ,cAAA,CAAAzJ,GAAA;EAAA,IAAAA,GAAA,IAAAD,GAAA;IAAAL,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA;MAAAE,KAAA,EAAAA,KAAA;MAAAU,UAAA;MAAAC,YAAA;MAAAC,QAAA;IAAA;EAAA;IAAAf,GAAA,CAAAC,GAAA,IAAAE,KAAA;EAAA;EAAA,OAAAH,GAAA;AAAA;AAAA,SAAA2J,kBAAAN,MAAA,EAAAO,KAAA;EAAA,SAAA7D,CAAA,MAAAA,CAAA,GAAA6D,KAAA,CAAA9D,MAAA,EAAAC,CAAA;IAAA,IAAA8D,UAAA,GAAAD,KAAA,CAAA7D,CAAA;IAAA8D,UAAA,CAAAhJ,UAAA,GAAAgJ,UAAA,CAAAhJ,UAAA;IAAAgJ,UAAA,CAAA/I,YAAA;IAAA,eAAA+I,UAAA,EAAAA,UAAA,CAAA9I,QAAA;IAAApB,MAAA,CAAAI,cAAA,CAAAsJ,MAAA,EAAAK,cAAA,CAAAG,UAAA,CAAA5J,GAAA,GAAA4J,UAAA;EAAA;AAAA;AAAA,SAAAC,aAAAC,WAAA,EAAAC,UAAA,EAAAC,WAAA;EAAA,IAAAD,UAAA,EAAAL,iBAAA,CAAAI,WAAA,CAAAnK,SAAA,EAAAoK,UAAA;EAAA,IAAAC,WAAA,EAAAN,iBAAA,CAAAI,WAAA,EAAAE,WAAA;EAAAtK,MAAA,CAAAI,cAAA,CAAAgK,WAAA;IAAAhJ,QAAA;EAAA;EAAA,OAAAgJ,WAAA;AAAA;AAAA,SAAAL,eAAA3H,GAAA;EAAA,IAAA9B,GAAA,GAAAiK,YAAA,CAAAnI,GAAA;EAAA,OAAAuB,OAAA,CAAArD,GAAA,iBAAAA,GAAA,GAAAkK,MAAA,CAAAlK,GAAA;AAAA;AAAA,SAAAiK,aAAAE,KAAA,EAAAC,IAAA;EAAA,IAAA/G,OAAA,CAAA8G,KAAA,kBAAAA,KAAA,kBAAAA,KAAA;EAAA,IAAAE,IAAA,GAAAF,KAAA,CAAA/J,MAAA,CAAAkK,WAAA;EAAA,IAAAD,IAAA,KAAA7F,SAAA;IAAA,IAAA+F,GAAA,GAAAF,IAAA,CAAArI,IAAA,CAAAmI,KAAA,EAAAC,IAAA;IAAA,IAAA/G,OAAA,CAAAkH,GAAA,uBAAAA,GAAA;IAAA,UAAA9F,SAAA;EAAA;EAAA,QAAA2F,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA;AAAA;AAAA,SAAAM,gBAAAC,QAAA,EAAAZ,WAAA;EAAA,MAAAY,QAAA,YAAAZ,WAAA;IAAA,UAAArF,SAAA;EAAA;AAAA;AAAA,SAAAkG,UAAAC,QAAA,EAAAC,UAAA;EAAA,WAAAA,UAAA,mBAAAA,UAAA;IAAA,UAAApG,SAAA;EAAA;EAAAmG,QAAA,CAAAjL,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAqJ,UAAA,IAAAA,UAAA,CAAAlL,SAAA;IAAAwG,WAAA;MAAAjG,KAAA,EAAA0K,QAAA;MAAA9J,QAAA;MAAAD,YAAA;IAAA;EAAA;EAAAnB,MAAA,CAAAI,cAAA,CAAA8K,QAAA;IAAA9J,QAAA;EAAA;EAAA,IAAA+J,UAAA,EAAAC,eAAA,CAAAF,QAAA,EAAAC,UAAA;AAAA;AAAA,SAAAE,aAAAC,OAAA;EAAA,IAAAC,yBAAA,GAAAC,yBAAA;EAAA,gBAAAC,qBAAA;IAAA,IAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA;MAAA5H,MAAA;IAAA,IAAA6H,yBAAA;MAAA,IAAAK,SAAA,GAAAD,eAAA,OAAAlF,WAAA;MAAA/C,MAAA,GAAAmI,OAAA,CAAAC,SAAA,CAAAJ,KAAA,EAAA1C,SAAA,EAAA4C,SAAA;IAAA;MAAAlI,MAAA,GAAAgI,KAAA,CAAAzC,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA+C,0BAAA,OAAArI,MAAA;EAAA;AAAA;AAAA,SAAAqI,2BAAAtK,IAAA,EAAAa,IAAA;EAAA,IAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA;IAAA,OAAAA,IAAA;EAAA,WAAAA,IAAA;IAAA,UAAAyC,SAAA;EAAA;EAAA,OAAAiH,sBAAA,CAAAvK,IAAA;AAAA;AAAA,SAAAuK,uBAAAvK,IAAA;EAAA,IAAAA,IAAA;IAAA,UAAAwK,cAAA;EAAA;EAAA,OAAAxK,IAAA;AAAA;AAAA,SAAAyK,iBAAAC,KAAA;EAAA,IAAAC,MAAA,UAAAC,GAAA,sBAAAA,GAAA,KAAAvH,SAAA;EAAAoH,gBAAA,YAAAA,iBAAAC,KAAA;IAAA,IAAAA,KAAA,cAAAG,iBAAA,CAAAH,KAAA,UAAAA,KAAA;IAAA,WAAAA,KAAA;MAAA,UAAApH,SAAA;IAAA;IAAA,WAAAqH,MAAA;MAAA,IAAAA,MAAA,CAAAG,GAAA,CAAAJ,KAAA,UAAAC,MAAA,CAAAI,GAAA,CAAAL,KAAA;MAAAC,MAAA,CAAAK,GAAA,CAAAN,KAAA,EAAAO,OAAA;IAAA;IAAA,SAAAA,QAAA;MAAA,OAAAC,UAAA,CAAAR,KAAA,EAAAnD,SAAA,EAAA2C,eAAA,OAAAlF,WAAA;IAAA;IAAAiG,OAAA,CAAAzM,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAqK,KAAA,CAAAlM,SAAA;MAAAwG,WAAA;QAAAjG,KAAA,EAAAkM,OAAA;QAAAxL,UAAA;QAAAE,QAAA;QAAAD,YAAA;MAAA;IAAA;IAAA,OAAAiK,eAAA,CAAAsB,OAAA,EAAAP,KAAA;EAAA;EAAA,OAAAD,gBAAA,CAAAC,KAAA;AAAA;AAAA,SAAAQ,WAAAC,MAAA,EAAA7D,IAAA,EAAAoD,KAAA;EAAA,IAAAX,yBAAA;IAAAmB,UAAA,GAAAd,OAAA,CAAAC,SAAA,CAAAe,IAAA;EAAA;IAAAF,UAAA,YAAAA,WAAAC,MAAA,EAAA7D,IAAA,EAAAoD,KAAA;MAAA,IAAAW,CAAA;MAAAA,CAAA,CAAAlH,IAAA,CAAAqD,KAAA,CAAA6D,CAAA,EAAA/D,IAAA;MAAA,IAAAqB,WAAA,GAAA2C,QAAA,CAAAF,IAAA,CAAA5D,KAAA,CAAA2D,MAAA,EAAAE,CAAA;MAAA,IAAA9B,QAAA,OAAAZ,WAAA;MAAA,IAAA+B,KAAA,EAAAf,eAAA,CAAAJ,QAAA,EAAAmB,KAAA,CAAAlM,SAAA;MAAA,OAAA+K,QAAA;IAAA;EAAA;EAAA,OAAA2B,UAAA,CAAA1D,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAwC,0BAAA;EAAA,WAAAK,OAAA,qBAAAA,OAAA,CAAAC,SAAA;EAAA,IAAAD,OAAA,CAAAC,SAAA,CAAAkB,IAAA;EAAA,WAAAC,KAAA;EAAA;IAAAC,OAAA,CAAAjN,SAAA,CAAAkN,OAAA,CAAA7K,IAAA,CAAAuJ,OAAA,CAAAC,SAAA,CAAAoB,OAAA;IAAA;EAAA,SAAAE,CAAA;IAAA;EAAA;AAAA;AAAA,SAAAd,kBAAAnK,EAAA;EAAA,OAAA4K,QAAA,CAAAM,QAAA,CAAA/K,IAAA,CAAAH,EAAA,EAAAmL,OAAA;AAAA;AAAA,SAAAlC,gBAAAmC,CAAA,EAAAC,CAAA;EAAApC,eAAA,GAAApL,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4G,cAAA,CAAAiG,IAAA,cAAAzB,gBAAAmC,CAAA,EAAAC,CAAA;IAAAD,CAAA,CAAA1G,SAAA,GAAA2G,CAAA;IAAA,OAAAD,CAAA;EAAA;EAAA,OAAAnC,eAAA,CAAAmC,CAAA,EAAAC,CAAA;AAAA;AAAA,SAAA7B,gBAAA4B,CAAA;EAAA5B,eAAA,GAAA3L,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4C,cAAA,CAAAiK,IAAA,cAAAlB,gBAAA4B,CAAA;IAAA,OAAAA,CAAA,CAAA1G,SAAA,IAAA7G,MAAA,CAAA4C,cAAA,CAAA2K,CAAA;EAAA;EAAA,OAAA5B,eAAA,CAAA4B,CAAA;AAAA;AAAA,SAAAE,qBAAAjN,KAAA;EAAA,WAAAkN,cAAA,CAAAlN,KAAA;AAAA;AAAA,SAAAmN,oBAAAxL,EAAA;EAAA;IAAA,WAAAyL,eAAA,CAAAzL,EAAA,CAAA8G,KAAA,OAAAD,SAAA;EAAA;AAAA;AAAA,SAAA4E,gBAAAjF,GAAA;EAAA,IAAAkF,KAAA,EAAAC,IAAA;EAAA,SAAAC,OAAAzN,GAAA,EAAA8B,GAAA;IAAA;MAAA,IAAAsB,MAAA,GAAAiF,GAAA,CAAArI,GAAA,EAAA8B,GAAA;QAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA;QAAAwN,UAAA,GAAAxN,KAAA,YAAAkN,cAAA;MAAA1G,OAAA,CAAAzD,OAAA,CAAAyK,UAAA,GAAAxN,KAAA,CAAAyN,CAAA,GAAAzN,KAAA,EAAAqD,IAAA,WAAAzB,GAAA;QAAA,IAAA4L,UAAA;UAAA,IAAAE,OAAA,gBAAA5N,GAAA;UAAA,KAAAE,KAAA,CAAA2N,CAAA,IAAA/L,GAAA,CAAAwC,IAAA,SAAAmJ,MAAA,CAAAG,OAAA,EAAA9L,GAAA;UAAAA,GAAA,GAAAuG,GAAA,CAAAuF,OAAA,EAAA9L,GAAA,EAAA5B,KAAA;QAAA;QAAA4N,MAAA,CAAA1K,MAAA,CAAAkB,IAAA,wBAAAxC,GAAA;MAAA,aAAAf,GAAA;QAAA0M,MAAA,UAAA1M,GAAA;MAAA;IAAA,SAAAA,GAAA;MAAA+M,MAAA,UAAA/M,GAAA;IAAA;EAAA;EAAA,SAAA+M,OAAA/L,IAAA,EAAA7B,KAAA;IAAA,QAAA6B,IAAA;MAAA;QAAAwL,KAAA,CAAAtK,OAAA;UAAA/C,KAAA,EAAAA,KAAA;UAAAoE,IAAA;QAAA;QAAA;MAAA;QAAAiJ,KAAA,CAAArK,MAAA,CAAAhD,KAAA;QAAA;MAAA;QAAAqN,KAAA,CAAAtK,OAAA;UAAA/C,KAAA,EAAAA,KAAA;UAAAoE,IAAA;QAAA;IAAA;IAAA,CAAAiJ,KAAA,GAAAA,KAAA,CAAA3I,IAAA,IAAA6I,MAAA,CAAAF,KAAA,CAAAvN,GAAA,EAAAuN,KAAA,CAAAzL,GAAA,IAAA0L,IAAA;EAAA;EAAA,KAAA3K,OAAA,aAAA7C,GAAA,EAAA8B,GAAA;IAAA,WAAA4E,OAAA,WAAAzD,OAAA,EAAAC,MAAA;MAAA,IAAA6K,OAAA;QAAA/N,GAAA,EAAAA,GAAA;QAAA8B,GAAA,EAAAA,GAAA;QAAAmB,OAAA,EAAAA,OAAA;QAAAC,MAAA,EAAAA,MAAA;QAAA0B,IAAA;MAAA;MAAA4I,IAAA,GAAAA,IAAA,GAAAA,IAAA,CAAA5I,IAAA,GAAAmJ,OAAA,IAAAR,KAAA,GAAAC,IAAA,GAAAO,OAAA,EAAAN,MAAA,CAAAzN,GAAA,EAAA8B,GAAA;IAAA;EAAA,wBAAAuG,GAAA;AAAA;AAAAiF,eAAA,CAAA3N,SAAA,sBAAAS,MAAA,IAAAA,MAAA,CAAAI,aAAA;EAAA;AAAA,GAAA8M,eAAA,CAAA3N,SAAA,CAAAiF,IAAA,aAAA9C,GAAA;EAAA,YAAAe,OAAA,SAAAf,GAAA;AAAA,GAAAwL,eAAA,CAAA3N,SAAA,sBAAAmC,GAAA;EAAA,YAAAe,OAAA,UAAAf,GAAA;AAAA,GAAAwL,eAAA,CAAA3N,SAAA,uBAAAmC,GAAA;EAAA,YAAAe,OAAA,WAAAf,GAAA;AAAA;AAAA,SAAAsL,eAAAlN,KAAA,EAAA8N,IAAA;EAAA,KAAAL,CAAA,GAAAzN,KAAA,OAAA2N,CAAA,GAAAG,IAAA;AAAA,EADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAkGaC,sBAAsB,0BAAAC,MAAA;EAAAvD,SAAA,CAAAsD,sBAAA,EAAAC,MAAA;EAAA,IAAAC,MAAA,GAAApD,YAAA,CAAAkD,sBAAA;EAK/B,SAAAA,uBACIG,OAAe,EACCC,IAAwC,EAC1D;IAAA,IAAAC,MAAA;IAAA7D,eAAA,OAAAwD,sBAAA;IACEK,MAAA,GAAAH,MAAA,CAAAnM,IAAA,OAAMoM,OAAO;IAAEE,MAAA,CAFCD,IAAwC,GAAxCA,IAAwC;IAAA,OAAAC,MAAA;EAG5D;EAAC,OAAAzE,YAAA,CAAAoE,sBAAA;AAAA,eAAArC,gBAAA,CAVuC/H,KAAK;AAajD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBArE,OAAA,CAAAyO,sBAAA,GAAAA,sBAAA;AAbaA,sBAAsB,CAEtBtO,SAAS,CAACyG,IAAI,GAFd6H,sBAAsB,CAEA7H,IAAI;AAAC,IA4B3BmI,SAAS,0BAAAC,aAAA;EAAA7D,SAAA,CAAA4D,SAAA,EAAAC,aAAA;EAAA,IAAAC,OAAA,GAAA1D,YAAA,CAAAwD,SAAA;EAUlB;AACJ;AACA;AACA;AACA;AACA;EACI,SAAAA,UAAA,EAGE;IAAA,IAAAG,MAAA;IAAA,IAFEC,QAAuB,GAAAjG,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAG,IAAI;IAAA,IACtBkG,YAA2B,GAAAlG,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAG,IAAI;IAAA+B,eAAA,OAAA8D,SAAA;IAE1CG,MAAA,GAAAD,OAAA,CAAAzM,IAAA;IAAQ0M,MAAA,CAFAE,YAA2B,GAA3BA,YAA2B;IAAAtF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA,2BAfR,KAAK;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA,iCACC,KAAK;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA,4BACI,EAAE;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA;IAAApF,eAAA,CAAAoC,sBAAA,CAAAgD,MAAA,yBAGnB,CAAC;IAa1B,IAAI,CAACG,MAAM,CAACC,MAAM,EAAE;MAChB,MAAM,IAAIjL,KAAK,CAAC,uEAAuE,CAAC;IAC5F;IACA6K,MAAA,CAAKK,SAAS,GAAG,IAAI/P,qBAAA,CAAAgQ,oBAAoB,CAAClQ,mBAAA,CAAAmQ,kBAAkB,CAACC,UAAU,EAAEP,QAAQ,EAAEE,MAAM,CAACC,MAAM,EAAED,MAAM,CAAC;IACzGH,MAAA,CAAKK,SAAS,CAACI,YAAY,GAAGP,YAAY;IAC1CF,MAAA,CAAKK,SAAS,CAACK,EAAE,CAAC,SAAS,EAAEV,MAAA,CAAKW,aAAa,CAAC9C,IAAI,CAAAb,sBAAA,CAAAgD,MAAA,EAAM,CAAC;IAAC,OAAAA,MAAA;EAChE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI7E,YAAA,CAAA0E,SAAA;IAAAvO,GAAA;IAAAE,KAAA,EAOA,SAAAoP,cAAqBC,UAAsB,EAAW;MAClD,IAAIC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,oBAAoB,CAAC,EAAE;QAC1C,OAAO,IAAI,CAACA,oBAAoB,CAACC,QAAQ,CAACJ,UAAU,CAAC;MACzD;MACA,OAAO,IAAI,CAACK,qBAAqB,CAACD,QAAQ,CAACJ,UAAU,CAAC;IAC1D;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAvP,GAAA;IAAAE,KAAA,EAOA,SAAA2P,kBAAyBN,UAAsB,EAAQ;MACnD,IAAI,IAAI,CAACO,oBAAoB,IAAI,CAAC,IAAI,CAACC,0BAA0B,EAAE;QAC/D,MAAM,IAAIlM,KAAK,CAAC,2CAA2C,CAAC;MAChE;MAEA,IAAI,CAAC+L,qBAAqB,CAACtK,IAAI,CAACiK,UAAU,CAAC;IAC/C;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAAvP,GAAA;IAAAE,KAAA,EAMA,SAAA8P,oBAA2BC,YAA0B,EAAQ;MAAA,IAAAC,MAAA;MACzDD,YAAY,CAACtN,OAAO,CAAC,UAACwN,GAAG;QAAA,OAAKD,MAAI,CAACL,iBAAiB,CAACM,GAAG,CAAC;MAAA,EAAC;IAC9D;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAAnQ,GAAA;IAAAE,KAAA,EAMA,SAAAkQ,iCAAwCC,MAAgC,EAAQ;MAC5E,IAAI,CAACR,iBAAiB,gCAAAS,MAAA,CAAgCD,MAAM,EAAG;IACnE;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAArQ,GAAA;IAAAE,KAAA,EAQA,SAAAqQ,6BAAoCC,SAAiB,EAAEC,QAAiB,EAAQ;MAC5E,IAAI,CAACZ,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACC,aAAa,CAACtR,sBAAA,CAAAuR,cAAc,CAACC,IAAI,EAAEL,SAAS,EAAEC,QAAQ,CAAC,CAACK,GAAG,CAAC;IAC7G;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAA9Q,GAAA;IAAAE,KAAA,EAQA,SAAA6Q,gCAAuCP,SAAiB,EAAEC,QAAiB,EAAQ;MAC/E,IAAI,CAACZ,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACC,aAAa,CAACtR,sBAAA,CAAAuR,cAAc,CAACI,OAAO,EAAER,SAAS,EAAEC,QAAQ,CAAC,CAACK,GAAG,CAAC;IAChH;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA9Q,GAAA;IAAAE,KAAA,EAMA,SAAA+Q,gCAAuCT,SAAiB,EAAQ;MAC5D,IAAI,CAACX,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACQ,gBAAgB,CAAC7R,sBAAA,CAAAuR,cAAc,CAACC,IAAI,EAAEL,SAAS,CAAC,CAACM,GAAG,CAAC;IACtG;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA9Q,GAAA;IAAAE,KAAA,EAMA,SAAAiR,mCAA0CX,SAAiB,EAAQ;MAC/D,IAAI,CAACX,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACQ,gBAAgB,CAAC7R,sBAAA,CAAAuR,cAAc,CAACI,OAAO,EAAER,SAAS,CAAC,CAACM,GAAG,CAAC;IACzG;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA9Q,GAAA;IAAAE,KAAA,EAKA,SAAAkR,6BAAoCZ,SAAiB,EAAQ;MACzD,IAAI,CAACX,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACW,YAAY,CAAChS,sBAAA,CAAAuR,cAAc,CAACC,IAAI,EAAEL,SAAS,CAAC,CAACM,GAAG,CAAC;IAClG;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA9Q,GAAA;IAAAE,KAAA,EAKA,SAAAoR,gCAAuCd,SAAiB,EAAQ;MAC5D,IAAI,CAACX,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACW,YAAY,CAAChS,sBAAA,CAAAuR,cAAc,CAACI,OAAO,EAAER,SAAS,CAAC,CAACM,GAAG,CAAC;IACrG;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA9Q,GAAA;IAAAE,KAAA,EAOA,SAAAqR,+BAAsCC,OAAgB,EAAQ;MAC1D,IAAI,CAAC3B,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACe,mBAAmB,CAACpS,sBAAA,CAAAuR,cAAc,CAACC,IAAI,EAAEW,OAAO,CAAC,CAACV,GAAG,CAAC;IACvG;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA9Q,GAAA;IAAAE,KAAA,EAOA,SAAAwR,kCAAyCF,OAAgB,EAAQ;MAC7D,IAAI,CAAC3B,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACe,mBAAmB,CAACpS,sBAAA,CAAAuR,cAAc,CAACI,OAAO,EAAEQ,OAAO,CAAC,CAACV,GAAG,CAAC;IAC1G;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA9Q,GAAA;IAAAE,KAAA,EAKA,SAAAyR,0CAAiDnB,SAAiB,EAAQ;MACtE,IAAI,CAACX,iBAAiB,CAACxQ,sBAAA,CAAAqR,qBAAqB,CAACkB,kBAAkB,CAACvS,sBAAA,CAAAuR,cAAc,CAACI,OAAO,EAAER,SAAS,CAAC,CAACM,GAAG,CAAC;IAC3G;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAA9Q,GAAA;IAAAE,KAAA,EAQA,SAAA2R,0BAAA,EAAgE;MAAA,IAAAC,MAAA;MAC5D,OAAO,IAAIpL,OAAO,CAAqB,UAACzD,OAAO,EAAEC,MAAM,EAAK;QACxD4O,MAAI,CAAC/C,SAAS,CACTgD,YAAY,CACT9S,gBAAA,CAAA+S,yBAAyB,CAACC,oBAAoB,EAC9C,CAAC,CAAC,CACL,CACA1O,IAAI,CAAC,UAAC2O,QAAQ,EAAK;UAChB,IAAMC,KAAK,GAAGD,QAAQ,CAACA,QAAQ;UAC/B,IAAIC,KAAK,CAACvO,KAAK,KAAK1E,gBAAA,CAAAkT,kBAAkB,CAACC,OAAO,EAAE;YAC5CpP,OAAO,CAACkP,KAAK,CAAC;UAClB,CAAC,MAAM,IAAIA,KAAK,CAACvO,KAAK,KAAK1E,gBAAA,CAAAkT,kBAAkB,CAACE,OAAO,EAAE;YACnDpP,MAAM,CAAC,IAAIW,KAAK,CAAC,wCAAwC,CAAC,CAAC;UAC/D,CAAC,MAAM,IAAIsO,KAAK,CAACvO,KAAK,KAAK1E,gBAAA,CAAAkT,kBAAkB,CAACG,uBAAuB,EAAE;YACnE,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,EAAgD,EAAW;cAC1EA,EAAE,CAACC,cAAc,EAAE;cACnB,IAAM3E,OAAO,GAAG0E,EAAE,CAACE,MAAM;cACzB,IAAI5E,OAAO,CAACM,IAAI,CAACuE,mBAAmB,KAAKV,QAAQ,CAACW,SAAS,EAAE;cAC7D,IAAI9E,OAAO,CAACM,IAAI,CAACzK,KAAK,KAAK1E,gBAAA,CAAAkT,kBAAkB,CAACC,OAAO,EAAE;gBACnDpP,OAAO,CAAC8K,OAAO,CAACM,IAAI,CAAC;gBACrByD,MAAI,CAAC/C,SAAS,CAAC+D,KAAK,CAAC/E,OAAO,EAA8B,CAAC,CAAC,CAAC,CAAC,CAAC;cACnE,CAAC,MAAM,IAAIA,OAAO,CAACM,IAAI,CAACzK,KAAK,KAAK1E,gBAAA,CAAAkT,kBAAkB,CAACE,OAAO,EAAE;gBAC1DpP,MAAM,CAAC,IAAIW,KAAK,CAAC,wCAAwC,CAAC,CAAC;gBAC3DiO,MAAI,CAAC/C,SAAS,CAAC+D,KAAK,CAAC/E,OAAO,EAA8B,CAAC,CAAC,CAAC,CAAC,CAAC;cACnE,CAAC,MAAM;gBACH7K,MAAM,CAAC,IAAIW,KAAK,CAAC,0BAA0B,GAAGsO,KAAK,CAACvO,KAAK,CAAC,CAAC;gBAC3DkO,MAAI,CAAC/C,SAAS,CAAC+D,KAAK,CAAC/E,OAAO,EAA+B;kBACvDtK,KAAK,EAAE;oBACH2K,OAAO,EAAE;kBACb;gBACJ,CAAC,CAAC;cACN;cACA0D,MAAI,CAACiB,GAAG,WAAAzC,MAAA,CAAWrR,gBAAA,CAAA+T,uBAAuB,CAACC,iBAAiB,GAAIT,SAAS,CAAC;YAC9E,CAAC;YACDV,MAAI,CAAC1C,EAAE,WAAAkB,MAAA,CAAWrR,gBAAA,CAAA+T,uBAAuB,CAACC,iBAAiB,GAAIT,SAAS,CAAC;UAC7E,CAAC,MAAM;YACHtP,MAAM,CAAC,IAAIW,KAAK,CAAC,iBAAiB,GAAGsO,KAAK,CAACvO,KAAK,CAAC,CAAC;UACtD;QACJ,CAAC,CAAC,SACI,CAACV,MAAM,CAAC;MACtB,CAAC,CAAC;IACN;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAlD,GAAA;IAAAE,KAAA,EAOA,SAAAgT,4BAAA,EAAoD;MAChD,OAAO,IAAI,CAACnE,SAAS,CAChBoE,IAAI,CAAClU,gBAAA,CAAA+S,yBAAyB,CAACoB,8BAA8B,EAAuC;QACjGnD,YAAY,EAAE,IAAI,CAACL;MACvB,CAAC,CAAC,CACDrM,IAAI,EAAE;IACf;;IAEA;AACJ;AACA;AACA;EAHI;IAAAvD,GAAA;IAAAE,KAAA,EAIA,SAAAmT,kBAAA,EAA0C;MACtC,OAAO,IAAI,CAACtE,SAAS,CAACoE,IAAI,CAAClU,gBAAA,CAAA+S,yBAAyB,CAACsB,aAAa,EAA8B,CAAC,CAAC,CAAC,CAAC/P,IAAI,EAAE;IAC9G;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAvD,GAAA;IAAAE,KAAA,EAKA,SAAAqT,YAAmBC,OAAkC,EAAiB;MAClE,OAAO,IAAI,CAACzE,SAAS,CAACoE,IAAI,CAAClU,gBAAA,CAAA+S,yBAAyB,CAACyB,WAAW,EAAED,OAAO,CAAC,CAACjQ,IAAI,EAAE;IACrF;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAAvD,GAAA;IAAAE,KAAA,EAMA,SAAAwT,kBAAyBxT,KAAc,EAAoB;MACvD,OAAO,IAAI,CAAC6O,SAAS,CAChBoE,IAAI,CAGHlU,gBAAA,CAAA+S,yBAAyB,CAAC2B,oBAAoB,EAAE;QAAEzT,KAAK,EAALA;MAAM,CAAC,CAAC,CAC3DqD,IAAI,CAAC,UAACgH,GAAG;QAAA,OAAKA,GAAG,CAACqJ,OAAO;MAAA,EAAC;IACnC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARI;IAAA5T,GAAA;IAAAE,KAAA,EASA,SAAA2T,gBACIC,GAAW,EACX1N,IAAY,EAIC;MAAA,IAHb2N,OAA4C,GAAArL,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAG,EAAE;MAAA,IACjD2F,IAA4B,GAAA3F,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAG,CAAC,CAAC;MAAA,IACjC3G,IAAgB,GAAA2G,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAGvJ,WAAA,CAAA6U,gBAAgB,CAACC,MAAM;MAE1C,OAAO,IAAI,CAAClF,SAAS,CAChBoE,IAAI,CAA8BlU,gBAAA,CAAA+S,yBAAyB,CAACkC,eAAe,EAAE;QAC1EnS,IAAI,EAAJA,IAAI;QACJ+R,GAAG,EAAHA,GAAG;QACH1N,IAAI,EAAJA,IAAI;QACJ2N,OAAO,EAAPA,OAAO;QACP1F,IAAI,EAAJA;MACJ,CAAC,CAAC,CACD9K,IAAI,EAAE;IACf;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAvD,GAAA;IAAAE,KAAA,EAKA,SAAAiU,iBAAA,EAA0E;MAAA,IAAlD9F,IAA4B,GAAA3F,SAAA,CAAA7C,MAAA,QAAA6C,SAAA,QAAAlE,SAAA,GAAAkE,SAAA,MAAG,CAAC,CAAC;MACrD,OAAO,IAAI,CAACqG,SAAS,CAACoE,IAAI,CAAyBlU,gBAAA,CAAA+S,yBAAyB,CAACoC,gBAAgB,EAAE/F,IAAI,CAAC,CAAC9K,IAAI,EAAE;IAC/G;EAAC;IAAAvD,GAAA;IAAAE,KAAA,EAED,SAAAmU,cACI7D,SAAiB,EACjB8D,OAAgB,EAChBjE,MAAe,EACfkE,KAAc,EACdC,aAAsB,EACmB;MACzC,OAAO,IAAI,CAACC,SAAS,CAACjE,SAAS,EAAEhM,SAAS,EAAE8P,OAAO,EAAEjE,MAAM,EAAEkE,KAAK,EAAEC,aAAa,CAAC;IACtF;EAAC;IAAAxU,GAAA;IAAAE,KAAA,EAED,SAAAwU,eACIlE,SAAiB,EACjBC,QAAgB,EAChB6D,OAAgB,EAChBjE,MAAe,EACfkE,KAAc,EACdC,aAAsB,EACmB;MACzC,OAAO,IAAI,CAACC,SAAS,CAACjE,SAAS,EAAEC,QAAQ,EAAE6D,OAAO,EAAEjE,MAAM,EAAEkE,KAAK,EAAEC,aAAa,CAAC;IACrF;EAAC;IAAAxU,GAAA;IAAAE,KAAA,EAED,SAAAuU,UACIjE,SAAiB,EACjBC,QAA4B,EAC5B6D,OAAgB,EAChBjE,MAAe,EACfkE,KAAc,EACdC,aAAsB,EACmB;MACzC,OAAO,IAAI,CAACzF,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAAC2C,SAAS,EAAAxL,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA;QAE/BpH,IAAI,EAAEyO,SAAS;QACf8D,OAAO,EAAPA;MAAO,GACH7D,QAAQ,KAAKjM,SAAS,IAAI;QAAEoQ,SAAS,EAAEnE;MAAS,CAAC,GACjDJ,MAAM,KAAK7L,SAAS,IAAI;QAAEqQ,OAAO,EAAExE;MAAO,CAAC,GAC3CkE,KAAK,KAAK/P,SAAS,IAAI;QAAE+P,KAAK,EAALA;MAAM,CAAC,GAChCC,aAAa,KAAKhQ,SAAS,IAAI;QAAEsQ,eAAe,EAAEN;MAAc,CAAC,EAE5E;IACL;;IAEA;AACJ;AACA;EAFI;IAAAxU,GAAA;IAAAE,KAAA,EAGA,SAAA6U,mBACIC,OAAe,EACfC,MAAgC,EACkB;MAClD,OAAO,IAAI,CAAClG,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAACkD,yBAAyB,EACnD;QACIC,QAAQ,EAAEH,OAAO;QACjBC,MAAM,EAANA;MACJ,CAAC,CACJ;IACL;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAjV,GAAA;IAAAE,KAAA,EAOA,SAAAkV,aACI5E,SAAiB,EACjB6E,SAAkB,EAClBC,UAAgE,EACpB;MAC5C,OAAO,IAAI,CAACvG,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAACuD,YAAY,EACtC;QAAExT,IAAI,EAAEyO,SAAS;QAAE6E,SAAS,EAATA,SAAS;QAAEG,QAAQ,EAAEF;MAAW,CAAC,CACvD;IACL;EAAC;IAAAtV,GAAA;IAAAE,KAAA,EAED,SAAAuV,oBAA2BjF,SAAiB,EAAEkF,OAAsC,EAA+B;MAC/G,IAAMrH,IAAqC,GAAG;QAAEtM,IAAI,EAAEyO;MAAU,CAAC;MAEjE,IAAIkF,OAAO,EAAE;QACT,IAAIA,OAAO,CAAC/F,QAAQ,CAACrQ,QAAA,CAAAqW,OAAO,CAACC,OAAO,CAAC,EAAE;UACnCvH,IAAI,CAACwH,QAAQ,GAAGvW,QAAA,CAAAqW,OAAO,CAACC,OAAO;QACnC,CAAC,MAAM;UACHvH,IAAI,CAACwH,QAAQ,GAAGH,OAAO;QAC3B;MACJ;MACA,OAAO,IAAI,CAAC3G,SAAS,CAChBoE,IAAI,CAGHlU,gBAAA,CAAA+S,yBAAyB,CAAC8D,yBAAyB,EAAEzH,IAAI,CAAC,CAC3D9K,IAAI,CAAC,UAACwS,CAAC;QAAA,OAAKA,CAAC,CAACC,MAAM;MAAA,EAAC;IAC9B;EAAC;IAAAhW,GAAA;IAAAE,KAAA,EAED,SAAA+V,eACIzF,SAAiB,EACjB0F,KAAc,EACd1E,OAAgB,EAChBkE,OAAsC,EACtCS,KAA0B,EACL;MACrB,IAAM9H,IAAqC,GAAG;QAAEtM,IAAI,EAAEyO,SAAS;QAAEgB,OAAO,EAAEA;MAAQ,CAAC;MACnF,IAAI0E,KAAK,KAAK1R,SAAS,EAAE;QACrB6J,IAAI,CAAC6H,KAAK,GAAGA,KAAK;MACtB;MACA,IAAIR,OAAO,EAAE;QACT,IAAIA,OAAO,CAAC/F,QAAQ,CAACrQ,QAAA,CAAAqW,OAAO,CAACC,OAAO,CAAC,EAAE;UACnCvH,IAAI,CAACwH,QAAQ,GAAGvW,QAAA,CAAAqW,OAAO,CAACC,OAAO;QACnC,CAAC,MAAM;UACHvH,IAAI,CAACwH,QAAQ,GAAGH,OAAO;QAC3B;MACJ;MACA,IAAIS,KAAK,EAAE;QACP9H,IAAI,CAAC8H,KAAK,GAAGA,KAAK;MACtB;MACA,OAAO,IAAI,CAACpH,SAAS,CAChBoE,IAAI,CAGHlU,gBAAA,CAAA+S,yBAAyB,CAACoE,iBAAiB,EAAE/H,IAAI,CAAC,CACnD9K,IAAI,CAAC,UAACwS,CAAC;QAAA,OAAKA,CAAC,CAACC,MAAM;MAAA,EAAC;IAC9B;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlBI;IAAAhW,GAAA;IAAAE,KAAA;MAAA,IAAAmW,mBAAA,GAAA7N,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAmBA,SAAAiQ,QACIC,OAAe,EACflG,MAAe,EACfmG,YAAqB,EACrBhG,SAAkB,EAClB0F,KAAc,EACdO,IAAa,EACbC,EAAW,EACXC,SAAqB;QAAA,IAAAC,QAAA,EAAAvI,IAAA;QAAA,OAAA9O,mBAAA,GAAAyB,IAAA,UAAA6V,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA5P,IAAA,GAAA4P,QAAA,CAAAlS,IAAA;YAAA;cAAAkS,QAAA,CAAAlS,IAAA;cAAA,OAEE,IAAI,CAACmS,iBAAiB,EAAE;YAAA;cAAzCH,QAAQ,GAAAE,QAAA,CAAA5S,IAAA;cAAA,IACT0S,QAAQ,CAACjH,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAACC,OAAO,CAAC;gBAAAH,QAAA,CAAAlS,IAAA;gBAAA;cAAA;cAAA,MACxC,IAAIf,KAAK,CAAC,2DAA2D,CAAC;YAAA;cAG1EwK,IAAyC,GAAG;gBAC9C6I,QAAQ,EAAEX,OAAO;gBACjBY,QAAQ,EAAEX,YAAY;gBACtBY,UAAU,EAAE5G,SAAS;gBACrBqE,OAAO,EAAExE,MAAM;gBACfqG,EAAE,EAAFA,EAAE;gBACFD,IAAI,EAAJA,IAAI;gBACJP,KAAK,EAALA,KAAK;gBACLS,SAAS,EAATA;cACJ,CAAC;cAAA,OAAAG,QAAA,CAAAzS,MAAA,WAEM,IAAI,CAAC0K,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAACqF,oBAAoB,EAC9ChJ,IAAI,CACP;YAAA;YAAA;cAAA,OAAAyI,QAAA,CAAAzP,IAAA;UAAA;QAAA,GAAAiP,OAAA;MAAA,CACJ;MAAA,SAAAgB,mBAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAzB,mBAAA,CAAA1N,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA4O,kBAAA;IAAA;EAAA;IAAAtX,GAAA;IAAAE,KAAA,EAED,SAAA6X,gBACIvH,SAAiB,EACjB0F,KAAc,EACdzF,QAAiB,EACjBiF,OAAsC,EACjB;MACrB,IAAMrH,IAAqC,GAAG;QAC1CtM,IAAI,EAAEyO,SAAS;QACfoE,SAAS,EAAEnE,QAAQ,KAAKjM,SAAS,GAAG,IAAI,GAAGiM;MAC/C,CAAC;MACD,IAAIyF,KAAK,KAAK1R,SAAS,EAAE;QACrB6J,IAAI,CAAC6H,KAAK,GAAGA,KAAK;MACtB;MACA,IAAIR,OAAO,EAAE;QACT,IAAIA,OAAO,CAAC/F,QAAQ,CAACrQ,QAAA,CAAAqW,OAAO,CAACC,OAAO,CAAC,EAAE;UACnCvH,IAAI,CAACwH,QAAQ,GAAGvW,QAAA,CAAAqW,OAAO,CAACC,OAAO;QACnC,CAAC,MAAM;UACHvH,IAAI,CAACwH,QAAQ,GAAGH,OAAO;QAC3B;MACJ;MACA,OAAO,IAAI,CAAC3G,SAAS,CAChBoE,IAAI,CAGHlU,gBAAA,CAAA+S,yBAAyB,CAACoE,iBAAiB,EAAE/H,IAAI,CAAC,CACnD9K,IAAI,CAAC,UAACwS,CAAC;QAAA,OAAKA,CAAC,CAACC,MAAM;MAAA,EAAC;IAC9B;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAhW,GAAA;IAAAE,KAAA,EAOA,SAAA8X,sBAA6BC,QAAuB,EAAEC,SAAkB,EAAiB;MACrF,IAAID,QAAQ,KAAK7Y,mBAAA,CAAA+Y,oBAAoB,CAACC,KAAK,EAAE;QACzC,MAAM,IAAIvU,KAAK,CAAC,qCAAqC,CAAC;MAC1D;MACA,OAAO,IAAI,CAACkL,SAAS,CAChBoE,IAAI,CAA0ClU,gBAAA,CAAA+S,yBAAyB,CAACqG,qBAAqB,EAAE;QAC5FC,MAAM,EAAEL,QAAQ;QAChBM,OAAO,EAAEL;MACb,CAAC,CAAC,CACD3U,IAAI,EAAE;IACf;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAAvD,GAAA;IAAAE,KAAA,EAQA,SAAAsY,WAAkBC,GAAW,EAAiB;MAC1C,IAAI,CAACA,GAAG,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,qBAAqB,CAAC,EAAE;QAChD,MAAM,IAAI7U,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,OAAO,IAAI,CAACkL,SAAS,CAChBoE,IAAI,CAA6BlU,gBAAA,CAAA+S,yBAAyB,CAAC2G,eAAe,EAAE;QAAEF,GAAG,EAAHA;MAAI,CAAC,CAAC,CACpFlV,IAAI,EAAE;IACf;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAvD,GAAA;IAAAE,KAAA,EAKA,SAAA0Y,eAAA,EAA4D;MAAA,IAAAC,KAAA;MAAA,OAAAxL,mBAAA,cAAA9N,mBAAA,GAAA8G,IAAA,UAAAyS,SAAA;QAAA,IAAAC,aAAA,EAAAC,mBAAA;QAAA,OAAAzZ,mBAAA,GAAAyB,IAAA,UAAAiY,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhS,IAAA,GAAAgS,SAAA,CAAAtU,IAAA;YAAA;cAGlDoU,mBAAmB;gBAAA,IAAAG,IAAA,GAAA3Q,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAAG,SAAA+S,SAAO3G,EAA0C;kBAAA,OAAAlT,mBAAA,GAAAyB,IAAA,UAAAqY,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAApS,IAAA,GAAAoS,SAAA,CAAA1U,IAAA;sBAAA;wBACzE6N,EAAE,CAACC,cAAc,EAAE;wBACnBqG,aAAa,CAACtG,EAAE,CAACE,MAAM,CAACtE,IAAI,CAAC;wBAACiL,SAAA,CAAA1U,IAAA;wBAAA,OACxBiU,KAAI,CAAC9J,SAAS,CAAC+D,KAAK,CAAoCL,EAAE,CAACE,MAAM,EAAE,CAAC,CAAC,CAAC;sBAAA;sBAAA;wBAAA,OAAA2G,SAAA,CAAAjS,IAAA;oBAAA;kBAAA,GAAA+R,QAAA;gBAAA,CAC/E;gBAAA,gBAJKJ,mBAAmBA,CAAAO,GAAA;kBAAA,OAAAJ,IAAA,CAAAxQ,KAAA,OAAAD,SAAA;gBAAA;cAAA,KAMzB;cACA;cACAmQ,KAAI,CAACzJ,EAAE,WAAAkB,MAAA,CAAWrR,gBAAA,CAAA+T,uBAAuB,CAACwG,iBAAiB,GAAIR,mBAAmB,CAAC;;cAEnF;cAAA,MACIH,KAAI,CAACY,kBAAkB,KAAK,CAAC;gBAAAP,SAAA,CAAAtU,IAAA;gBAAA;cAAA;cAAAsU,SAAA,CAAAhS,IAAA;cAAAgS,SAAA,CAAAtU,IAAA;cAAA,OAAAuI,oBAAA,CAEnB0L,KAAI,CAAC9J,SAAS,CAACoE,IAAI,CAA6BlU,gBAAA,CAAA+S,yBAAyB,CAAC0H,gBAAgB,EAAE,CAAC,CAAC,CAAC;YAAA;cAAAR,SAAA,CAAAtU,IAAA;cAAA;YAAA;cAAAsU,SAAA,CAAAhS,IAAA;cAAAgS,SAAA,CAAAS,EAAA,GAAAT,SAAA;cAErGL,KAAI,CAAC9F,GAAG,WAAAzC,MAAA,CAAWrR,gBAAA,CAAA+T,uBAAuB,CAACwG,iBAAiB,GAAIR,mBAAmB,CAAC;cAAC,MAAAE,SAAA,CAAAS,EAAA;YAAA;cAI7Fd,KAAI,CAACY,kBAAkB,EAAE;cAACP,SAAA,CAAAhS,IAAA;YAAA;cAAA,KAIf,IAAI;gBAAAgS,SAAA,CAAAtU,IAAA;gBAAA;cAAA;cAAAsU,SAAA,CAAAtU,IAAA;cAAA,OAAAuI,oBAAA,CACK,IAAIzG,OAAO,CAAc,UAACzD,OAAO;gBAAA,OAAM8V,aAAa,GAAG9V,OAAO;cAAA,CAAC,CAAC;YAAA;cAAAiW,SAAA,CAAAtU,IAAA;cAA5E,OAAAsU,SAAA,CAAAhV,IAAA;YAA4E;cAAAgV,SAAA,CAAAtU,IAAA;cAAA;YAAA;cAAAsU,SAAA,CAAAhS,IAAA;cAGhF;cACA2R,KAAI,CAAC9F,GAAG,WAAAzC,MAAA,CAAWrR,gBAAA,CAAA+T,uBAAuB,CAACwG,iBAAiB,GAAIR,mBAAmB,CAAC;;cAEpF;cACA;cACAH,KAAI,CAACY,kBAAkB,EAAE;cAAC,MACtBZ,KAAI,CAACY,kBAAkB,KAAK,CAAC;gBAAAP,SAAA,CAAAtU,IAAA;gBAAA;cAAA;cAAAsU,SAAA,CAAAtU,IAAA;cAAA,OAAAuI,oBAAA,CACvB0L,KAAI,CAAC9J,SAAS,CAACoE,IAAI,CAA6BlU,gBAAA,CAAA+S,yBAAyB,CAAC4H,kBAAkB,EAAE,CAAC,CAAC,CAAC;YAAA;cAAA,OAAAV,SAAA,CAAAlR,MAAA;YAAA;YAAA;cAAA,OAAAkR,SAAA,CAAA7R,IAAA;UAAA;QAAA,GAAAyR,QAAA;MAAA;IAGnH;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA9Y,GAAA;IAAAE,KAAA;MAAA,IAAA2Z,oBAAA,GAAArR,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAMA,SAAAyT,SACIC,UAAkB,EAClB7D,KAAc;QAAA,IAAAU,QAAA,EAAAvI,IAAA;QAAA,OAAA9O,mBAAA,GAAAyB,IAAA,UAAAgZ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/S,IAAA,GAAA+S,SAAA,CAAArV,IAAA;YAAA;cAAAqV,SAAA,CAAArV,IAAA;cAAA,OAES,IAAI,CAACmS,iBAAiB,EAAE;YAAA;cAAzCH,QAAQ,GAAAqD,SAAA,CAAA/V,IAAA;cAAA,IACT0S,QAAQ,CAACjH,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAACkD,OAAO,CAAC;gBAAAD,SAAA,CAAArV,IAAA;gBAAA;cAAA;cAAA,MACxC,IAAIf,KAAK,CAAC,kEAAkE,CAAC;YAAA;cAGjFwK,IAA+C,GAAG;gBACpD8L,WAAW,EAAEJ,UAAU;gBACvB7D,KAAK,EAALA;cACJ,CAAC;cAAA,OAAA+D,SAAA,CAAA5V,MAAA,WAEM,IAAI,CAAC0K,SAAS,CAACoE,IAAI,CAGxBlU,gBAAA,CAAA+S,yBAAyB,CAACoI,0BAA0B,EAAE/L,IAAI,CAAC;YAAA;YAAA;cAAA,OAAA4L,SAAA,CAAA5S,IAAA;UAAA;QAAA,GAAAyS,QAAA;MAAA,CAChE;MAAA,SAAAO,oBAAAC,IAAA,EAAAC,IAAA;QAAA,OAAAV,oBAAA,CAAAlR,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA2R,mBAAA;IAAA;IAED;AACJ;AACA;AACA;EAHI;IAAAra,GAAA;IAAAE,KAAA;MAAA,IAAAsa,eAAA,GAAAhS,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAIA,SAAAoU,SAAA;QAAA,IAAA7D,QAAA,EAAAvI,IAAA;QAAA,OAAA9O,mBAAA,GAAAyB,IAAA,UAAA0Z,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzT,IAAA,GAAAyT,SAAA,CAAA/V,IAAA;YAAA;cAAA+V,SAAA,CAAA/V,IAAA;cAAA,OAC2B,IAAI,CAACmS,iBAAiB,EAAE;YAAA;cAAzCH,QAAQ,GAAA+D,SAAA,CAAAzW,IAAA;cAAA,IACT0S,QAAQ,CAACjH,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAAC4D,OAAO,CAAC;gBAAAD,SAAA,CAAA/V,IAAA;gBAAA;cAAA;cAAA,MACxC,IAAIf,KAAK,CAAC,6DAA6D,CAAC;YAAA;cAG5EwK,IAAgD,GAAG,CAAC,CAAC;cAAA,OAAAsM,SAAA,CAAAtW,MAAA,WAEpD,IAAI,CAAC0K,SAAS,CAACoE,IAAI,CAGxBlU,gBAAA,CAAA+S,yBAAyB,CAAC6I,2BAA2B,EAAExM,IAAI,CAAC;YAAA;YAAA;cAAA,OAAAsM,SAAA,CAAAtT,IAAA;UAAA;QAAA,GAAAoT,QAAA;MAAA,CACjE;MAAA,SAAAK,eAAA;QAAA,OAAAN,eAAA,CAAA7R,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAoS,cAAA;IAAA;IAED;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA9a,GAAA;IAAAE,KAAA;MAAA,IAAA6a,WAAA,GAAAvS,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAMA,SAAA2U,SAAwBC,IAA4B;QAAA,IAAArE,QAAA,EAAAvI,IAAA;QAAA,OAAA9O,mBAAA,GAAAyB,IAAA,UAAAka,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjU,IAAA,GAAAiU,SAAA,CAAAvW,IAAA;YAAA;cAAAuW,SAAA,CAAAvW,IAAA;cAAA,OACzB,IAAI,CAACmS,iBAAiB,EAAE;YAAA;cAAzCH,QAAQ,GAAAuE,SAAA,CAAAjX,IAAA;cAAA,IACT0S,QAAQ,CAACjH,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAAC4D,OAAO,CAAC;gBAAAO,SAAA,CAAAvW,IAAA;gBAAA;cAAA;cAAA,MACxC,IAAIf,KAAK,CAAC,wDAAwD,CAAC;YAAA;cAGvEwK,IAA4C,GAAG;gBACjD4M,IAAI,EAAJA;cACJ,CAAC;cAAA,OAAAE,SAAA,CAAA9W,MAAA,WAEM,IAAI,CAAC0K,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAACoJ,uBAAuB,EACjD/M,IAAI,CACP;YAAA;YAAA;cAAA,OAAA8M,SAAA,CAAA9T,IAAA;UAAA;QAAA,GAAA2T,QAAA;MAAA,CACJ;MAAA,SAAAK,WAAAC,IAAA;QAAA,OAAAP,WAAA,CAAApS,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA2S,UAAA;IAAA;IAED;AACJ;AACA;AACA;AACA;EAJI;IAAArb,GAAA;IAAAE,KAAA;MAAA,IAAAqb,aAAA,GAAA/S,iBAAA,cAAAjJ,mBAAA,GAAA8G,IAAA,CAKA,SAAAmV,SAA0BC,UAAkB;QAAA,IAAA7E,QAAA,EAAAvI,IAAA;QAAA,OAAA9O,mBAAA,GAAAyB,IAAA,UAAA0a,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzU,IAAA,GAAAyU,SAAA,CAAA/W,IAAA;YAAA;cAAA+W,SAAA,CAAA/W,IAAA;cAAA,OACjB,IAAI,CAACmS,iBAAiB,EAAE;YAAA;cAAzCH,QAAQ,GAAA+E,SAAA,CAAAzX,IAAA;cAAA,IACT0S,QAAQ,CAACjH,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAAC4D,OAAO,CAAC;gBAAAe,SAAA,CAAA/W,IAAA;gBAAA;cAAA;cAAA,MACxC,IAAIf,KAAK,CAAC,0DAA0D,CAAC;YAAA;cAGzEwK,IAA8C,GAAG;gBACnDuN,WAAW,EAAEH;cACjB,CAAC;cAAA,OAAAE,SAAA,CAAAtX,MAAA,WAEM,IAAI,CAAC0K,SAAS,CAACoE,IAAI,CACtBlU,gBAAA,CAAA+S,yBAAyB,CAAC6J,yBAAyB,EACnDxN,IAAI,CACP;YAAA;YAAA;cAAA,OAAAsN,SAAA,CAAAtU,IAAA;UAAA;QAAA,GAAAmU,QAAA;MAAA,CACJ;MAAA,SAAAM,aAAAC,IAAA;QAAA,OAAAR,aAAA,CAAA5S,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAoT,YAAA;IAAA;IAED;AACJ;AACA;AACA;EAHI;IAAA9b,GAAA;IAAAE,KAAA,EAIA,SAAA8b,MAAA,EAAqB;MAAA,IAAAC,MAAA;MACjB,IAAI,CAAClN,SAAS,CAACiN,KAAK,EAAE;MACtB,IAAI,CAACjF,iBAAiB,EAAE,CAACxT,IAAI,CAAC,UAACoK,CAAC,EAAK;QACjC,IAAIA,CAAC,CAACgC,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAACkF,OAAO,CAAC,EAAE;UACxCD,MAAI,CAAClM,0BAA0B,GAAG,IAAI;QAC1C;MACJ,CAAC,CAAC;IACN;EAAC;IAAA/P,GAAA;IAAAE,KAAA,EAED,SAAAmP,cAAsBoD,EAAkC,EAAwB;MAC5E,IAAM0J,QAAQ,GAAG,IAAIC,WAAW,WAAA9L,MAAA,CAAWmC,EAAE,CAACE,MAAM,CAACsC,MAAM,GAAI;QAC3DtC,MAAM,EAAEF,EAAE,CAACE,MAAM;QACjB0J,UAAU,EAAE;MAChB,CAAC,CAAC;MACF,IAAI,CAACC,IAAI,WAAAhM,MAAA,CAAWmC,EAAE,CAACE,MAAM,CAACsC,MAAM,GAAIkH,QAAQ,CAAC;MACjD,IAAI,CAACA,QAAQ,CAACI,gBAAgB,EAAE;QAC5B,QAAQ9J,EAAE,CAACE,MAAM,CAACsC,MAAM;UACpB,KAAKhW,gBAAA,CAAA+T,uBAAuB,CAACwJ,oBAAoB;YAC7C,OAAO,IAAI,CAACC,aAAa,CAAkChK,EAAE,CAACE,MAAM,CAAC;UACzE,KAAK1T,gBAAA,CAAA+T,uBAAuB,CAAC0J,YAAY;YACrC,OAAO,IAAI,CAACC,kBAAkB,CAA6BlK,EAAE,CAACE,MAAM,CAAC;UACzE,KAAK1T,gBAAA,CAAA+T,uBAAuB,CAAC4J,gBAAgB;YACzC,OAAO,IAAI,CAAC7N,SAAS,CAAC+D,KAAK,CAACL,EAAE,CAACE,MAAM,EAA8B,CAAC,CAAC,CAAC;UAAE;UAC5E,KAAK1T,gBAAA,CAAA+T,uBAAuB,CAAC6J,kBAAkB;YAC3C,OAAO,IAAI,CAAC9N,SAAS,CAAC+D,KAAK,CAACL,EAAE,CAACE,MAAM,EAA8B,CAAC,CAAC,CAAC;UAAE;UAC5E;YACI,OAAO,IAAI,CAAC5D,SAAS,CAAC+D,KAAK,CAACL,EAAE,CAACE,MAAM,EAA+B;cAChElP,KAAK,EAAE;gBACH2K,OAAO,EAAE,iCAAiC,GAAGqE,EAAE,CAACE,MAAM,CAACsC;cAC3D;YACJ,CAAC,CAAC;QAAC;MAEf;IACJ;EAAC;IAAAjV,GAAA;IAAAE,KAAA,EAED,SAAAuc,cAAsB1O,OAAwC,EAAQ;MAClE,IAAI,CAACgB,SAAS,CAAC+D,KAAK,CAAuC/E,OAAO,EAAE;QAChE+O,kBAAkB,EAAE/d,WAAA,CAAAge;MACxB,CAAC,CAAC;IACN;EAAC;IAAA/c,GAAA;IAAAE,KAAA,EAED,SAAA6W,kBAAA,EAAkD;MAAA,IAAAiG,MAAA;MAC9C,IAAIxN,KAAK,CAACC,OAAO,CAAC,IAAI,CAACwN,oBAAoB,CAAC,EAAE;QAC1C,OAAOvW,OAAO,CAACzD,OAAO,CAAC,IAAI,CAACga,oBAAoB,CAAC;MACrD;MAEA,OAAO,IAAI,CAAClO,SAAS,CAChBoE,IAAI,CACDlU,gBAAA,CAAA+S,yBAAyB,CAACwK,oBAAoB,EAC9C,CAAC,CAAC,CACL,CACAjZ,IAAI,CAAC,UAACwS,CAAC,EAAK;QACTiH,MAAI,CAACC,oBAAoB,GAAGlH,CAAC,CAAC+G,kBAAkB;QAChD,OAAO/G,CAAC,CAAC+G,kBAAkB;MAC/B,CAAC,CAAC,SACI,CAAC,UAAChQ,CAAC,EAAK;QACVoQ,OAAO,CAACC,IAAI,CAAC,qDAAqD,EAAErQ,CAAC,CAAC;QACtE,OAAO,EAAE;MACb,CAAC,CAAC;IACV;EAAC;IAAA9M,GAAA;IAAAE,KAAA,EAED,SAAAyc,mBAA2B5O,OAAmC,EAAwB;MAAA,IAAAqP,MAAA;MAClF,IAAI,IAAI,CAACtN,oBAAoB,EAAE;QAC3B,OAAO,IAAI,CAACf,SAAS,CAAC+D,KAAK,CAA8B/E,OAAO,EAAE;UAC9DtK,KAAK,EAAE;YACH2K,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN;;MAEA;MACA,OAAO,IAAI,CAAC2I,iBAAiB,EAAE,CAACxT,IAAI,CAAC,UAACoK,CAAC,EAAK;QACxC,IAAIA,CAAC,CAACgC,QAAQ,CAAC5Q,WAAA,CAAAiY,kBAAkB,CAACqG,OAAO,CAAC,EAAE;UACxCD,MAAI,CAACE,IAAI,WAAAhN,MAAA,CACKrR,gBAAA,CAAA+T,uBAAuB,CAAC6J,kBAAkB,GACpD,UAACpK,EAAiD,EAAK;YACnD2K,MAAI,CAAC1N,oBAAoB,GAAG+C,EAAE,CAACE,MAAM,CAACtE,IAAI,CAACkP,QAAQ;YACnDH,MAAI,CAACd,IAAI,CAAC,OAAO,CAAC;UACtB,CAAC,CACJ;QACL,CAAC,MAAM;UACH;UACAc,MAAI,CAACd,IAAI,CAAC,OAAO,CAAC;QACtB;;QAEA;QACAc,MAAI,CAACtN,oBAAoB,GAAG,IAAI;QAChC,OAAOsN,MAAI,CAACrO,SAAS,CAAC+D,KAAK,CAAkC/E,OAAO,EAAE;UAClEkC,YAAY,EAAEmN,MAAI,CAACxN;QACvB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EAAC;EAAA,OAAArB,SAAA;AAAA,EArwB0B3P,OAAA,CAAA4e,YAAY;AAAAhe,OAAA,CAAA+O,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}