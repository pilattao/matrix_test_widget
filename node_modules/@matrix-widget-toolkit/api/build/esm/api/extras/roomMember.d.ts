import { StateEvent } from '../types';
/**
 * The name of the room member state event.
 */
export declare const STATE_EVENT_ROOM_MEMBER = "m.room.member";
/**
 * The membership state of a user.
 */
export type MembershipState = 'join' | 'invite' | 'leave' | 'ban' | 'knock';
/**
 * The content of an `m.room.member` event.
 *
 * @remarks based on https://github.com/matrix-org/matrix-spec/blob/main/data/event-schemas/schema/m.room.member.yaml
 */
export type RoomMemberStateEventContent = {
    /**
     * The membership state of the user.
     */
    membership: MembershipState;
    /**
     * The display name for this user, if any.
     */
    displayname?: string | null;
    /**
     * The avatar URL for this user, if any.
     */
    avatar_url?: string | null;
};
/**
 * Validates that `event` is has a valid structure for a
 * {@link RoomMemberStateEventContent}.
 * @param event - The event to validate.
 * @returns True, if the event is valid.
 */
export declare function isValidRoomMemberStateEvent(event: StateEvent<unknown>): event is StateEvent<RoomMemberStateEventContent>;
